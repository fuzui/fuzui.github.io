<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>扶醉</title>
  
  <subtitle>fuzui.net</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://fuzui.net/"/>
  <updated>2019-11-07T08:22:19.916Z</updated>
  <id>https://fuzui.net/</id>
  
  <author>
    <name>王泽</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>&lt;转&gt;centos7下搭建ngrok服务器进行内网穿透</title>
    <link href="https://fuzui.net/centos7%E4%B8%8B%E6%90%AD%E5%BB%BAngrok%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.html"/>
    <id>https://fuzui.net/centos7下搭建ngrok服务器进行内网穿透.html</id>
    <published>2019-11-07T08:08:52.000Z</published>
    <updated>2019-11-07T08:22:19.916Z</updated>
    
    <content type="html"><![CDATA[<p>以下以阿里云centos7服务器为例，并且已经安装好git、golang</p><h3 id="一、下载ngrok"><a href="#一、下载ngrok" class="headerlink" title="一、下载ngrok"></a>一、下载ngrok</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /data/wwwroot</span><br><span class="line">git clone https://github.com/tutumcloud/ngrok.git</span><br></pre></td></tr></table></figure><h3 id="二、生成ngrok使用的https证书"><a href="#二、生成ngrok使用的https证书" class="headerlink" title="二、生成ngrok使用的https证书"></a>二、生成ngrok使用的https证书</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /data/wwwroot/ngrok</span><br><span class="line">NGROK_DOMAIN="ngrok.test.com"</span><br><span class="line">openssl genrsa -out base.key 2048</span><br><span class="line">openssl req -new -x509 -nodes -key base.key -days 10000 -subj "/CN=$NGROK_DOMAIN" -out base.pem</span><br><span class="line">openssl genrsa -out server.key 2048</span><br><span class="line">openssl req -new -key server.key -subj "/CN=$NGROK_DOMAIN" -out server.csr</span><br><span class="line">openssl x509 -req -in server.csr -CA base.pem -CAkey base.key -CAcreateserial -days 10000 -out server.crt</span><br></pre></td></tr></table></figure><p>并替换<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp base.pem assets/client/tls/ngrokroot.crt</span><br><span class="line">cp server.crt assets/server/tls/snakeoil.crt</span><br><span class="line">cp server.key assets/server/tls/snakeoil.key</span><br></pre></td></tr></table></figure></p><h3 id="三、编译服务端"><a href="#三、编译服务端" class="headerlink" title="三、编译服务端"></a>三、编译服务端</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make release-server</span><br></pre></td></tr></table></figure><p>生成<code>bin/ngrok</code></p><h3 id="四、编译客户端"><a href="#四、编译客户端" class="headerlink" title="四、编译客户端"></a>四、编译客户端</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GOOS=windows GOARCH=amd64 make release-client</span><br></pre></td></tr></table></figure><p>生成<code>bin/windows_amd64/ngrok.exe</code><br>把<code>ngrok.exe</code>下载到你电脑</p><blockquote><p>mac下编译： GOOS=darwin GOARCH=amd64 make release-client</p></blockquote><h3 id="五、运行服务端"><a href="#五、运行服务端" class="headerlink" title="五、运行服务端"></a>五、运行服务端</h3><p>后台运行<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./bin/ngrokd -tlsKey=server.key -tlsCrt=server.crt -domain="ngrok.test.com" -httpAddr=":3080" -httpsAddr=":3043" &gt;/dev/null 2&gt;log &amp;</span><br></pre></td></tr></table></figure></p><blockquote><p>注意事项<br>    1、3080，3043端口可以改成80，443，如果这两个端口空闲的话。<br>    2、阿里云安全组开放3080、3043、4443端口，4443是默认的客户端通信端口。<br>    3、iptables开放3080、3043、4443端口。<br>    4、添加两条域名解析ngrok和<em>.ngrok，第二条记得带上</em>.，不然无法匹配xxx.ngrok.test.com三级域名。</p></blockquote><h3 id="六、运行客户端"><a href="#六、运行客户端" class="headerlink" title="六、运行客户端"></a>六、运行客户端</h3><p>编辑配置文件ngrok.cfg<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server_addr: "ngrok.test.com:4443"</span><br><span class="line">trust_host_root_certs: false</span><br></pre></td></tr></table></figure></p><p>运行<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngrok -config=ngrok.cfg -subdomain abc 8080</span><br></pre></td></tr></table></figure></p><h3 id="七、如果80端口已经被其他程序占用，ngrok如何使用80端口，进行微信公众号开发本地调试？"><a href="#七、如果80端口已经被其他程序占用，ngrok如何使用80端口，进行微信公众号开发本地调试？" class="headerlink" title="七、如果80端口已经被其他程序占用，ngrok如何使用80端口，进行微信公众号开发本地调试？"></a>七、如果80端口已经被其他程序占用，ngrok如何使用80端口，进行微信公众号开发本地调试？</h3><p>因为微信公众号只支持80端口或443端口。<br><strong>方法一：</strong></p><p>如果你的服务器只用了80端口，那么你可以用443端口来开发。<br><strong>方法二：</strong></p><p>如果你的服务器80端口和443端口都被占用，且不能取消占用</p><ol><li>配置<code>ngrok.test.com</code>的80端口映射（使用nginx或apache对不同域名进行80端口映射）</li><li>设置代理和反向代理/都指向<code>http://test.ngrok.test.com:9080/</code></li><li>客户端只要设置前缀为test的ngrok代理，就可以通过<code>ngrok.test.com/xxx</code>直接访问</li></ol><p>为什么不直接指向<code>127.0.0.1:9080</code>?<br>试过了，没用，本地的9080端口虽然被<code>ngrok</code>占用，但无法直接通过<code>127.0.0.1:9080</code>访问。<br>所以我暂时只能再次发起http请求来进行转发。</p><p><strong>本文转自：</strong><br><em>作者：王乐城愚人云端<br>链接：<a href="https://www.jianshu.com/p/00794b151be7" target="_blank" rel="noopener">https://www.jianshu.com/p/00794b151be7</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以下以阿里云centos7服务器为例，并且已经安装好git、golang&lt;/p&gt;
&lt;h3 id=&quot;一、下载ngrok&quot;&gt;&lt;a href=&quot;#一、下载ngrok&quot; class=&quot;headerlink&quot; title=&quot;一、下载ngrok&quot;&gt;&lt;/a&gt;一、下载ngrok&lt;/h3&gt;&lt;
      
    
    </summary>
    
      <category term="linux" scheme="https://fuzui.net/categories/linux/"/>
    
    
      <category term="内网穿透" scheme="https://fuzui.net/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL导入sql文件</title>
    <link href="https://fuzui.net/PostgreSQL%E5%AF%BC%E5%85%A5sql%E6%96%87%E4%BB%B6.html"/>
    <id>https://fuzui.net/PostgreSQL导入sql文件.html</id>
    <published>2019-07-05T07:28:34.000Z</published>
    <updated>2019-07-05T07:29:22.170Z</updated>
    
    <content type="html"><![CDATA[<p>最近新项目中用到PostgreSQL，运行测试导入表结构和数据是必须的，用navicat导入sql文件报错，之后查询了一下资料，得到了正确的导入方式：<br><a id="more"></a><br>1.命令行（cmd或powershell）进入PostgreSQL安装目录<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd \PostgreSQL\11\bin</span><br></pre></td></tr></table></figure></p><p>2.执行语句<code>psql -d ethgateway -U ethgateway -f D:\Desktop\db.sql</code><br>这里我用的powershell，所以我的命令是<code>.\psql -d test -U fuzui -f D:\Desktop\db.sql</code></p><ul><li>-d 数据库名</li><li>-U 数据库用户名</li><li>-f sql文件路径<br>3.回车之后提示输入用户密码，然后静待完成就可以了。</li></ul><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190705130850.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近新项目中用到PostgreSQL，运行测试导入表结构和数据是必须的，用navicat导入sql文件报错，之后查询了一下资料，得到了正确的导入方式：&lt;br&gt;
    
    </summary>
    
      <category term="PostgreSQL" scheme="https://fuzui.net/categories/PostgreSQL/"/>
    
    
      <category term="PostgreSQL" scheme="https://fuzui.net/tags/PostgreSQL/"/>
    
  </entry>
  
  <entry>
    <title>git合并分支</title>
    <link href="https://fuzui.net/git%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF.html"/>
    <id>https://fuzui.net/git合并分支.html</id>
    <published>2019-07-05T07:28:18.000Z</published>
    <updated>2019-07-05T07:29:51.224Z</updated>
    
    <content type="html"><![CDATA[<p>将远程分支合并到自己分支上：<br>先在自己分支上，<br>切到目标分支，<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">`git checkout 你的分支名`</span><br><span class="line">`git fetch &lt;远程主机名&gt; 目标分支`</span><br><span class="line">`git merge &lt;远程主机名&gt;/目标分支`</span><br><span class="line"></span><br><span class="line">if（有冲突）&#123;</span><br><span class="line">解决冲突</span><br><span class="line">git add .</span><br><span class="line">git commit -m "解决冲突"</span><br><span class="line">&#125;</span><br><span class="line">git push -u &lt;远程主机名&gt; 目标分支</span><br></pre></td></tr></table></figure></p><p>fetch是只拉去，未合并，所以之后需要merge一下。<br>而pull是拉下来直接合并。</p><p>执行<code>git fetch &lt;远程主机名&gt; &lt;分支名&gt;</code>之后会出现一个<code>FETCH_HEAD</code>，通过<code>git log -b FETCH_HEAD</code>可查看（更新的文件名、作者、时间、代码），从而来判断是否产生冲突，最后决定是否merge到当前分支。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;将远程分支合并到自己分支上：&lt;br&gt;先在自己分支上，&lt;br&gt;切到目标分支，&lt;br&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;b
      
    
    </summary>
    
      <category term="git" scheme="https://fuzui.net/categories/git/"/>
    
    
      <category term="git" scheme="https://fuzui.net/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>《转》npm与package.json快速入门教程</title>
    <link href="https://fuzui.net/%E3%80%8A%E8%BD%AC%E3%80%8Bnpm%E4%B8%8Epackage-json%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B.html"/>
    <id>https://fuzui.net/《转》npm与package-json快速入门教程.html</id>
    <published>2019-07-05T07:26:00.000Z</published>
    <updated>2019-07-05T07:27:39.283Z</updated>
    
    <content type="html"><![CDATA[<p>npm 是前端开发广泛使用的包管理工具，之前使用 Weex 时看了阮一峰前辈的文章了解了一些，这次结合官方文章总结一下，加深下理解吧！</p><p>读完本文你将了解：<br>[toc]</p><h4 id="什么是-npm？"><a href="#什么是-npm？" class="headerlink" title="什么是 npm？"></a>什么是 npm？</h4><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20170802161055931.jpg" alt><br>官方文档中对它的介绍是：</p><blockquote><p>npm makes it easy for JavaScript developers to share and reuse code, and it makes it easy to update the code that you’re sharing.</p></blockquote><p>即： npm 是一个包管理器，它让 JavaScript 开发者分享、复用代码更方便（有点 maven 的感觉哈）。</p><p>在程序开发中我们常常需要依赖别人提供的框架，写 JS 也不例外。这些可以重复的框架代码被称作包（package）或者模块（module），一个包可以是一个文件夹里放着几个文件，同时有一个叫做 package.json 的文件。</p><p>一个网站里通常有几十甚至上百个 package，分散在各处，通常会将这些包按照各自的功能进行划分（类似我们安卓开发中的划分子模块），但是如果重复造一些轮子，不如上传到一个公共平台，让更多的人一起使用、参与这个特定功能的模块。</p><p>而 npm 的作用就是让我们发布、下载一些 JS 轮子更加方便。</p><p>我们可以去官方网站 <a href="https://www.npmjs.com/" target="_blank" rel="noopener">https://www.npmjs.com/</a> 浏览、搜索想要的轮子，也可以直接在命令行中 search 一下意中轮。<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20170802161507644.jpg" alt><br>使用 npm 后我们可以非常方便地查看依赖的轮子是否有更新、是否需要下载新版本。</p><p>现在我们知道 npm 是干什么的了。当人们说起 “npm” 时，可能在说三个东西：</p><p>1.一个网站，就是前面提到用于搜索 JS 模块的网站：<a href="https://www.npmjs.com/" target="_blank" rel="noopener">https://www.npmjs.com/</a><br>2.一个仓库，保存着人们分享的 JS 模块的大数据库<br>3.命令行里的客户端，开发者使用它来管理、安装、发布模块</p><p>只要开发者发布某个模块到仓库中，其他人就可以从 npm 网站或者命令行中下载、使用它了！</p><h4 id="安装-npm"><a href="#安装-npm" class="headerlink" title="安装 npm"></a>安装 npm</h4><p>npm 是依附于 node.js 的，我们可以去它的官网 <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a> 下载安装 node.js。</p><p>下载好 node.js, npm 也就有了，使用 npm -v 查看安装的 npm 版本：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">zhangshixin$</span><span class="bash"> node -v</span></span><br><span class="line">v6.10.0</span><br></pre></td></tr></table></figure></p><h4 id="更新-npm"><a href="#更新-npm" class="headerlink" title="更新 npm"></a>更新 npm</h4><p>npm 更新地可比 node 勤快多了，因此你下载的 node 附带的 npm 版本可能不是最新的，你可以使用如下命令下载最新 npm:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install npm@latest -g</span><br></pre></td></tr></table></figure></p><p>其中 install 不用介绍了，就是安装，后面的 <code>npm@latest</code> 就是 <code>&lt;packageName&gt;@&lt;version&gt;</code>的格式，我们在下载其他模块时也是这个格式。<code>-g</code> 代表全局安装。</p><h4 id="package-json-文件"><a href="#package-json-文件" class="headerlink" title="package.json 文件"></a>package.json 文件</h4><blockquote><p>package.json 文件非常重要，因此需要单独一小节介绍。</p></blockquote><p><strong>管理本地安装 npm 包的最好方式就是创建<code>package.json</code>文件。</strong></p><p>一个 package.json 文件可以有以下几点作用：</p><p>1.作为一个描述文件，描述了你的项目依赖哪些包<br>2.允许我们使用 “语义化版本规则”（后面介绍）指明你项目依赖包的版本<br>3.让你的构建更好地与其他开发者分享，便于重复使用</p><h5 id="package-json-如何创建"><a href="#package-json-如何创建" class="headerlink" title="package.json 如何创建"></a>package.json 如何创建</h5><p>使用 <code>npm init</code> 即可在当前目录创建一个 <code>package.json</code> 文件：<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20170802161624268.jpg" alt></p><p>如图所示，输入 <code>npm init</code> 后会弹出一堆问题，我们可以输入对应内容，也可以使用默认值。在回答一堆问题后输入 <code>yes</code> 就会生成图中所示内容的 <code>package.json</code> 文件。</p><p>如果嫌回答这一大堆问题麻烦，可以直接输入 <code>npm init --yes</code> 跳过回答问题步骤，直接生成默认值的 <code>package.json</code> 文件：<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20170802161642935.jpg" alt></p><h5 id="package-json-的内容"><a href="#package-json-的内容" class="headerlink" title="package.json 的内容"></a>package.json 的内容</h5><p>package.json 文件至少要有两部分内容：</p><p>1.“name”<br>        全部小写，没有空格，可以使用下划线或者横线<br>2.“version”<br>        x.x.x 的格式<br>        符合“语义化版本规则”</p><p>比如：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"shixinzhang-demo-package"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>其他内容：</p><ul><li>description：描述信息，有助于搜索</li><li>main: 入口文件，一般都是 index.js</li><li>scripts：支持的脚本，默认是一个空的 test</li><li>keywords：关键字，有助于在人们使用 npm search 搜索时发现你的项目</li><li>author：作者信息</li><li>license：默认是 MIT</li><li>bugs：当前项目的一些错误信息，如果有的话</li></ul><p>我们可以为 init 命令设置一些默认值，比如：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> npm <span class="built_in">set</span> init.author.email <span class="string">"shixinzhang2016@gmail.com"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> npm <span class="built_in">set</span> init.author.name <span class="string">"shixinzhang"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> npm <span class="built_in">set</span> init.license <span class="string">"MIT"</span></span></span><br></pre></td></tr></table></figure></p><blockquote><p>注意：<br>如果 package.json 中没有 description 信息，npm 使用项目中的 README.md 的第一行作为描述信息。这个描述信息有助于别人搜索你的项目，因此建议好好写 description 信息。</p></blockquote><h5 id="指定依赖的包"><a href="#指定依赖的包" class="headerlink" title="指定依赖的包"></a>指定依赖的包</h5><p>我们需要在 <code>package.json</code> 文件中指定项目依赖的包，这样别人在拿到这个项目时才可以使用 <code>npm install</code> 下载。</p><p>包有两种依赖方式：</p><p>1.<code>dependencies</code>：在生产环境中需要用到的依赖<br>2.<code>devDependencies</code>：在开发、测试环境中用到的依赖</p><p>举个例子：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="attr">"name"</span>: <span class="string">"my-weex-demo"</span>, <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>, <span class="attr">"description"</span>: <span class="string">"a weex project"</span>, <span class="attr">"main"</span>: <span class="string">"index.js"</span>, <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">        <span class="attr">"build"</span>: <span class="string">"weex-builder src dist"</span>,</span><br><span class="line">        <span class="attr">"build_plugin"</span>: <span class="string">"webpack --config ./tools/webpack.config.plugin.js --color"</span>,</span><br><span class="line">        <span class="attr">"dev"</span>: <span class="string">"weex-builder src dist -w"</span>,</span><br><span class="line">        <span class="attr">"serve"</span>: <span class="string">"serve -p 8080"</span></span><br><span class="line">    &#125;, <span class="attr">"keywords"</span>: [</span><br><span class="line">        <span class="string">"weex"</span></span><br><span class="line">    ], <span class="attr">"author"</span>: <span class="string">"fkysly@gmail.com"</span>, <span class="attr">"license"</span>: <span class="string">"MIT"</span>, <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">        <span class="attr">"babel-core"</span>: <span class="string">"^6.14.0"</span>,</span><br><span class="line">        <span class="attr">"babel-loader"</span>: <span class="string">"^6.2.5"</span>,</span><br><span class="line">        <span class="attr">"babel-preset-es2015"</span>: <span class="string">"^6.18.0"</span>,</span><br><span class="line">        <span class="attr">"vue-loader"</span>: <span class="string">"^10.0.2"</span>,</span><br><span class="line">        <span class="attr">"eslint"</span>: <span class="string">"^3.5.0"</span>,</span><br><span class="line">        <span class="attr">"serve"</span>: <span class="string">"^1.4.0"</span>,</span><br><span class="line">        <span class="attr">"webpack"</span>: <span class="string">"^1.13.2"</span>,</span><br><span class="line">        <span class="attr">"weex-loader"</span>: <span class="string">"^0.3.3"</span>,</span><br><span class="line">        <span class="attr">"weex-builder"</span>: <span class="string">"^0.2.6"</span></span><br><span class="line">    &#125;, <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">        <span class="attr">"weex-html5"</span>: <span class="string">"^0.3.2"</span>,</span><br><span class="line">        <span class="attr">"weex-components"</span>: <span class="string">"*"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h5 id="Semantic-versioning（语义化版本规则）"><a href="#Semantic-versioning（语义化版本规则）" class="headerlink" title="Semantic versioning（语义化版本规则）"></a>Semantic versioning（语义化版本规则）</h5><p><a href="https://docs.npmjs.com/getting-started/semantic-versioning" target="_blank" rel="noopener">https://docs.npmjs.com/getting-started/semantic-versioning</a></p><p><code>dependencies</code> 的内容，以 <code>&quot;weex-html5&quot;: &quot;^0.3.2&quot;</code> 为例，我们知道 key 是依赖的包名称，value 是这个包的版本。那版本前面的 ^ 或者版本直接是一个 * 是什么意思呢？</p><p>这就是 npm 的 “Semantic versioning”，简称”Semver”，中文含义即“语义化版本规则”。</p><p>在安卓开发中我们有过这样的经验：有时候依赖的包升级后大改版，之前提供的接口不见了，这对使用者的项目可能造成极大的影响。</p><p>因此我们在声明对某个包的依赖时需要指明是否允许 update 到新版本，什么情况下允许更新。<br><strong>这就需要先了解 npm 包提供者应该注意的版本号规范。</strong><br>如果一个项目打算与别人分享，应该从 1.0.0 版本开始。以后要升级版本应该遵循以下标准：</p><ul><li>补丁版本：解决了 Bug 或者一些较小的更改，增加最后一位数字，比如 1.0.1</li><li>小版本：增加了新特性，同时不会影响之前的版本，增加中间一位数字，比如 1.1.0</li><li>大版本：大改版，无法兼容之前的，增加第一位数字，比如 2.0.0</li></ul><p><strong>了解了提供者的版本规范后， npm 包使用者就可以针对自己的需要填写依赖包的版本规则。</strong><br>作为使用者，我们可以在 package.json 文件中写明我们可以接受这个包的更新程度（假设当前依赖的是 1.0.4 版本）：</p><ul><li>如果只打算接受补丁版本的更新（也就是最后一位的改变），就可以这么写：<pre><code>1.01.0.x~1.0.4</code></pre></li><li>如果接受小版本的更新（第二位的改变），就可以这么写：<pre><code>11.x^1.0.4</code></pre></li><li>如果可以接受大版本的更新（自然接受小版本和补丁版本的改变），就可以这么写：<pre><code>*x</code></pre></li></ul><p>小结一下：<strong>总共三种版本变化类型，接受依赖包哪种类型的更新，就把版本号准确写到前一位。</strong></p><h4 id="安装-package"><a href="#安装-package" class="headerlink" title="安装 package"></a>安装 package</h4><p>使用 npm 安装 package 有两种方式：本地（当前项目路径）安装 或者 全局安装。</p><p>你选择哪种安装方式取决于你将如何使用这个包：</p><ul><li>如果你只是想在当前项目里用 <code>require()</code> 加载使用，那你可以安装到本地<pre><code>` npm install` 默认就是安装到本地的</code></pre></li><li>如果你想要在命令行里直接使用，比如 <code>grunt CLI</code>，就需要安装到全局了</li></ul><p>如果在你的项目里有 <code>package.json</code> 文件，运行<code>npm install</code> 后它会查找文件中列出的依赖包，然后下载符合语义化版本规则的版本。</p><p><code>npm install</code> 默认会安装<code>package.json</code> 中 <code>dependencies</code> 和 <code>devDependencies</code> 里的所有模块。</p><p>如果想只安装 <code>dependencies</code> 中的内容，可以使用 <code>--production</code> 字段：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --production</span><br></pre></td></tr></table></figure></p><h5 id="本地安装-package"><a href="#本地安装-package" class="headerlink" title="本地安装 package"></a>本地安装 package</h5><p>npm 使用下面的命令下载一个包：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install &lt;package_name&gt;</span><br></pre></td></tr></table></figure></p><p>后面就是要安装包的名称。这个命令会在当前目录创建一个 node_modules 目录，然后下载我们指定的包到这个目录中。<br>举个例子：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">zhangshixindeMacBook-Pro:publish-pkg zhangshixin$ npm install lodash zhangshixindeMacBook-Pro:publish-pkg zhangshixin$ ls </span><br><span class="line">index.js    package-lock.json </span><br><span class="line">node_modules     package.json </span><br><span class="line">zhangshixindeMacBook-Pro:publish-pkg zhangshixin$ ls node_modules/ </span><br><span class="line">lodash</span><br></pre></td></tr></table></figure></p><p>下载后的项目文件夹：<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20170802161757733.jpg" alt><br><strong>安装指定版本：</strong><br><code>npm install</code> 默认安装最新版本，如果想要安装指定版本，可以在库名称后加<code>@版本号</code>：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install sax@latest</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install sax@0.1.1</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install sax@<span class="string">"&gt;=0.1.0 &lt;0.2.0"</span></span></span><br></pre></td></tr></table></figure></p><p>如果当前项目有 package.json 文件，下载包时会下载这个文件中指定的版本；<br>如果当前项目中没有 package.json 文件，就会下载指定包的最新版本。</p><blockquote><p>有时下载会报错：<code>npm install error saveError ENOENT: no such file or directory, open &#39;/Users/zhangshixin/package.json&#39;</code><br>解决办法：<br>-在目录下执行 <code>npm init</code> 创建 <code>package.json</code>，输入初始化信息<br>-然后再执行下载命令</p></blockquote><h6 id="安装参数-–save-和-–save-dev"><a href="#安装参数-–save-和-–save-dev" class="headerlink" title="安装参数 –save 和 –save -dev"></a>安装参数 –save 和 –save -dev</h6><p>添加依赖时我们可以手动修改 <code>package.json</code> 文件，添加或者修改 <code>dependencies devDependencies</code> 中的内容即可。</p><p>另一种更酷的方式是用命令行，在使用 <code>npm install</code> 时增加 <code>--save</code> 或者<code>--save -dev</code> 后缀：</p><ul><li><code>npm install &lt;package_name&gt; --save</code> 表示将这个包名及对应的版本添加到 <code>package.json</code>的 <code>dependencies</code></li><li><code>npm install &lt;package_name&gt; --save-dev</code> 表示将这个包名及对应的版本添加到 <code>package.json</code>的 <code>devDependencies</code></li></ul><h6 id="使用下载好的包"><a href="#使用下载好的包" class="headerlink" title="使用下载好的包"></a>使用下载好的包</h6><p>下载后 <code>node_modules</code> 文件夹中有要使用的包，我们就可以使用其中的代码了。<br>比如在 Node.js 项目中，我们可以用 <code>require(XXX)</code> 引入它。</p><p>举个例子：<br>创建一个 index.js 文件，写入如下代码：<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20170802161841795.jpg" alt><br>在使用 <code>require(&#39;lodash&#39;)</code> 后引入了 lodash 库，然后调用了它的<code>without()</code> 方法，这个方法可以去除第一个数组参数中与第二个参数重复的数据。<br>保存这个文件后，使用 <code>node index.js</code> 运行这个文件，成功的话就可以得到运行结果；如果之前安装失败，可能就会遇到这个错误：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">module.js:340</span><br><span class="line">    throw err;</span><br><span class="line">          ^</span><br><span class="line">Error: Cannot find module 'lodash'</span><br></pre></td></tr></table></figure></p><p>这时你需要在这个目录下重新运行<code>npm install lodash</code> 安装。</p><h6 id="更新本地-package"><a href="#更新本地-package" class="headerlink" title="更新本地 package"></a>更新本地 package</h6><p>有时候我们想知道依赖的包是否有新版本，可以使用 <code>npm outdated</code> 查看，如果发现有的包有新版本，就可以使用<code>npm update &lt;package-name&gt;</code> 更新它，或者直接 <code>npm update</code> 更新所有：</p><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20170802161913271.jpg" alt><br>上图中，我们在输入 npm update 后发现本地的 lodash 模块还不是最新的，这是为什么呢？</p><p>原来，npm update 的工作过程是这样的：</p><p>1.先到远程仓库查询最新版本<br>2.然后对比本地版本，如果本地版本不存在，或者远程版本较新<br>3.查看 package.json 中对应的语义版本规则<br>4.如果当前新版本符合语义规则，就更新，否则不更新</p><p>一开始我本地的 package.json 的依赖是这样的：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"dependencies": &#123;</span><br><span class="line">  "lodash": "^3.1.0"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>根据前面的介绍我们可以知道，这表示只接受小版本或者补丁版本的更新，因此在执行了一次 <code>npm update</code> 后它变成了这样：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"dependencies": &#123;</span><br><span class="line">  "lodash": "^3.10.1"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>第二位升到了最高，但是无法更新第一位，因此无法更新到最新的 4.17.4。</p><p>所以我需要把它修改成：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"dependencies": &#123;</span><br><span class="line">  "lodash": "*"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这表示任何版本的更新都接受，然后再执行 <code>npm update</code>，就发现更新成功了：<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/1562306537048.png" alt="enter description here"></p><p>小结一下：<br>执行<code>npm outdated</code> 后可以看到有三个版本号：<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20170802162051643.jpg" alt><br>第一个是当前 node_modules 中该模块的版本，第二个是 package.json 文件中声明的版本，第三个是远程仓库最新的版本。</p><p><strong>只有当前模块版本低于远程，package.json 中的版本语义规则满足情况，才能更新成功。</strong></p><h6 id="卸载本地-package"><a href="#卸载本地-package" class="headerlink" title="卸载本地 package"></a>卸载本地 package</h6><p>卸载一个本地 package 很简单，<code>npm uninstall &lt;package-name&gt;</code>即可：</p><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20170802162123881.jpg" alt></p><blockquote><p>官方文档说输入 npm uninstall –save lodash 才能在删除项目的同时移除 package.json 中对它的依赖。但我没加 –save 也达到了一样的效果，一脸懵逼。</p></blockquote><p>卸载后再<code>ls node_modules/</code> 查看目录下，发现没有东西，删除成功。</p><h5 id="全局安装-package"><a href="#全局安装-package" class="headerlink" title="全局安装 package"></a>全局安装 package</h5><p>如果你想要直接在命令行中使用某个包，比如 <code>jshint</code> ，你可以全局安装它。</p><p>全局安装比本地安装多了个<code>-g</code>:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g &lt;package-name&gt;</span><br></pre></td></tr></table></figure></p><p>以 <code>jshint</code> 为例，全局安装命令是：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g jshint</span><br></pre></td></tr></table></figure></p><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20170802162203397.jpg" alt><br>安装后可以使用 <code>npm ls -g --depth=0</code> 查看安装在全局第一层的包。</p><h6 id="全局安装的权限问题"><a href="#全局安装的权限问题" class="headerlink" title="全局安装的权限问题"></a>全局安装的权限问题</h6><p>在全局安装时可能会遇到 EACCES 权限问题，解决办法办法有如下 3 种：</p><p><strong>1.<code>sudo npm install -g jshint</code>，使用 <code>sudo</code> 简单粗暴，但是治标不治本</strong></p><p><strong>2.修改 npm 全局默认目录的权限</strong></p><p>先获取 npm 全局目录：<code>npm config get prefix</code>，一般都是<code>/usr/local</code>；<br>然后修改这个目录权限为当前用户：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R $(whoami) $(npm config get prefix)/&#123;lib/node_modules,bin,share&#125;</span><br></pre></td></tr></table></figure></p><p><strong>3.使用其他包管理器帮你解决这个问题</strong></p><p>实在懒得弄可以直接卸载 node，然后使用 Homebrew 重装 node:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure></p><p>Homebrew 会帮我们处理好权限的问题。</p><h6 id="更新全局的-package"><a href="#更新全局的-package" class="headerlink" title="更新全局的 package"></a>更新全局的 package</h6><p>想知道哪些包需要更新，可以使用 <code>npm outdated -g --depth=0</code>，然后使用 <code>npm update -g &lt;package&gt;</code>更新指定的包：</p><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20170802162241086.jpg" alt><br>要更新所有全局包，可以使用 <code>npm update -g</code>，可以发现对比本地的，只是多了个 -g。</p><p>不过官方说在 2.6.1 以下的 npm ，直接使用 <code>npm update -g</code> 并不安全，因为它会递归地更新所有全局依赖。</p><p>这种情况下可以使用 <code>npm-check</code> ，贴一张它的截图：<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20170802162336109.png" alt></p><p>Github 地址：<a href="https://github.com/dylang/npm-check" target="_blank" rel="noopener">https://github.com/dylang/npm-check</a></p><h6 id="卸载全局-package"><a href="#卸载全局-package" class="headerlink" title="卸载全局 package"></a>卸载全局 package</h6><p>一句搞定：<code>npm uninstall -g &lt;package&gt;</code></p><h4 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h4><h5 id="npm-run"><a href="#npm-run" class="headerlink" title="npm run"></a>npm run</h5><blockquote><p>部分摘自 <a href="http://javascript.ruanyifeng.com/nodejs/npm.html#toc12" target="_blank" rel="noopener">阮一峰的 NPM 教程</a></p></blockquote><p>npm 还可以直接运行 <code>package.json</code> 中 <code>scripts</code> 指定的脚本：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"demo"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"lint"</span>: <span class="string">"jshint **.js"</span>,</span><br><span class="line">    <span class="attr">"test"</span>: <span class="string">"mocha test/"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>npm run 是 npm run-script 的缩写。</strong><br>命令行输入 <code>npm run lint</code> 或者<code>npm run-script lint</code> 就会执行<code>jshint **.js</code>。</p><blockquote><p><code>npm run</code> 会创建一个Shell，执行指定的命令，并临时将node_modules/.bin加入PATH 变量，这意味着本地模块可以直接运行。</p></blockquote><p><code>package.json</code> 中的 <code>scripts</code> 执行的脚本是本地项目内 <code>node_modules -&gt; .bin</code> 内的脚本。<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">"build": "weex-builder src dist", </span><br><span class="line">"build_plugin": "webpack --config ./tools/webpack.config.plugin.js --color", </span><br><span class="line">"dev": "weex-builder src dist -w", </span><br><span class="line">"serve": "serve -p 8080"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20170802162754970.png" alt></p><p><strong>直接运行 npm run 会列出当前项目的 package.json 中 scripts 属性下的所有脚本命令。</strong></p><h5 id="npm-install-from-github"><a href="#npm-install-from-github" class="headerlink" title="npm install from github"></a>npm install from github</h5><p>npm install 也可以直接从 github 下载:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install git://github.com/package/path.git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install git://github.com/package/path.git<span class="comment">#0.1.0</span></span></span><br></pre></td></tr></table></figure></p><h5 id="npm-info"><a href="#npm-info" class="headerlink" title="npm info"></a>npm info</h5><p><code>npm info &lt;package-name&gt;</code> 可以查看指定包的信息：<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20170802162824379.jpg" alt></p><h5 id="npm-adduser"><a href="#npm-adduser" class="headerlink" title="npm adduser"></a>npm adduser</h5><p><code>npm adduser</code> 用于在npmjs.com注册一个用户:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm adduser</span></span><br><span class="line">Username: YOUR_USER_NAME</span><br><span class="line">Password: YOUR_PASSWORD</span><br><span class="line">Email: YOUR_EMAIL@domain.com</span><br></pre></td></tr></table></figure></p><h5 id="npm-home-repo"><a href="#npm-home-repo" class="headerlink" title="npm home/repo"></a>npm home/repo</h5><p><code>npm home &lt;package-name&gt;</code>命令可以打开指定模块的主页；<br><code>npm repo &lt;package-name&gt;</code>命令则是打开指定模块的代码仓库</p><h5 id="npm-prune"><a href="#npm-prune" class="headerlink" title="npm prune"></a>npm prune</h5><p>prune 即“修剪”的意思。</p><p><code>npm prune</code> 可以检查出当前项目的 <code>node_modules</code>目录中，没有在<code>package.json</code>里提到的模块。</p><h5 id="npm-publish"><a href="#npm-publish" class="headerlink" title="npm publish"></a>npm publish</h5><p>现在水平还不够，等写出可以复用的 JS 代码后，我们就可以将它发布到 npm 仓库上，类似 Github 的提交。</p><blockquote><p>这部分主要摘自 <a href="http://javascript.ruanyifeng.com/nodejs/npm.html#toc12" target="_blank" rel="noopener">阮一峰的 NPM 教程</a></p></blockquote><p>要想发布，首先需要使用 <code>npm adduser</code>向 npmjs.com申请用户名（当然去官网也可以）。</p><p>接着使用 <code>npm login</code> 在命令行中登录。</p><p>登录以后，就可以使用 <code>npm publish</code>命令发布。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm publish</span></span><br></pre></td></tr></table></figure></p><p>如果当前模块是一个beta版，比如1.3.1-beta.3，那么发布的时候需要使用tag参数，将其发布到指定标签，默认的发布标签是latest。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm publish --tag beta</span></span><br></pre></td></tr></table></figure></p><p>如果发布私有模块，模块初始化的时候，需要加上scope参数。只有npm的付费用户才能发布私有模块。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm init --scope=&lt;yourscope&gt;</span></span><br></pre></td></tr></table></figure></p><p>如果你的模块是用ES6写的，那么发布的时候，最好转成ES5。首先，需要安装Babel。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install --save-dev babel-cli@6 babel-preset-es2015@6</span></span><br></pre></td></tr></table></figure></p><p>然后，在<code>package.json</code>里面写入<code>build</code>脚本。<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">  "build": "babel source --presets babel-preset-es2015 --out-dir distribution",</span><br><span class="line">  "prepublish": "npm run build"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>运行上面的脚本，会将source目录里面的ES6源码文件，转为distribution目录里面的ES5源码文件。</p><h4 id="国内镜像"><a href="#国内镜像" class="headerlink" title="国内镜像"></a>国内镜像</h4><p>不翻的话有时候 npm 比较卡，可以使用国内的淘宝镜像 cnpm： <a href="https://npm.taobao.org" target="_blank" rel="noopener">https://npm.taobao.org</a> 。</p><p><code>cnpm</code> 支持 <code>npm</code> 除了 <code>publish</code> 之外的所有命令。</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20170802162917895.jpg" alt><br>经过这么一番总结，总算可以说 npm 入门了。</p><p>接触前端后发现这个圈子太复杂了，各种工具各种框架，眼花缭乱啊。一步一步来吧！</p><h4 id="Thanks"><a href="#Thanks" class="headerlink" title="Thanks"></a>Thanks</h4><p><a href="https://docs.npmjs.com/" target="_blank" rel="noopener">https://docs.npmjs.com/</a><br><a href="http://javascript.ruanyifeng.com/nodejs/npm.html#" target="_blank" rel="noopener">http://javascript.ruanyifeng.com/nodejs/npm.html#</a></p><hr><p>本文转载自一位大佬的博客：</p><p>作者：张拭心<br>原文：<a href="https://blog.csdn.net/u011240877/article/details/76582670" target="_blank" rel="noopener">https://blog.csdn.net/u011240877/article/details/76582670 </a></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;npm 是前端开发广泛使用的包管理工具，之前使用 Weex 时看了阮一峰前辈的文章了解了一些，这次结合官方文章总结一下，加深下理解吧！&lt;/p&gt;
&lt;p&gt;读完本文你将了解：&lt;br&gt;[toc]&lt;/p&gt;
&lt;h4 id=&quot;什么是-npm？&quot;&gt;&lt;a href=&quot;#什么是-npm？&quot; c
      
    
    </summary>
    
      <category term="nodeJs" scheme="https://fuzui.net/categories/nodeJs/"/>
    
    
      <category term="nodeJs" scheme="https://fuzui.net/tags/nodeJs/"/>
    
  </entry>
  
  <entry>
    <title>mysql利用存储过程批量插入一千万数据（半小时）</title>
    <link href="https://fuzui.net/mysql%E5%88%A9%E7%94%A8%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5%E4%B8%80%E5%8D%83%E4%B8%87%E6%95%B0%E6%8D%AE%EF%BC%88%E5%8D%8A%E5%B0%8F%E6%97%B6%EF%BC%89.html"/>
    <id>https://fuzui.net/mysql利用存储过程批量插入一千万数据（半小时）.html</id>
    <published>2019-07-01T08:49:43.000Z</published>
    <updated>2019-07-01T08:53:17.976Z</updated>
    
    <content type="html"><![CDATA[<p>示例：<br>向<code>user</code>表中插入一千万条数据，其中<code>user_id</code>11位手机号随机，可以重复；<code>age</code>为18-27之间；<code>count</code>随机金额，八位小数；<code>status</code>二百万数据为1，八百万数据为0。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 如果该名字存储过程已存在，则删除</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> proc_initData1;</span><br><span class="line"><span class="comment">-- 创建</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> proc_initData1 ( ) <span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span></span><br><span class="line">i <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">DECLARE</span></span><br><span class="line">uid <span class="built_in">VARCHAR</span> ( <span class="number">255</span> ) <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">DECLARE</span></span><br><span class="line"><span class="keyword">count</span> <span class="built_in">DECIMAL</span>(<span class="number">20</span>,<span class="number">8</span>) <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">DECLARE</span></span><br><span class="line">op <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">DECLARE</span></span><br><span class="line">age <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">START</span> <span class="keyword">TRANSACTION</span>;</span><br><span class="line">WHILE</span><br><span class="line">i &lt;= 10000000 DO</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">CONCAT</span>( <span class="string">'1'</span>, <span class="keyword">CEILING</span>( <span class="keyword">RAND</span>( ) * <span class="number">9000000000</span>+<span class="number">1000000000</span> ) ) <span class="keyword">INTO</span> uid;</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">FLOOR</span>( <span class="number">18</span> + ( <span class="keyword">RAND</span>( ) * <span class="number">9</span> ) ) <span class="keyword">INTO</span> age;</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">ROUND</span>( ( <span class="number">10</span> + ( <span class="keyword">RAND</span>( ) * <span class="number">1001</span> ) ), <span class="number">8</span> ) <span class="keyword">INTO</span> <span class="keyword">count</span>;</span><br><span class="line">IF</span><br><span class="line">i % 5 = 0 THEN</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">user</span> ( user_id, age, <span class="keyword">count</span>, <span class="keyword">status</span> )</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( uid, age, <span class="keyword">count</span>, <span class="number">1</span>);</span><br><span class="line">ELSE <span class="keyword">INSERT</span> <span class="keyword">INTO</span> ryw_intelligent_dog ( user_id, age, <span class="keyword">count</span>, <span class="keyword">status</span>)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( uid, age, <span class="keyword">count</span>, <span class="number">0</span> );</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> i = i + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span> <span class="keyword">WHILE</span>;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 调用</span></span><br><span class="line"><span class="keyword">CALL</span> proc_initData1 ( );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除表数据</span></span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure></p><p>亲测需要半小时左右，前提删除索引，引擎innodb。<br>总结：在开始编写时并未使用事物手动提交，导致数据量插入非常慢。在批量插入大量数据时，要删除索引，并开启事物手动提交。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;示例：&lt;br&gt;向&lt;code&gt;user&lt;/code&gt;表中插入一千万条数据，其中&lt;code&gt;user_id&lt;/code&gt;11位手机号随机，可以重复；&lt;code&gt;age&lt;/code&gt;为18-27之间；&lt;code&gt;count&lt;/code&gt;随机金额，八位小数；&lt;code&gt;status
      
    
    </summary>
    
      <category term="mysql" scheme="https://fuzui.net/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://fuzui.net/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>PowerDesigner连接MySQL和逆向工程图</title>
    <link href="https://fuzui.net/PowerDesigner%E8%BF%9E%E6%8E%A5MySQL%E5%92%8C%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E5%9B%BE.html"/>
    <id>https://fuzui.net/PowerDesigner连接MySQL和逆向工程图.html</id>
    <published>2019-05-12T15:21:27.000Z</published>
    <updated>2019-05-12T15:23:59.934Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0、写在前面的话"><a href="#0、写在前面的话" class="headerlink" title="0、写在前面的话"></a>0、写在前面的话</h3><p>最近想梳理公司项目的表间关系，从项目后台管理系统的操作入手，以及代码的hibernate注解入手，都不算特别尽人意，于是最后还是鼓捣了一下PowerDesigner的逆向工程图，这样更直观一些。</p><p>想着以后不论项目切换或者接手的时候肯定是用得上的，所以在这里也记录一下，毕竟，好记性不如烂笔头，更何况我这还不是好记性。看网上有个哥们说他已经是三次忘了步骤了，所以我吸取教训赶紧第一次就记录下来。</p><h3 id="1、MySQL数据库连接（JDBC方式）"><a href="#1、MySQL数据库连接（JDBC方式）" class="headerlink" title="1、MySQL数据库连接（JDBC方式）"></a>1、MySQL数据库连接（JDBC方式）</h3><p>JDBC的配置方式需要一些基础的环境和准备，但是也很简单，无非也就是JDK和mysql的连接jar包，这里不再展开阐述。</p><h4 id="1-1-新建一个pdm，dbms选择mysql"><a href="#1-1-新建一个pdm，dbms选择mysql" class="headerlink" title="1.1 新建一个pdm，dbms选择mysql"></a>1.1 新建一个pdm，dbms选择mysql</h4><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/1007017-20180612095640002-283316605.png" alt></p><h4 id="1-2-Database-Connect-选择数据库连接"><a href="#1-2-Database-Connect-选择数据库连接" class="headerlink" title="1.2 Database - Connect  选择数据库连接"></a>1.2 Database - Connect  选择数据库连接</h4><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/1007017-20180612095640508-571441195.png" alt><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/1007017-20180612095640508-571441195.png" alt></p><h4 id="1-3-配置连接信息"><a href="#1-3-配置连接信息" class="headerlink" title="1.3 配置连接信息"></a>1.3 配置连接信息</h4><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/1007017-20180612095640959-1250308803.png" alt><br>数据库连接这里是通过一个配置文件来获取连接信息的，首次的话因为没有，所以我们需要选择Configure进行配置。</p><h4 id="1-4-填写配置信息"><a href="#1-4-填写配置信息" class="headerlink" title="1.4 填写配置信息"></a>1.4 填写配置信息</h4><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/1007017-20180612095641414-961686070.png" alt><br>如图，选择添加数据库资源，出现如上，相关说明如下：</p><ul><li>Connection profile name：JDBC配置文件名称，可随意填写<ul><li>Directory：配置文件保存路径</li><li>Description：配置文件描述，可根据实际用途填写</li><li>Connection type：连接方式，这里我们选择JDBC</li><li>DBMS type：数据库类型，提供大部分主流数据库选择，我们选择MySQL</li><li>User name：登录数据库的用户名</li><li>JDBC driver class：指定驱动类，使用默认的com.mysql.jdbc.Driver</li><li>JDBC connection URL：连接URL，格式jdbc:mysql://ServerIP/Hostname:port/database</li><li>JDBC driver jar files：指定连接的jar包路径<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/1007017-20180612095641803-1261491304.png" alt></li></ul></li></ul><h4 id="1-5-连接测试和配置保存"><a href="#1-5-连接测试和配置保存" class="headerlink" title="1.5 连接测试和配置保存"></a>1.5 连接测试和配置保存</h4><p>如图填写信息完成后，点击左下角的 Test Connection，出现成功提示则说明连接可行：<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/1007017-20180612095642254-1736432433.png" alt><br>如果测试连接不通过，且出现 Non SQL Error : Could not load class com.mysql.jdbc.Drive 的错误，而指定的jar包没有问题，那么是因为PowerDesigner无法找到驱动所产生的。解决办法是配置系统的classpath路径，指定jar包路径就好了。</p><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/1007017-20180612095642649-1458279617.png" alt>成功连接后，我们一路确定下去把这个配置文件进行保存，最终你可以在你指定的文件夹（该目录没有限制，自定义一个目录即可，此处我是建立在安装文件下的一个userConf文件夹内）中看到这个保存好的文件：<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/1007017-20180612095643062-1075647829.png" alt></p><h3 id="2、从已有数据库中的表进行逆向工程图"><a href="#2、从已有数据库中的表进行逆向工程图" class="headerlink" title="2、从已有数据库中的表进行逆向工程图"></a>2、从已有数据库中的表进行逆向工程图</h3><h4 id="2-1-菜单选择，从数据库更新模型"><a href="#2-1-菜单选择，从数据库更新模型" class="headerlink" title="2.1 菜单选择，从数据库更新模型"></a>2.1 菜单选择，从数据库更新模型</h4><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/1007017-20180612095643505-1924976606.png" alt></p><h4 id="2-2-选择数据库连接配置文件"><a href="#2-2-选择数据库连接配置文件" class="headerlink" title="2.2 选择数据库连接配置文件"></a>2.2 选择数据库连接配置文件</h4><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/1007017-20180612095643846-1458854354.png" alt></p><h4 id="2-3-选择涉及的数据库和想要导出的表"><a href="#2-3-选择涉及的数据库和想要导出的表" class="headerlink" title="2.3 选择涉及的数据库和想要导出的表"></a>2.3 选择涉及的数据库和想要导出的表</h4><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/1007017-20180612095644201-86187701.png" alt></p><h4 id="2-4-大功告成"><a href="#2-4-大功告成" class="headerlink" title="2.4 大功告成"></a>2.4 大功告成</h4><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/1007017-20180612095644663-1890518121.png" alt></p><h3 id="3、参考链接："><a href="#3、参考链接：" class="headerlink" title="3、参考链接："></a>3、参考链接：</h3><ul><li><a href="https://www.jianshu.com/p/015b0eddd6ed" target="_blank" rel="noopener">PowerDesigner连接MySQL数据库</a></li><li><a href="https://blog.csdn.net/dragonpeng2008/article/details/52181207" target="_blank" rel="noopener">powerdesigner16.5逆向工程，从远程oracle11g数据库导出PDM</a></li><li><a href="https://uule.iteye.com/blog/895150" target="_blank" rel="noopener">https://uule.iteye.com/blog/895150</a><br><br><br><font color="blue" size="6"><br>本文转自：<a href="https://www.cnblogs.com/deng-cc/p/6824946.html#4253885" target="_blank" rel="noopener">PowerDesigner连接MySQL和逆向工程图</a><br></font><br><br></li><li><p>如果连接时出现错误：<br><font color="red">SQLSTATE = 01S00<br>The server time zone value ‘ÖÐ¹ú±ê×¼Ê±¼ä’ is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.<br></font><br>因为时区问题<br>在连接上url上加<code>serverTimezone=GMT%2B8</code><br>例如：<code>jdbc:mysql://localhost/数据库名?serverTimezone=GMT%2B8</code></p></li><li><p>最后提供powerdesigner16.6.5版本下载（带激活方法，替换文件即可）<br>百度网盘：<a href="https://pan.baidu.com/s/1UA4ESV0QRG491Bdd0V2VcA" target="_blank" rel="noopener">点我下载</a><br>提取码：wgjt</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;0、写在前面的话&quot;&gt;&lt;a href=&quot;#0、写在前面的话&quot; class=&quot;headerlink&quot; title=&quot;0、写在前面的话&quot;&gt;&lt;/a&gt;0、写在前面的话&lt;/h3&gt;&lt;p&gt;最近想梳理公司项目的表间关系，从项目后台管理系统的操作入手，以及代码的hibernate注解
      
    
    </summary>
    
      <category term="工具" scheme="https://fuzui.net/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="powerdesigner" scheme="https://fuzui.net/tags/powerdesigner/"/>
    
  </entry>
  
  <entry>
    <title>【转】Security身份认证之UserDetailsService</title>
    <link href="https://fuzui.net/Security%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E4%B9%8BUserDetailsService.html"/>
    <id>https://fuzui.net/Security身份认证之UserDetailsService.html</id>
    <published>2019-05-08T14:11:41.000Z</published>
    <updated>2019-05-08T14:29:39.526Z</updated>
    
    <content type="html"><![CDATA[<p> 之前我们采用了配置文件的方式从数据库中读取用户进行登录。虽然该方式的灵活性相较于静态账号密码的方式灵活了许多，但是将数据库的结构暴露在明显的位置上，绝对不是一个明智的做法。本文通过Java代码实现UserDetailsService接口来实现身份认证。</p><h5 id="1-1-UserDetailsService在身份认证中的作用"><a href="#1-1-UserDetailsService在身份认证中的作用" class="headerlink" title="1.1 UserDetailsService在身份认证中的作用"></a>1.1 UserDetailsService在身份认证中的作用</h5><p>Spring Security中进行身份验证的是AuthenticationManager接口，ProviderManager是它的一个默认实现，但它并不用来处理身份认证，而是委托给配置好的AuthenticationProvider，每个AuthenticationProvider会轮流检查身份认证。检查后或者返回Authentication对象或者抛出异常。</p><p>验证身份就是加载响应的UserDetails，看看是否和用户输入的账号、密码、权限等信息匹配。此步骤由实现AuthenticationProvider的DaoAuthenticationProvider（它利用UserDetailsService验证用户名、密码和授权）处理。包含 GrantedAuthority 的 UserDetails对象在构建 Authentication对象时填入数据。<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20180406152002371.png" alt></p><h5 id="1-2-配置UserDetailsService"><a href="#1-2-配置UserDetailsService" class="headerlink" title="1.2 配置UserDetailsService"></a>1.2 配置UserDetailsService</h5><h6 id="1-2-1-更改Spring-Security-xml中身份的方式，使用自定义的UserDetailsService。"><a href="#1-2-1-更改Spring-Security-xml中身份的方式，使用自定义的UserDetailsService。" class="headerlink" title="1.2.1 更改Spring-Security.xml中身份的方式，使用自定义的UserDetailsService。"></a>1.2.1 更改Spring-Security.xml中身份的方式，使用自定义的UserDetailsService。</h6><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">security:authentication-manager</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">security:authentication-provider</span> <span class="attr">user-service</span> <span class="attr">ref</span>=<span class="string">"favUserDetailService"</span>&gt;</span>     </span><br><span class="line"><span class="tag">&lt;/<span class="name">security:authentication-provider</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">security:authentication-manager</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"favUserDetailService"</span> <span class="attr">class</span>=<span class="string">"com.favccxx.favsecurity.security.FavUserDetailService"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h6 id="1-2-2-新建FavUserDetailsService-java，实现UserDetailsService接口。为了降低学习的难度，这里并没有与数据库进行集成，而是采用模拟从数据库中获取用户的方式进行身份验证。示例代码如下："><a href="#1-2-2-新建FavUserDetailsService-java，实现UserDetailsService接口。为了降低学习的难度，这里并没有与数据库进行集成，而是采用模拟从数据库中获取用户的方式进行身份验证。示例代码如下：" class="headerlink" title="1.2.2 新建FavUserDetailsService.java，实现UserDetailsService接口。为了降低学习的难度，这里并没有与数据库进行集成，而是采用模拟从数据库中获取用户的方式进行身份验证。示例代码如下："></a>1.2.2 新建FavUserDetailsService.java，实现UserDetailsService接口。为了降低学习的难度，这里并没有与数据库进行集成，而是采用模拟从数据库中获取用户的方式进行身份验证。示例代码如下：</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.favccxx.favsecurity.security;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> org.apache.logging.log4j.LogManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.logging.log4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.GrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.authority.SimpleGrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UsernameNotFoundException;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FavUserDetailService</span> <span class="keyword">implements</span> <span class="title">UserDetailsService</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LogManager.getLogger(FavUserDetailService.class);  </span><br><span class="line"><span class="comment">/**  * 根据用户名获取用户 - 用户的角色、权限等信息   */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> UserDetails <span class="title">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException </span>&#123;      </span><br><span class="line">UserDetails userDetails = <span class="keyword">null</span>;     </span><br><span class="line"><span class="keyword">try</span> &#123;           </span><br><span class="line">com.favccxx.favsecurity.pojo.User favUser = <span class="keyword">new</span> com.favccxx.favsecurity.pojo.User();            </span><br><span class="line">favUser.setUsername(<span class="string">"favccxx"</span>);        </span><br><span class="line">favUser.setPassword(<span class="string">"favccxx"</span>);         </span><br><span class="line">Collection&lt;GrantedAuthority&gt; authList = getAuthorities();         </span><br><span class="line">userDetails = <span class="keyword">new</span> User(username, favUser.getPassword().toLowerCase(),<span class="keyword">true</span>,<span class="keyword">true</span>,<span class="keyword">true</span>,<span class="keyword">true</span>,authList);     </span><br><span class="line">&#125;<span class="keyword">catch</span> (Exception e) &#123;         </span><br><span class="line">e.printStackTrace();        </span><br><span class="line">&#125;       </span><br><span class="line"><span class="keyword">return</span> userDetails; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**  * 获取用户的角色权限,为了降低实验的难度，这里去掉了根据用户名获取角色的步骤     * <span class="doctag">@param</span>    * <span class="doctag">@return</span>   */</span> </span><br><span class="line"><span class="function"><span class="keyword">private</span> Collection&lt;GrantedAuthority&gt; <span class="title">getAuthorities</span><span class="params">()</span></span>&#123;        </span><br><span class="line">List&lt;GrantedAuthority&gt; authList = <span class="keyword">new</span> ArrayList&lt;GrantedAuthority&gt;();       </span><br><span class="line">authList.add(<span class="keyword">new</span> SimpleGrantedAuthority(<span class="string">"ROLE_USER"</span>));      </span><br><span class="line">authList.add(<span class="keyword">new</span> SimpleGrantedAuthority(<span class="string">"ROLE_ADMIN"</span>));     </span><br><span class="line"><span class="keyword">return</span> authList;    </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="1-2-3-启动应用服务器，只要用户名和密码不全是favccxx，就会产生下面的错误。"><a href="#1-2-3-启动应用服务器，只要用户名和密码不全是favccxx，就会产生下面的错误。" class="headerlink" title="1.2.3 启动应用服务器，只要用户名和密码不全是favccxx，就会产生下面的错误。"></a>1.2.3 启动应用服务器，只要用户名和密码不全是favccxx，就会产生下面的错误。</h6><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20180406152945823.png" alt></p><p>用户名和密码都输入favccxx，则登陆成功</p><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20180406153002554.png" alt></p><h5 id="1-3-跟踪UserDetailsService。"><a href="#1-3-跟踪UserDetailsService。" class="headerlink" title="1.3 跟踪UserDetailsService。"></a>1.3 跟踪UserDetailsService。</h5><p>身份认证的调用流程图如下，用户可下载Spring Security源代码跟踪调试。<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20180406153020212.png" alt></p><p><br><br>本文转自:<a href="https://blog.csdn.net/shehun1/article/details/45394405" target="_blank" rel="noopener">Spring Security身份认证之UserDetailsService</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; 之前我们采用了配置文件的方式从数据库中读取用户进行登录。虽然该方式的灵活性相较于静态账号密码的方式灵活了许多，但是将数据库的结构暴露在明显的位置上，绝对不是一个明智的做法。本文通过Java代码实现UserDetailsService接口来实现身份认证。&lt;/p&gt;
&lt;h5 i
      
    
    </summary>
    
      <category term="springSecurity" scheme="https://fuzui.net/categories/springSecurity/"/>
    
    
      <category term="springSecurity" scheme="https://fuzui.net/tags/springSecurity/"/>
    
  </entry>
  
  <entry>
    <title>bootstrap样式记录</title>
    <link href="https://fuzui.net/bootstrap%E5%9F%BA%E6%9C%AC%E6%A0%B7%E5%BC%8F.html"/>
    <id>https://fuzui.net/bootstrap基本样式.html</id>
    <published>2019-04-20T16:00:28.000Z</published>
    <updated>2019-04-20T16:32:59.574Z</updated>
    
    <content type="html"><![CDATA[<p><em>本文主要参考菜鸟教程等。</em></p><h4 id="一、栅格化"><a href="#一、栅格化" class="headerlink" title="一、栅格化"></a>一、栅格化</h4><p>1.响应式布局</p><p><code>container</code><br>2.栅格化布局col-md<br>左右两栏<br>默认一个row分为12个单位<br><code>col-md-4</code><br><code>col-md-8</code><br>默认宽度小于992时，不再左右。</p><p>3.栅格化col-sm<br>宽度小于768时，不再左右。</p><p>4.栅格化col-xs<br>永远左右两侧</p><p>5.混合使用</p><p><code>&lt;div class=&quot;col-sm-4 col-sm-4&quot;&gt;</code></p><p>6.pull栅格的位置推拉<br><code>col-md-push-8</code><br><code>col-md-pull-4</code><br>7.嵌套栅格<br>可以通过嵌套row实现</p><p>8.清除</p><p><code>&lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;</code></p><p>9.偏移<br><code>col-md-offset-4</code></p><p>10.隐藏和显示<br><code>hidden-xs</code><br><code>visible-xs</code></p><p>11.重点显示<br><code>alert-info</code></p><h4 id="二、布局组件"><a href="#二、布局组件" class="headerlink" title="二、布局组件"></a>二、布局组件</h4><p>1.字体图标<br>格式：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-lg"</span> <span class="attr">style</span>=<span class="string">"text-shadow: black 5px 3px 3px;"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-user"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> User</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>具体图标参考：<a href="http://www.runoob.com/bootstrap/bootstrap-glyphicons.html" target="_blank" rel="noopener">http://www.runoob.com/bootstrap/bootstrap-glyphicons.html</a><br>2.下拉菜单<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn dropdown-toggle"</span> <span class="attr">id</span>=<span class="string">"dropdownMenu1"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line">    主题<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span> <span class="attr">role</span>=<span class="string">"menu"</span> <span class="attr">aria-labelledby</span>=<span class="string">"dropdownMenu1"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">role</span>=<span class="string">"menuitem"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span>&gt;</span>JAVA<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">role</span>=<span class="string">"menuitem"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span>&gt;</span>大数据<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">role</span>=<span class="string">"menuitem"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span>&gt;</span>云计算<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span> <span class="attr">class</span>=<span class="string">"divider"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">role</span>=<span class="string">"menuitem"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span>&gt;</span>全栈工程师<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>在ul的class中使用 pull-right可以向界面右端对齐下拉菜单，也可以直接使用 .dropdown-menu-right。<br>新建li标签class=”dropdown-header”可以定义下拉菜单标题<br>外层div定义 .dropup可以向上弹出下拉菜单</p><p>.divider 下拉菜单中的分割线<br>.disabled    下拉菜单中的禁用<br>.dropdown    指定下拉菜单，下拉菜单都包过在.dropdown中<br>.dropdown    创建下拉菜单</p><p><code>&lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;</code> 来指示按钮作为下拉菜单。</p><p>3.输入框</p><p>向 .form-control 添加前缀或后缀元素的步骤如下：</p><ul><li>把前缀或后缀元素放在一个带有 class .input-group 的<code>&lt;div&gt;</code> 中。</li><li>接着，在相同的 <code>&lt;div&gt;</code> 内，在 class 为 .input-group-addon 的  <code>&lt;span&gt;</code> 内放置额外的内容。</li><li>把该 <code>&lt;span&gt;</code>放置在<code>&lt;input&gt;</code>  元素的前面或者后面。</li><li><code>&lt;span&gt;</code>内还可以放单选和复选框。同样可以添加<code>&lt;button&gt;</code></li><li>把按钮作为输入框组的前缀或者后缀元素,这时不用.input-group-addon，而用class .input-group-btn，同样可以添加<code>&lt;button&gt;</code>或下拉菜单。</li></ul><p>可以通过向 .input-group 添加相对表单大小的 class（比如 .input-group-lg、input-group-sm）来改变输入框组的大小。输入框中的内容会自动调整大小。</p><h4 id="三、基本样式"><a href="#三、基本样式" class="headerlink" title="三、基本样式"></a>三、基本样式</h4><p>1.标题<br>在<code>&lt;h1&gt;</code>内可以嵌套<code>&lt;small&gt;</code>来定义一个颜色浅的文本。<br>2.强调文本</p><p><code>&lt;small&gt;</code>为父文本的百分之85<br><code>&lt;strong&gt;</code> 更粗的文本<br><code>&lt;em&gt;</code>斜体<br><code>&lt;p class=&quot;text-left&quot;&gt;</code>向左对齐文本<br><code>&lt;p class=&quot;text-center&quot;&gt;</code>居中<br><code>&lt;p class=&quot;text-right&quot;&gt;</code>向右对齐<br><code>&lt;p class=&quot;text-muted&quot;&gt;</code>内容减弱</p><ul><li>.text-muted：提示，浅灰色</li><li>.text-primary：主要，蓝色</li><li>.text-success：成功，浅绿色</li><li>.text-info：通知信息，浅蓝色</li><li>.text-warning：警告，黄色</li><li>.text-danger：危险，红色</li></ul><p>3.缩写</p><p><code>&lt;abbr title=&quot;Real Simple Sydication&quot;&gt;RSS&lt;/abbr&gt;</code><br>4.引用</p><p>blockquote<br>5.列表<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">未定义样式列表</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list-unstyled"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">内联列表</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"inline"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">定义列表</span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span>学号<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>20150<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>王泽<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>6.代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>String<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">        String name = "wangze"</span><br><span class="line">    <span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>按键提示<br>按<code>&lt;kbd&gt;F10&lt;/kbd&gt;</code>进入全屏预览<br>代码滚动条</p><p><code>&lt;pre class=&quot;pre-scrollable&quot;&gt;&lt;/pre&gt;</code><br>7.表格</p><p>只有水平分割线的表格样式<br><code>&lt;table class=&quot;table&quot;&gt;</code><br>条纹表格<br><code>&lt;table class=&quot;table table-striped&quot;&gt;</code><br>边框表格<br><code>&lt;table class=&quot;table table-bordered&quot;&gt;</code><br>悬停表格<br><code>&lt;table class=&quot;table table-hover&quot;&gt;</code><br>精简表格,padding切半<br><code>&lt;table class=&quot;table table-condensed&quot;&gt;</code><br>上下文,改变表格行或单个单元格的背景颜色<br>.active     对某一行或单元格应用悬停颜色<br>.success<br>.warning<br>.danger<br>响应式表格<br><code>&lt;div class=&quot;table-responsive&quot;&gt;</code></p><p>8.表单<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">role</span>=<span class="string">"form"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">内联：标签并排</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-inline"</span> <span class="attr">role</span>=<span class="string">"form"</span>&gt;</span></span><br><span class="line">水平表单，把标签和控件放在一个带有class.form-group的<span class="tag">&lt;<span class="name">div</span>&gt;</span>中</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span> <span class="attr">role</span>=<span class="string">"form"</span>&gt;</span></span><br><span class="line">输入框</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"文本输入"</span>&gt;</span></span><br><span class="line">文本框</span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">rows</span>=<span class="string">"3"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">单选</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>选项 1<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">复选</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"radio"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>选项 1<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">选择框</span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span>&gt;</span></span><br><span class="line">静态控件</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"form-control-static"</span>&gt;</span></span><br><span class="line">表单控件大小</span><br><span class="line">分别使用 class .input-lg 和 .col-lg-* 来设置表单的高度和宽度</span><br><span class="line">表单帮助文档</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"help-block"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>9.按钮<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 标准的按钮 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span> </span><br><span class="line"><span class="comment">&lt;!-- 提供额外的视觉效果，标识一组按钮中的原始动作 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>原始按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span> </span><br><span class="line"><span class="comment">&lt;!-- 表示一个成功的或积极的动作 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span>&gt;</span>成功按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span> </span><br><span class="line"><span class="comment">&lt;!-- 信息警告消息的上下文按钮 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-info"</span>&gt;</span>信息按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span> </span><br><span class="line"><span class="comment">&lt;!-- 表示应谨慎采取的动作 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-warning"</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span> </span><br><span class="line"><span class="comment">&lt;!-- 表示一个危险的或潜在的负面动作 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span>危险按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span> </span><br><span class="line"><span class="comment">&lt;!-- 并不强调是一个按钮，看起来像一个链接，但同时保持按钮的行为 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-link"</span>&gt;</span>链接按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>.btn-lg        大按钮<br>.btn-sm        较小按钮<br>.btn-xs                小按钮<br>.btn-block            块级按钮，会横跨父元素的全部宽度<br>.active        激活按钮<br>.disabled            禁用按钮<br>按钮样式适用于a标签，button标签，input标签<br>.btn-group        可在外层div定义，创建按钮组 .btn-gtoup-lg|sm|xs来控制大小<br>.bth-group-vertical        设置垂直方向<br>.btn-group-justified        自适应按钮<br>下拉菜单按钮<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span> </span><br><span class="line">    Sony <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span> <span class="attr">role</span>=<span class="string">"menu"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Tablet<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Smartphone<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><code>.caret</code>显示下拉式功能</p><p>10.图片</p><p>.img-rounded        为图片添加圆角<br>.img-circle        将图片变为圆形<br>.img-thumbnail        缩略图功能<br>.img-responsive        图片响应式</p><p>11.文本</p><p> 展示不同颜色<br>.text-muted<br>.text-primary<br>.text-success<br>.text-info<br>.text-warning<br>.text-danger<br>12.文本背景颜色</p><p>.bg-primary<br>.bg-success<br>.bg-info<br>.bg-warning<br>.bg-danger<br>13.内容居中<br>.center-block</p><h4 id="四、模态框-轮播图"><a href="#四、模态框-轮播图" class="headerlink" title="四、模态框+轮播图"></a>四、模态框+轮播图</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="comment">/* 定义大小位置 */</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.center-carousel</span> &#123;</span></span><br><span class="line"><span class="undefined">width: 33%;</span></span><br><span class="line"><span class="undefined">margin-left: auto;</span></span><br><span class="line"><span class="undefined">margin-right: auto;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 模态框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal fade"</span> <span class="attr">id</span>=<span class="string">"myModal"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog modal-lg"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-content"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 模态框头部 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-header"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"modal-title"</span>&gt;</span>项目必读：相关技术、技术、测试数据、版本更新<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 模态框主体 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-body"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 我这里用模态框包含一个jsp页面，也可以其他内容或标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jsp:include</span> <span class="attr">page</span>=<span class="string">"Introduction.jsp"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 模态框底部 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-footer"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-secondary"</span></span></span><br><span class="line"><span class="tag"><span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span>关闭<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center-carousel"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo"</span> <span class="attr">class</span>=<span class="string">"carousel slide"</span> <span class="attr">data-ride</span>=<span class="string">"carousel"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 指示符 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"carousel-indicators"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#demo"</span> <span class="attr">data-slide-to</span>=<span class="string">"0"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#demo"</span> <span class="attr">data-slide-to</span>=<span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#demo"</span> <span class="attr">data-slide-to</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#demo"</span> <span class="attr">data-slide-to</span>=<span class="string">"4"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 轮播图片 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel-inner"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel-item active"</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!-- 模态框点击图片（超链接）显示 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">data-toggle</span>=<span class="string">"modal"</span> <span class="attr">data-target</span>=<span class="string">"#myModal"</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag"><span class="attr">src</span>=<span class="string">"https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/img001.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel-item"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://github.com/fuzui/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag"><span class="attr">src</span>=<span class="string">"https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/github.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel-item"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://fuzui.net"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag"><span class="attr">src</span>=<span class="string">"https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/myblog.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel-item"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://blog.csdn.net/qq_39329616"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag"><span class="attr">src</span>=<span class="string">"https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/myinfo.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 左右切换按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"carousel-control-prev"</span> <span class="attr">href</span>=<span class="string">"#demo"</span> <span class="attr">data-slide</span>=<span class="string">"prev"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"carousel-control-prev-icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"carousel-control-next"</span> <span class="attr">href</span>=<span class="string">"#demo"</span> <span class="attr">data-slide</span>=<span class="string">"next"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"carousel-control-next-icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;em&gt;本文主要参考菜鸟教程等。&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&quot;一、栅格化&quot;&gt;&lt;a href=&quot;#一、栅格化&quot; class=&quot;headerlink&quot; title=&quot;一、栅格化&quot;&gt;&lt;/a&gt;一、栅格化&lt;/h4&gt;&lt;p&gt;1.响应式布局&lt;/p&gt;
&lt;p&gt;&lt;code&gt;containe
      
    
    </summary>
    
      <category term="bootstrap" scheme="https://fuzui.net/categories/bootstrap/"/>
    
    
      <category term="bootstrap" scheme="https://fuzui.net/tags/bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB复制集介绍及搭建</title>
    <link href="https://fuzui.net/MongoDB%E5%A4%8D%E5%88%B6%E9%9B%86%E4%BB%8B%E7%BB%8D%E5%8F%8A%E6%90%AD%E5%BB%BA.html"/>
    <id>https://fuzui.net/MongoDB复制集介绍及搭建.html</id>
    <published>2019-04-19T15:17:23.000Z</published>
    <updated>2019-04-19T15:40:23.623Z</updated>
    
    <content type="html"><![CDATA[<p><strong>简介</strong></p><blockquote><p>为了防止数据错误和丢失，采用复制集可以数据同步到多个服务器，提供了数据的冗余备份，在多个服务器上存储数据副本，提高了数据的可用性，保证了数据的安全性。</p></blockquote><font color="blue">参考《MongoDB游记之轻松入门到进阶》</font><a id="more"></a><h4 id="一、主从复制和副本集"><a href="#一、主从复制和副本集" class="headerlink" title="一、主从复制和副本集"></a>一、主从复制和副本集</h4><p>MongoDB提供了两种复制部署方案：主从复制和副本集<br>1.主从复制<br>一个主节点，多个从节点，所有从节点会去主节点获取最新数据，做到主从数据保持一致。<br>缺点:<br>当主节点出现宕机，那么集群将不能正常运作，需要先人工将其中一个从节点作为主节点，需要停机操作，使对外服务会有一段空白时间。</p><p>2.副本集</p><p>为了解决主从复制的容灾性问题。<br>没有固定的主节点，集群会自己选举出一个主节点，当这个主节点不能正常工作时，又会另外选举出其他节点作为主节点。副本集中总会有一个活跃节点和一个（多个）备份节点，当当前活跃节点出问题时，备份节点会提升为活跃节点。<br>在副本集中会有一个只参与投票选举、不复制数据的仲裁节点，用于当票数出现一致时来判决。官方推荐集群节点为奇数。</p><h4 id="二、副本集工作原理"><a href="#二、副本集工作原理" class="headerlink" title="二、副本集工作原理"></a>二、副本集工作原理</h4><h5 id="1-oplog（操作日志）"><a href="#1-oplog（操作日志）" class="headerlink" title="1.oplog（操作日志）"></a>1.oplog（操作日志）</h5><blockquote><p>记录数据改变操作（更新插入），oplog是一个固定集合，喂鱼每个复制节点的local的数据库里。新操作会替换旧的操作，以保证oplog不会超过预设的大小，oplog中的每个文档都代表主节点上执行的一个才做。</p></blockquote><h5 id="2-数据同步"><a href="#2-数据同步" class="headerlink" title="2.数据同步"></a>2.数据同步</h5><blockquote><p>每个oplog都有时间戳，所有从节点都使用这个时间戳来追踪它们最后执行写操作的记录。当某个从节点准备更新自己时，会做三件事：首先，查看自己oplog里的最后一条时间戳；其次，查询主节点oplog里所有大于此时间戳的文档；最后，把那些文档应用到自己库里，并添加写操作文档到自己的oplog里。</p></blockquote><h5 id="3-复制状态和本地数据库"><a href="#3-复制状态和本地数据库" class="headerlink" title="3.复制状态和本地数据库"></a>3.复制状态和本地数据库</h5><blockquote><p>复制状态的文档记录在本地数据库local中。主节点的local数据库的内容是不会被从节点复制的。如果有不想被从节点复制的文档，可以将它放在本地数据库local中。</p></blockquote><h5 id="4-阻塞复制"><a href="#4-阻塞复制" class="headerlink" title="4.阻塞复制"></a>4.阻塞复制</h5><blockquote><p>当主节点写入操作太快时，从节点的更新状态有可能跟不上。<br>为避免这种情况：</p><ul><li>使主节点的oplog足够大</li><li>阻塞复制：在主节点使用getLastError命令加参数“w”来确保数据的同步性。w越大会导致写操作越慢。</li></ul></blockquote><h5 id="5-心跳机制"><a href="#5-心跳机制" class="headerlink" title="5.心跳机制"></a>5.心跳机制</h5><blockquote><p>心跳检测有助于发现故障进行自动选举和故障转移。默认情况下副本集成员每两分钟ping一下其他成员，来弄清自己的健康状态。<br>如果是某一从节点出现故障只会等待从节点重新上线，而如果主节点出现故障，则副本集会开始选举，重新选出新的主节点，原主节点会降级为从节点。</p></blockquote><h5 id="6-选举机制"><a href="#6-选举机制" class="headerlink" title="6.选举机制"></a>6.选举机制</h5><blockquote><p>根据优先级和Bully算法（评判睡的数据最新）选举出主节点，在选举出主节点之前，整个集群服务是只读的，不能执行写操作。<br>非仲裁节点都会有优先级配置，范围为0~100，越大值越优先成为主节点，默认为1，如果是0则不能成为主节点。<br>拥有资格的从节点会向其他节点发出请求，而其他节点在收到选举提议后会判断三个条件：</p><ul><li>副本集中是否有其他节点已经是主节点了</li><li>自己的数据是否比请求成为主节点的的那个节点上数据更新</li><li>副本集中其他节点的数据是否比请求成为主节点的那个节点数据更新</li></ul><p>只要有一个条件城里，都会认为对方提议不可行。请求者只要收到任何一个节点返回不合适，都会退出选举。<br>选举机制会让优先级高的节点成为主节点，即使先选举出了优先级低的节点，也至少会短暂作为主节点运行一段时间。副本集还会再之后继续发出选举，直到优先级最高的节点成为主节点。（后面会有例子）</p></blockquote><h5 id="7-数据回滚"><a href="#7-数据回滚" class="headerlink" title="7.数据回滚"></a>7.数据回滚</h5><blockquote><p>在从节点成为主节点后，会认为其是副本集中的最新数据，对其他节点的操作都会回滚，即所有节点连接新的主节点重新同步。这些节点会查看自己的oplog，找出新主节点中没有执行过的操作，然后请求操作文档，替换掉自己的异常样本。</p></blockquote><h4 id="三、主从复制搭建"><a href="#三、主从复制搭建" class="headerlink" title="三、主从复制搭建"></a>三、主从复制搭建</h4><p>我在mongod4.0运行时提示：<font color="red">[main] Master/slave replication is no longer supported</font><br>也就是mongodb4.0后不再支持主从复制！</p><p>遵从技术发展方向=-=，不再阐述主从复制搭建。</p><h4 id="四、副本集搭建"><a href="#四、副本集搭建" class="headerlink" title="四、副本集搭建"></a>四、副本集搭建</h4><p>我在虚拟机上测试centos7</p><p>（1）安装完MongoDB，参考：</p><p>（2）三台虚拟机（安好一台克隆）</p><ul><li><p>修改ip和hostname：<br>MongoDB-master：192.168.17.138<br>MongoDB-slave：192.168.17.139<br>MongoDB-arbiter：192.168.17.140<br>hostname修改：<code>vim /etc/hostname</code><br>ip修改：<code>vim /etc/sysconfig/network-scripts/ifcfg-ens33</code>其中ifcfg-ens33每个机器可能不一样。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">NAME=ens33</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.17.139</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.17.2</span><br><span class="line">DNS1=8.8.8.8</span><br></pre></td></tr></table></figure></li><li><p>配置ip映射<br><code>vim /etc/hosts</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.17.138   mongodb-master</span><br><span class="line">192.168.17.139   mongodb-slave</span><br><span class="line">192.168.17.140   mongodb-arbiter</span><br></pre></td></tr></table></figure></li></ul><p>配置完成后重启</p><p>（3）创建key<br>在mongodb-master中：<br>生成key：<br>    <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl rand -base64 90 &gt; /var/lib/mongo/mongodb-keyfile</span><br></pre></td></tr></table></figure></p><p>将这个mongodb-keyfile复制到其他两台机器上（我用的xftp6传过去的，也可以使用scp传）</p><p>（4）权限<br>在三台机器上分别执行<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 700 /var/lib/mongo/mongodb-keyfile</span><br></pre></td></tr></table></figure></p><p>在实现时不知为何我的700在master机器上一直无法生效！我采用另一种写法（u+x）<br>然后切换用户:</p><font color="red">很重要，我在配置时因为直接用的root，所以mongodb-keyfile文件也是root用户，导致我后面修改配置文件后一直无法启动mongod！即需要在三台机器上使用chown切换为mongod。</font><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown mongod /var/lib/mongo/mongodb-keyfile</span><br></pre></td></tr></table></figure><br><br>（5）修改配置文件<br>在三台机器上都修改，keyFile和replSetName都一样。<br><code>vi /etc/mongod.conf</code><br>有两处修改<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">上面省略</span></span><br><span class="line">security:</span><br><span class="line"> authorization: enabled</span><br><span class="line"> keyFile: /var/lib/mongo/mongodb-keyfile</span><br><span class="line"><span class="meta">#</span><span class="bash">operationProfiling:</span></span><br><span class="line"></span><br><span class="line">replication:</span><br><span class="line"> replSetName: wangze</span><br></pre></td></tr></table></figure><br><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419214000.png" alt><br><br>（6） 启动<br><br>在三台机器上分别持续<code>systemctl restart mongod</code><br>启动成功什么信息都没有，如若启动失败，前往查看日志<code>cat /var/log/mongodb/mongod.log</code><br><br><br>（7）配置<br>进入mongodb-master的mongo<br><code>mongo</code><br><em> 初始化<br><code>rs.initiate()</code><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419205102.png" alt></em> 查看配置<br><code>rs.conf()</code><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419205018.png" alt><br>会发现只有一个节点，因为从节点和仲裁者节点还未添加。<br><br><em> 添加从节点<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419205119.png" alt><br><code>rs.add(&quot;mongodb-slave:27017&quot;)</code></em> 添加仲裁者节点<br> <code>rs.addArb(&quot;mongodb-arbiter:27017&quot;)</code><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419205207.png" alt><br><em> 重新查看配置<br><code>rs.conf()</code><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419205319.png" alt></em> 查看状态<br><code>rs.status()</code><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419205412.png" alt><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419205459.png" alt><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419205520.png" alt><br>.<br><br><br>#### 五、数据同步测试 ####<br><br>在安装时我曾创了一个wwze库，里面插入一条数据如<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419205809.png" alt><br>现在在主节点中再写入一条新数据<br><code>db.user.insert({name:&quot;张三&quot;,age:21,address:&quot;上海&quot;})</code><br><em> 查看<br><code>db.user.find().pretty()</code><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419210220.png" alt></em> 进入从节点<br> 在mongodb-slave中执行<br> <code>mongo</code><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419210353.png" alt><br>设置slave为true<br><code>rs.slaveOk()</code><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419210701.png" alt><br>这里我查看dbs发现没有数据库，是因为我还没有登录！<br><code>use admin</code><br><code>db.auth(&quot;root&quot;,&quot;root&quot;)</code><br>再次查看<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419210853.png" alt><br>最后进入wwze库查看一些刚在主节点写的数据是否同步<br><code>use wwze</code><br><code>db.user.find().pretty()</code><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419212002.png" alt><br><br>* 而进入仲裁者节点时，会发现不能读写，因为他只负责投票选举。<br> 在mongodb-arbiter机器中<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419212222.png" alt><br><br><br><font color="blue">至此，副本集搭建完成</font><h4 id="六、故障测试"><a href="#六、故障测试" class="headerlink" title="六、故障测试"></a>六、故障测试</h4><p>默认情况下主节点和从节点的优先级都为1，仲裁者为0，因为它不可参加选举。<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419215955.png" alt></p><p>我将现有主节点的优先级提高为5<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> var rscfg=rs.conf()</span><br><span class="line">rscfg.members[0].priority = 5</span><br><span class="line"> rs.reconfig(rscfg)</span><br></pre></td></tr></table></figure></p><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419220207.png" alt></p><p>查看一下状态<br><code>rs.status()</code><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419220346.png" alt></p><p>现在将主节点停掉<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use admin</span><br><span class="line">db.shutdownServer()</span><br></pre></td></tr></table></figure></p><p>这时可以查看状态<br><code>rs.status()</code><br>这里我没截图，自测~</p><p>然后重启进入mongo，会发现，原主节点变为从节点了<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419220639.png" alt><br>而从节点，自然变为主节点：<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419220819.png" alt></p><p>因为设置了优先级，所以在重启mongodb-master机器的mongo后，很快（几秒或者十几秒）mongodb-master又会被重新选举为主节点，而mongodb-slave下位，我没来得及截状态图他就已经回来了。<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419220924.png" alt></p><p><br><br></p><font color="blue">最后远程连接或用java连接操作即可，因为我电脑配置有限<img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190419221727.png" alt>，所以只开了三台虚拟机，只配置了一个从节点，如需更多以相同方法添加即可</font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为了防止数据错误和丢失，采用复制集可以数据同步到多个服务器，提供了数据的冗余备份，在多个服务器上存储数据副本，提高了数据的可用性，保证了数据的安全性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;font color=&quot;blue&quot;&gt;参考《MongoDB游记之轻松入门到进阶》&lt;/font&gt;
    
    </summary>
    
      <category term="mongodb" scheme="https://fuzui.net/categories/mongodb/"/>
    
    
      <category term="mongodb" scheme="https://fuzui.net/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>linux安装MongoDB4.0（centos7）</title>
    <link href="https://fuzui.net/linux%E5%AE%89%E8%A3%85MongoDB4.0.html"/>
    <id>https://fuzui.net/linux安装MongoDB4.0.html</id>
    <published>2019-04-17T09:08:07.000Z</published>
    <updated>2019-04-17T09:36:13.624Z</updated>
    
    <content type="html"><![CDATA[<hr><ul><li>MongoDB4.0安装</li><li>MongoDB 配置用户和密码验证</li><li>远程连接MongoDB</li></ul><hr><a id="more"></a><h4 id="1-配置包管理系统（yum）"><a href="#1-配置包管理系统（yum）" class="headerlink" title="1. 配置包管理系统（yum）"></a>1. 配置包管理系统（yum）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[mongodb-org-4.0] </span><br><span class="line">name = MongoDB Repository </span><br><span class="line">baseurl = https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.0/x86_64/ </span><br><span class="line">gpgcheck = 1 </span><br><span class="line">enabled = 1 </span><br><span class="line">gpgkey = https：// www.mongodb.org/static/pgp/server-4.0.asc</span><br></pre></td></tr></table></figure><h4 id="2-安装MongoDB"><a href="#2-安装MongoDB" class="headerlink" title="2. 安装MongoDB"></a>2. 安装MongoDB</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y mongodb-org</span><br></pre></td></tr></table></figure><h4 id="3-启动MongoDB"><a href="#3-启动MongoDB" class="headerlink" title="3.启动MongoDB"></a>3.启动MongoDB</h4><p>启动：<code>systemctl start mongod</code><br>停止：<code>systemctl stop mongod</code><br>重启：<code>systemctl restart mongod</code><br>开机启动：<code>systemctl enable mongod.service</code></p><h4 id="4-进入MongoDB"><a href="#4-进入MongoDB" class="headerlink" title="4.进入MongoDB"></a>4.进入MongoDB</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo</span><br></pre></td></tr></table></figure><h4 id="5-设置验证（账户密码）"><a href="#5-设置验证（账户密码）" class="headerlink" title="5.设置验证（账户密码）"></a>5.设置验证（账户密码）</h4><p>(1) 进入MongoDB<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo</span><br></pre></td></tr></table></figure></p><p>(2) 进入admin数据库<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use admin</span><br></pre></td></tr></table></figure></p><p>(3) 创建<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.createUser(&#123;user:"root",pwd:"root",roles:["root"]&#125;)</span><br></pre></td></tr></table></figure></p><p>(4) 退出<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure></p><p>(5) 修改配置文件<br><code>vim /etc/mongod.conf</code><br>修改：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">security：</span><br><span class="line">    authorization: enabled</span><br></pre></td></tr></table></figure></p><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190417163444.png" alt></p><font color="red">原本sercurity是被注释掉的，需要把前面#删除，而authorization也是不存在的，需要手动添加。</font><p>(6) 重启<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mongod</span><br></pre></td></tr></table></figure></p><p>(7)验证<br>使用mongo进入MongoDB之后，使用show dbs是没有反应的，需要先进入admin数据库，持行<code>db.auth(&quot;root&quot;,&quot;root&quot;)</code>后，才可以使用。<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190417164057.png" alt></p><h4 id="6-远程连接"><a href="#6-远程连接" class="headerlink" title="6.远程连接"></a>6.远程连接</h4><p>(1) 关闭防火墙<br><code>systemctl stop firewalld</code><br>可以使其开机关闭：<code>systemctl disable firewalld</code><br>(2) 修改配置文件<br><code>vim /etc/mongod.conf</code><br>修改：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bindIp: 0.0.0.0</span><br></pre></td></tr></table></figure></p><p> 原来bindIp是127.0.0.1，需要改为0.0.0.0<br> <img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190417164501.png" alt></p><p>(3) 重启MongoDB<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mongod</span><br></pre></td></tr></table></figure></p><p>(4)    连接<br>我这里用的 Navicat 12 for MongoDB<br>工具都差不多</p><ul><li><p>新建：<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190417164725.png" alt></p></li><li><p>输入信息：这里填写centos7的ip和MongoDB的admin数据库和刚刚设置过的账号密码<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/$PE@Q7]7T~E]PPG%W`%6G59.png" alt></p></li><li><p>建立ssh：这里填写centos7的ip和其登录的用户（我直接用的root）<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/GFA@R3BFTAV[O_0[$OV~S$G.png" alt></p></li></ul><ul><li>测试连接<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190417165508.png" alt></li></ul><p>最后就可以查看了，默认的数据库是看不到的，所以我这里创了个新数据库<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190417165631.png" alt><br>linux中：<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190417170126.png" alt><br>再通过图形界面查看：<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190417170229.png" alt></p><p><br></p><p>参考：</p><ul><li><a href="https://docs.mongodb.com/manual/tutorial/install-mongodb-on-red-hat/" target="_blank" rel="noopener">MongoDB官方安装</a></li><li><a href="https://blog.csdn.net/qq_26896281/article/details/81206492" target="_blank" rel="noopener">MongoDB4.0.0 远程连接及用户名密码认证登陆配置——windows</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;MongoDB4.0安装&lt;/li&gt;
&lt;li&gt;MongoDB 配置用户和密码验证&lt;/li&gt;
&lt;li&gt;远程连接MongoDB&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="安装类" scheme="https://fuzui.net/categories/%E5%AE%89%E8%A3%85%E7%B1%BB/"/>
    
    
      <category term="安装类，MongoDB" scheme="https://fuzui.net/tags/%E5%AE%89%E8%A3%85%E7%B1%BB%EF%BC%8CMongoDB/"/>
    
  </entry>
  
  <entry>
    <title>mysql8.0安装以及主从复制搭建(linux)</title>
    <link href="https://fuzui.net/mysql8.0%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%90%AD%E5%BB%BA(linux).html"/>
    <id>https://fuzui.net/mysql8.0安装以及主从复制搭建(linux).html</id>
    <published>2019-04-15T11:14:49.000Z</published>
    <updated>2019-04-15T11:18:22.713Z</updated>
    
    <content type="html"><![CDATA[<p><strong>一主一从：</strong><br>前提：</p><ul><li>两台centos7（虚拟机或云服务器）</li><li>防火墙已关闭</li></ul><p>主master：192.168.17.201             msql8.0.12<br>从slave：192.168.17.202        msql8.0.12</p><a id="more"></a><h4 id="1-mysql8-0安装"><a href="#1-mysql8-0安装" class="headerlink" title="1.mysql8.0安装"></a>1.mysql8.0安装</h4><h5 id="1-卸载Mariadb"><a href="#1-卸载Mariadb" class="headerlink" title="(1) 卸载Mariadb"></a>(1) 卸载Mariadb</h5><p>由于CentOS7自带的是 Mariadb, 所以需要先删除Mariadb<br>1&gt;. 查找版本<br><code>rpm -qa|grep mariadb</code><br>2&gt;. 删除<br><code>rpm -e --nodeps 上面查出来的文件名</code><br>3&gt;. 删除配置文件<br><code>rm /etc/my.cnf</code></p><h5 id="2-下载安装"><a href="#2-下载安装" class="headerlink" title="(2) 下载安装"></a>(2) 下载安装</h5><p>1&gt;. 下载<br>官网下载：<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/</a><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190415171239.png" alt><br>2&gt;. 解压<br><code>tar -xvf 包名</code><br>解压完会出现几个不同的包，通过ll查看即可<br>3&gt;. 安装依赖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#以下六条，具体作用我还没去了解过</span><br><span class="line">yum -y install numactl</span><br><span class="line">yum -y install libaio.so.1 libgcc_s.so.1 libstdc++.so.6</span><br><span class="line">yum update libstdc++-4.4.7-4.el6.x86_64</span><br><span class="line">yum search libaio</span><br><span class="line">yum install libaio</span><br><span class="line">yum install net-tools</span><br><span class="line">`</span><br></pre></td></tr></table></figure></p><p>4&gt;. 安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#以下具体名字看通过ll命令查看，按顺序安装</span><br><span class="line">rpm -ivh mysql-community-common-8.0.15-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-libs-8.0.15-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-client-8.0.15-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-devel-8.0.15-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-server-8.0.15-1.el7.x86_64.rpm</span><br><span class="line">`</span><br></pre></td></tr></table></figure></p><p>5&gt;. 初始化<br><code>mysqld --initialize --user=mysql --basedir=/usr --datadir=/var/lib/mysql</code></p><p>6&gt;. 修改密码<br>①编辑配置文件<br><code>vim /etc/my.cnf</code><br>在[mysqld]下加<code>skip-grant-tables</code><br>②重启mysql服务<br><code>systemctl start mysql</code><br>③免密登录<br><code>mysql -u root -p</code><br>提示输入密码时直接敲回车。<br>④选择 mysql 数据库<br><code>use mysql;</code><br>⑤置空默认密码<br><code>update user set authentication_string=&#39;&#39; where user=&#39;root&#39;;</code><br>⑥退出mysql，修改配置文件my.cnf,把kip-grant-tables删掉<br><code>vim /etc/my.cnf</code><br>⑦重启服务<br><code>systemctl start mysql</code><br>⑧登录<br><code>mysql -u root -p</code><br>提示输入密码时直接敲回车。<br>⑨修改root密码<br><code>ALTER user &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;密码&#39;;</code><br>⑩退出重启服务通过自己设置的密码登录<br><code>mysql -u root -p密码</code><br>7&gt;. 设置远程登录<br>设置权限 %表示允许远程<br><code>grant all privileges on *.* to &#39;root&#39;@&#39;%&#39; identified by &#39;123456&#39; with grant option;</code><br>或者<br><code>update user set host=&#39;%&#39; where user=&#39;root&#39;;</code><br>刷新数据库，使权限立刻生效<br><code>flush privileges;</code></p><font color="red">注意所有标点均为英文符号！</font><p>到此mysql8.0安装完成。</p><p><em>配置主从复制需要两台虚拟机或云服务器都安装。</em></p><h4 id="2-配置修改"><a href="#2-配置修改" class="headerlink" title="2.配置修改"></a>2.配置修改</h4><ul><li><p>主master数据库中：在配置文件my.cnf新增：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server-id = 100</span><br><span class="line">log-bin = mysql-bin</span><br><span class="line">innodb-file-per-table =ON</span><br><span class="line">skip_name_resolve=ON</span><br><span class="line"></span><br><span class="line">#以下原有</span><br><span class="line">datadir=/var/lib/mysql</span><br><span class="line">socket=/var/lib/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line">log-error=/var/log/mysqld.log</span><br><span class="line">pid-file=/var/run/mysqld/mysqld.pid</span><br></pre></td></tr></table></figure></li><li><p>从slave数据库中：在配置文件my.cnf新增：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">relay-log=relay-log1</span><br><span class="line">relay-log-index=relay-log.index</span><br><span class="line">server-id = 101</span><br><span class="line">innodb_file_per_table=ON</span><br><span class="line">skip_name_resolve=ON</span><br><span class="line">#以下原有</span><br><span class="line">datadir=/var/lib/mysql</span><br><span class="line">socket=/var/lib/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line">log-error=/var/log/mysqld.log</span><br><span class="line">pid-file=/var/run/mysqld/mysqld.pid</span><br></pre></td></tr></table></figure></li></ul><p>配置完成重启数据库</p><h4 id="3-主库master操作"><a href="#3-主库master操作" class="headerlink" title="3.主库master操作"></a>3.主库master操作</h4><p>（1）创建用于同步的用户并授权<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#创建用户</span><br><span class="line">CREATE USER &apos;wwze&apos;@&apos;192.168.17.201&apos; IDENTIFIED BY &apos;wish&apos;;</span><br><span class="line">#授权</span><br><span class="line">grant replication slave on *.* to &apos;wwze&apos;@&apos;192.168.17.201&apos; identified by &apos;wish&apos;;</span><br><span class="line">#刷新权限</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure></p><p>（2）查看master状态，记录二进制文件名（File）和位置（Position）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW MASTER STATUS;</span><br></pre></td></tr></table></figure><h4 id="4-从库slave操作"><a href="#4-从库slave操作" class="headerlink" title="4.从库slave操作"></a>4.从库slave操作</h4><p>（1）同步<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">change master to master_host=&apos;94.191.88.237&apos;, master_user=&apos;wwze&apos;, master_password=&apos;wish&apos;, \</span><br><span class="line">master_log_file=&apos;mysql-bin.000002&apos;, master_log_pos=885, master_connect_retry=30;</span><br></pre></td></tr></table></figure></p><p><em>其中mysql-bin.000002为在主库从查询到的二进制文件名，885为位置。</em></p><p>（2）启动同步<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start slave;</span><br></pre></td></tr></table></figure></p><p>（3）查看同步状态<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show slave status\G</span><br></pre></td></tr></table></figure></p><p><em>这里结尾不加分号。</em></p><p>当 Slave_IO_Running: Yes 和Slave_SQL_Running: Yes时，便主从搭建成功。</p><h4 id="5-额外配置"><a href="#5-额外配置" class="headerlink" title="5.额外配置"></a>5.额外配置</h4><p>（1）选择性同步数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 不同步哪些数据库  </span><br><span class="line">binlog-ignore-db = mysql  </span><br><span class="line">binlog-ignore-db = test  </span><br><span class="line">binlog-ignore-db = information_schema  </span><br><span class="line">  </span><br><span class="line"># 只同步哪些数据库，除此之外，其他不同步  </span><br><span class="line">binlog-do-db = game</span><br></pre></td></tr></table></figure></p><p>（2）从库设置为只读，不能写<br>在从库slave的配置文件my.cnf中加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">read_only=1</span><br></pre></td></tr></table></figure></p><p>可以限定普通用户的对数据的修改操作，<font color="red">但不会限制root用户（具有super权限的用户）。</font>如若要限制root用户，需要对所有表加读锁：<code>flush tables with read lock;</code></p><h4 id="6-其他"><a href="#6-其他" class="headerlink" title="6.其他"></a>6.其他</h4><p>停止同步：<br><code>stop slave;</code><br>清理slave：<br><code>reset slave all;</code></p><p>参考：</p><p><a href="https://blog.csdn.net/xinpengfei521/article/details/80400142" target="_blank" rel="noopener">https://blog.csdn.net/xinpengfei521/article/details/80400142</a><br><a href="https://www.cnblogs.com/gl-developer/p/6170423.html" target="_blank" rel="noopener">https://www.cnblogs.com/gl-developer/p/6170423.html</a><br><a href="https://blog.csdn.net/wuapeng/article/details/80632446" target="_blank" rel="noopener">https://blog.csdn.net/wuapeng/article/details/80632446</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;一主一从：&lt;/strong&gt;&lt;br&gt;前提：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两台centos7（虚拟机或云服务器）&lt;/li&gt;
&lt;li&gt;防火墙已关闭&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主master：192.168.17.201             msql8.0.12&lt;br&gt;从slave：192.168.17.202        msql8.0.12&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://fuzui.net/categories/mysql/"/>
    
    
      <category term="linux" scheme="https://fuzui.net/tags/linux/"/>
    
      <category term="mysql主从复制" scheme="https://fuzui.net/tags/mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>基于SSM的学生信息管理系统(选课)</title>
    <link href="https://fuzui.net/%E5%9F%BA%E4%BA%8ESSM%E7%9A%84%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F(%E9%80%89%E8%AF%BE).html"/>
    <id>https://fuzui.net/基于SSM的学生信息管理系统(选课).html</id>
    <published>2019-04-15T06:49:05.000Z</published>
    <updated>2019-06-19T16:14:16.495Z</updated>
    
    <content type="html"><![CDATA[<p><strong>项目简介：</strong><br>由SpringMVC+MyBatis为主要框架，mysql8.0配置主从复制实现读写分离，主机丛机分别为腾讯云的服务器，而项目部署在阿里云上。前端主要由bootstrap完成，背景用particles.js插件。数据库交互查询用到pagehelper分页。在添加修改相关功能时通过ajax来验证其主键是否存在可用。代码层次清晰，输入框约束较高，已配置登录拦截。</p><a id="more"></a><h4 id="一、应用技术"><a href="#一、应用技术" class="headerlink" title="一、应用技术"></a>一、应用技术</h4><ul><li>工具：eclipse、navicat</li><li>环境：JDK1.8、tomcat9.0、mysql8.0</li><li>前端：JavaScript、jQuery、bootstrap4、particles.js</li><li>后端：maven、SpringMVC、MyBatis、ajax、mysql读写分离、mybatis分页</li></ul><h4 id="二、环境搭建"><a href="#二、环境搭建" class="headerlink" title="二、环境搭建"></a>二、环境搭建</h4><ol><li>建议安装eclipse4.8及以上<br> 官网下载：<a href="https://www.eclipse.org/downloads/" target="_blank" rel="noopener">点击进入官网下载</a></li><li>JDK 1.8<br> 官网下载：<a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">点击进入官网下载</a></li><li>MySQL8.0<br> 官网下载：<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/</a><br> windows安装：略！<br> linux安装请查看：<a href="https://fuzui.net/2019/04/15/mysql-master-slave/#more">https://fuzui.net/2019/04/15/mysql-master-slave/#more</a><br> mysql主从搭建(可有可无)：如果不需要读写分离只需要把applicationContext.xml配置文件改一下即可，这样也就不必搭建主从。<br> 搭建有以下方式<br> （1）单台linux通过docker搭建mysql主从：<br> <a href="https://blog.csdn.net/supermao1013/article/details/83065682" target="_blank" rel="noopener">https://blog.csdn.net/supermao1013/article/details/83065682</a><br> （2）两台云服务器或虚拟机（我用的这种方式）：<br> <a href="https://fuzui.net/2019/04/15/mysql-master-slave/#more">https://fuzui.net/2019/04/15/mysql-master-slave/#more</a></li><li>tomcat 9.0<br> 官方下载：<a href="https://tomcat.apache.org/download-90.cgi" target="_blank" rel="noopener">点击进入官网下载</a></li><li><p>navicat数据库工具<br> 百度网盘下载：<a href="https://pan.baidu.com/s/1BWQglimJH4_heiKLyH0lKg" target="_blank" rel="noopener">https://pan.baidu.com/s/1BWQglimJH4_heiKLyH0lKg</a><br> 提取码：eslh</p><p> <em>eclipse、jdk、tomcat等相关安装配置步骤省略</em></p></li></ol><h4 id="三、功能"><a href="#三、功能" class="headerlink" title="三、功能"></a>三、功能</h4><p>这是在上个springmvc选课系统的基础上进行修改完善的，目前功能基本相同，修复诸多bug，上个系统中有详细介绍：<a href="https://fuzui.net/2018/12/08/onlineSC-springmvc/">B/S基于springMVC的网上选课系统</a><br>主要功能模块图：<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190414000551.png" alt></p><p><strong>新增：</strong></p><ul><li>增加分页查询</li><li>输入框约束<br>  学号、身份证、课程编号、教师编号只能输入数字，并且有最大输入限制，其中学号固定12位，若小于12位将会有提示。姓名只能输入中文。几乎所有输入框不能输入空格等约束</li><li>下拉框联动<br>  添加、修改课程采用二级联动，即所属系别——所属专业；<br>  添加、修改学生采用三级联动，即系别——专业——班级。（三级联动代码有些复杂，因为JavaScript学的不好=-=）。</li><li>ajax+springmvc验证<br>  用于验证学号、课程编号、教师编号是否存在并给出提示信息等。<br>  其中课程安排时间地点排重功能正在开发中····</li><li>登录拦截<br>  在handler层配置拦截器，对各角色进行登录拦截，即未登录用户不能直接通过相应url访问。<br>  <strong><em>更多功能持续更新中······</em></strong></li></ul><h4 id="四、数据库设计"><a href="#四、数据库设计" class="headerlink" title="四、数据库设计"></a>四、数据库设计</h4><blockquote><p>总共六个表：学生表、教师表、管理员表、课程表、课程安排表、选课表。</p></blockquote><p>&emsp;&emsp;管理员表admin</p><table><thead><tr><th>列名</th><th>类型</th><th>约束</th><th>备注</th></tr></thead><tbody><tr><td>Aname</td><td>Varchar（12）</td><td>主键</td><td>账号</td></tr><tr><td>Apassword</td><td></td><td></td><td>密码</td></tr></tbody></table><p>&emsp;&emsp;学生表Student</p><table><thead><tr><th>列名</th><th>类型</th><th>约束</th><th>备注</th></tr></thead><tbody><tr><td>Sid</td><td>Char(12)</td><td>非空、主键</td><td>学号</td></tr><tr><td>Sname</td><td>Varchar（8）</td><td>非空</td><td>姓名</td></tr><tr><td>Sidcard</td><td>Char(18)</td><td>非空</td><td>身份证</td></tr><tr><td>Ssex</td><td>Char(2)</td><td>男女</td><td>性别</td></tr><tr><td>Spassword</td><td>Varchar(12)</td><td>非空</td><td>密码</td></tr><tr><td>Sage</td><td>Char（2）</td><td></td><td>年龄</td></tr><tr><td>Classr</td><td>Varchar（15）</td><td></td><td>班级</td></tr><tr><td>profession</td><td>Varchar（15）</td><td></td><td>专业</td></tr><tr><td>College</td><td>Varchar（15）</td><td></td><td>学院</td></tr></tbody></table><p>&emsp;&emsp;教师表Teacher</p><table><thead><tr><th>列名</th><th>类型</th><th>约束</th><th>备注</th></tr></thead><tbody><tr><td>Tid</td><td>Char（4）</td><td>主键</td><td>工号</td></tr><tr><td>Tname</td><td>Varchar(8)</td><td></td><td>姓名</td></tr><tr><td>Tpassword</td><td>Varchar(12)</td><td></td><td>密码</td></tr><tr><td>Tsex</td><td>Char(2)</td><td>男女</td><td>性别</td></tr><tr><td>Introduction</td><td>Varchar（100）</td><td></td><td>简介</td></tr></tbody></table><p>&emsp;&emsp;课程表course</p><table><thead><tr><th>列名</th><th>类型</th><th>约束</th><th>备注</th></tr></thead><tbody><tr><td>Cid</td><td>Char（4）</td><td>主键</td><td>课程号</td></tr><tr><td>Cname</td><td>varChar(15)</td><td></td><td>课程名</td></tr><tr><td>Cintroduction</td><td>Varchar（100）</td><td></td><td>简介</td></tr><tr><td>Type</td><td>Varchar（15）</td><td></td><td>类型（选修，必修）</td></tr><tr><td>Belongcoll</td><td>Varchar（15）</td><td></td><td>所属学院</td></tr><tr><td>Belongpro</td><td>Varchar（15）</td><td></td><td>所属专业</td></tr></tbody></table><p>&emsp;&emsp;课程安排</p><table><thead><tr><th>列名</th><th>类型</th><th>约束</th><th>备注</th></tr></thead><tbody><tr><td>Courseclass</td><td>Varchar（12）</td><td>主键</td><td>开课班级</td></tr><tr><td>Coursetime</td><td>Varchar（12）</td><td></td><td>上课时间</td></tr><tr><td>Courseweek</td><td>Varchar（12）</td><td></td><td>上课周</td></tr><tr><td>Cid</td><td>Char（4）</td><td>外键</td><td>课程号</td></tr><tr><td>Tid</td><td>Char（4）</td><td>外键</td><td>教师编号</td></tr><tr><td>Classroom</td><td>Varchar（6）</td><td></td><td>上课教室</td></tr><tr><td>credits</td><td>Int（11）</td><td></td><td>学分</td></tr><tr><td>period</td><td>Int（11）</td><td></td><td>学时</td></tr><tr><td>Totalnum</td><td>Int（11）</td><td></td><td>总人数</td></tr></tbody></table><p>&emsp;&emsp;选课表sc</p><table><thead><tr><th>列名</th><th>类型</th><th>约束</th><th>备注</th></tr></thead><tbody><tr><td>Id</td><td>varChar（4）</td><td>自动增长、主键</td><td>用于传值</td></tr><tr><td>Sid</td><td>Char(12)</td><td>外键</td><td>学生学号</td></tr><tr><td>Cid</td><td>Char（4）</td><td>外键</td><td>课程编号</td></tr></tbody></table><h4 id="五、主页面截图"><a href="#五、主页面截图" class="headerlink" title="五、主页面截图"></a>五、主页面截图</h4><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190415162534.png" alt><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/1555316814587.png" alt="enter description here"><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190415162832.png" alt><br>更多请查看演示</p><h4 id="六、项目层次"><a href="#六、项目层次" class="headerlink" title="六、项目层次"></a>六、项目层次</h4><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190415164959.png" alt></p><h4 id="七、展示与下载"><a href="#七、展示与下载" class="headerlink" title="七、展示与下载"></a>七、展示与下载</h4><p>展示：<br><a href="http://studentInfo.fuzui.net" target="_blank" rel="noopener">studentInfo.fuzui.net</a><br>请大佬不要攻击我毫无防御的服务器~<br>如果发现什么bug希望能够及时留言或联系我，会尽快修正。</p><p>下载：</p><ul><li><p>github：<a href="https://github.com/fuzui/StudentInfo" target="_blank" rel="noopener">https://github.com/fuzui/StudentInfo</a></p></li><li><p>百度网盘下载：<a href="https://pan.baidu.com/s/12ayd387DBVVG19ArzG6t4Q" target="_blank" rel="noopener">https://pan.baidu.com/s/12ayd387DBVVG19ArzG6t4Q</a><br>提取码：twmd<br>推荐github下载，百度网盘不会更新=-=</p></li></ul><p>还可留邮箱我发源码</p><p>最终感谢大佬给予前端风格设计帮助 <em>@进军的橙子君</em></p><p><strong>如果部署运行测试中出现问题可以找我~,留言会在12小时内回复</strong></p><p><em>2019.4.26解决因为数据库远程连接而出现一系列问题的bug，github更新：主要在连接上加<code>allowPublicKeyRetrieval=true</code>。</em></p><p><em>2019年6月19日更新：</em><br>新增结课、成绩录入、学分统计功能。<br>成绩录入处有bug，可以录入多次成绩，后续再修改</p><p>特别说明：<br>如果你的版本和我的完全一致，那么运行是完全容易的，在这里再重申一遍版本：eclipse4.8及以上，mysql8，tomcat9，JDK8。版本一致的话出现问题可无偿帮调试。<br><em>如果版本不一致烦请您自己折腾（举个例子：mysql5、eclipse3.3、tomcat7······）。</em></p><hr><p><br></p><hr><center><font face="华文行楷" size="6" color="blue"><br>当你的才华还撑不起你的野心的时候，<br>你就应该静下心来学习。<br></font><br></center><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;项目简介：&lt;/strong&gt;&lt;br&gt;由SpringMVC+MyBatis为主要框架，mysql8.0配置主从复制实现读写分离，主机丛机分别为腾讯云的服务器，而项目部署在阿里云上。前端主要由bootstrap完成，背景用particles.js插件。数据库交互查询用到pagehelper分页。在添加修改相关功能时通过ajax来验证其主键是否存在可用。代码层次清晰，输入框约束较高，已配置登录拦截。&lt;/p&gt;
    
    </summary>
    
      <category term="项目" scheme="https://fuzui.net/categories/%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="项目" scheme="https://fuzui.net/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>linux(centos7)定时任务crontab</title>
    <link href="https://fuzui.net/linux%E5%AE%9A%E6%97%B6%E5%99%A8crontab.html"/>
    <id>https://fuzui.net/linux定时器crontab.html</id>
    <published>2019-04-06T05:48:54.000Z</published>
    <updated>2019-04-06T06:03:25.100Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>百度百科：crontab命令常见于Unix和类Unix的操作系统之中，用于设置周期性被执行的指令。该命令从标准输入设备读取指令，并将其存放于“crontab”文件中，以供之后读取和执行。该词来源于希腊语 chronos(χρνο)，原意是时间。通常，crontab储存的指令被守护进程激活， crond常常在后台运行，每一分钟检查是否有预定的作业需要执行。这类作业一般称为cron jobs。</p></blockquote><p><em>在centos7中：</em><br><strong>启动</strong><br><code>systemctl start crond</code></p><p><strong>停止</strong><br><code>systemctl stop crond</code></p><p><strong>重启</strong><br><code>systemctl restart crond</code></p><p><strong>编辑</strong><br><code>crontab -e</code></p><p><strong>删除</strong><br><code>crontab -r</code></p><p><strong>添加任务</strong></p><p><code>* * * * * command</code><br><em>表示分钟1-59  每分钟用 </em>/1 表示<br><em>表示小时1-23</em>表示日期1-31<br><em>表示月份1-12</em>表示星期0-6</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;百度百科：crontab命令常见于Unix和类Unix的操作系统之中，用于设置周期性被执行的指令。该命令从标准输入设备读取指令，并将其存放于“crontab”文件中，以供之后读取和执行。该词来源于希腊语 chronos(χρνο)，原意是时间。通常
      
    
    </summary>
    
      <category term="linux" scheme="https://fuzui.net/categories/linux/"/>
    
    
      <category term="linux" scheme="https://fuzui.net/tags/linux/"/>
    
      <category term="crontab" scheme="https://fuzui.net/tags/crontab/"/>
    
  </entry>
  
  <entry>
    <title>HIVE的搭建配置及关联MySQL</title>
    <link href="https://fuzui.net/HIVE%E7%9A%84%E6%90%AD%E5%BB%BA%E9%85%8D%E7%BD%AE%E5%8F%8A%E5%85%B3%E8%81%94MySQL.html"/>
    <id>https://fuzui.net/HIVE的搭建配置及关联MySQL.html</id>
    <published>2019-04-03T07:37:58.000Z</published>
    <updated>2019-04-03T12:12:05.065Z</updated>
    
    <content type="html"><![CDATA[<p><strong>概念：</strong></p><blockquote><p>Hive是由Facebook实现并开源。是基于Hadoop的一个数据仓库工具，可以将结构化的数据映射为一张数据库表，并提供HQL（Hive SQL）查询功能。其底层数据时存储在HDFS上。Hive的本质是将SQL语句转换为MapReduce任务运行，使部署需MapReduce的用户很方便地利用HQL处理和计算HDFS上的结构化数据，使用于离线的批量数据计算。</p></blockquote><a id="more"></a><h4 id="一、下载"><a href="#一、下载" class="headerlink" title="一、下载"></a>一、下载</h4><p><strong>前提：</strong> 配置好hadoop分布式环境，我在上一篇博文写到<a href="https://fuzui.net/2019/03/27/hadoop-fully-distributed/">Hadoop从零开始搭建完全分布式</a>。</p><p>官网下载hive，这里我用hive-1.2.2版本：官网下载地址：<a href="http://mirrors.shu.edu.cn/apache/hive/hive-1.2.2/" target="_blank" rel="noopener">http://mirrors.shu.edu.cn/apache/hive/hive-1.2.2/</a></p><p>我这里选择下载到本地然后通过xftp上传到虚拟机上。<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190403160608.png" alt></p><p>解压：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf apache-hive-1.2.2-bin.tar.gz</span><br></pre></td></tr></table></figure></p><p>重命名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv apache-hive-1.2.2-bin hive-1.2.2</span><br></pre></td></tr></table></figure></p><h4 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h4><p>（1）配置环境变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br></pre></td></tr></table></figure></p><p>将以下添加在末尾<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export HIVE_HOME=/software/hive-1.2.2</span><br><span class="line">PAHT=$PATH:$HIVE_HOME/bin</span><br></pre></td></tr></table></figure></p><p>刷新<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></p><p>查看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></p><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190403162230.png" alt><br>（2）配置文件<br>修改software/hive-1.2.2/conf/hive-env.sh.template为hive-env.sh。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /software/hive-1.2.2/conf/</span><br><span class="line">cp hive-env.sh.template hive-env.sh</span><br></pre></td></tr></table></figure></p><ul><li>配置HADOOP_HOME=/Hadoop所在路径</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export HADOOP_HOME=/software/hadoop2.7.2</span><br></pre></td></tr></table></figure><ul><li>配置HIVE_CONF_DIR=/Hive中conf文件夹路径<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export HIVE_CONF_DIR=/software/hive-1.2.2/conf</span><br></pre></td></tr></table></figure></li></ul><h4 id="三、启动"><a href="#三、启动" class="headerlink" title="三、启动"></a>三、启动</h4><p>（1）启动HDFS<br>在hadoop01机上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start-dfs.sh</span><br></pre></td></tr></table></figure></p><p>（2）启动YARN<br>在hadoop02机上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start-yarn.sh</span><br></pre></td></tr></table></figure></p><p>通过jps检测启动情况<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190403163744.png" alt><br>（3）在HDFS上创建/tmp和/user/hive/warehouse<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -mkdir /tmp</span><br><span class="line">hadoop fs -mkdir -p /user/hive/warehouse</span><br></pre></td></tr></table></figure></p><p>（4）修改文件夹权限，同组可写<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -chmod 775 /tmp</span><br><span class="line">hadoop fs -chmod 775 /user/hive/warehouse</span><br></pre></td></tr></table></figure></p><p>（5）启动Hive<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hive</span><br></pre></td></tr></table></figure></p><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190403164248.png" alt></p><h4 id="四、hive基本操作"><a href="#四、hive基本操作" class="headerlink" title="四、hive基本操作"></a>四、hive基本操作</h4><p>1.基本操作(语法类似于MySQL)<br>2.显示所有数据库：show databases;<br>3.使用数据库(默认数据库default):use 数据库名;<br>4.显示使用数据库下所有表:show tables;<br>5.创建表:create table 表名(字段1 类型,字段2 类型…)<br>6.插入数据(map reduce):insert into 表名 (字段1,字段2…) values (数据1,数据2…)<br>7.查询数据:select 字段 from 表名;<br>8.删除表:drop table 表名;<br>9.退出:exit</p><h4 id="五、安装mysql"><a href="#五、安装mysql" class="headerlink" title="五、安装mysql"></a>五、安装mysql</h4><h5 id="1-卸载Mariadb"><a href="#1-卸载Mariadb" class="headerlink" title="1. 卸载Mariadb"></a>1. 卸载Mariadb</h5><p>CentOS7自带的是 Mariadb<br>（1）查找<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa|grep mariadb</span><br></pre></td></tr></table></figure></p><p>（2）删除<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e --nodeps 上面查出来的文件名</span><br></pre></td></tr></table></figure></p><p>（3）删除配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm /etc/my.cnf</span><br></pre></td></tr></table></figure></p><h5 id="2-下载mysql-8-0"><a href="#2-下载mysql-8-0" class="headerlink" title="2.下载mysql 8.0"></a>2.下载mysql 8.0</h5><p>这里我通过rpm安装<br>官网下载：<a href="https://dev.mysql.com/downloads/file/?id=484537" target="_blank" rel="noopener">mysql8.0.15</a><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190403165951.png" alt><br>（1）解压<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf mysql-8.0.15-1.el7.x86_64.rpm-bundle.tar</span><br></pre></td></tr></table></figure></p><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190403170217.png" alt><br>（2）安装<br>解决一些依赖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum -y install numactl    </span><br><span class="line">yum -y install libaio.so.1 libgcc_s.so.1 libstdc++.so.6</span><br><span class="line">yum update libstdc++-4.4.7-4.el6.x86_64</span><br><span class="line">yum search libaio</span><br><span class="line">yum install libaio</span><br><span class="line">yum install net-tools</span><br><span class="line">yum install openssl-devel</span><br></pre></td></tr></table></figure></p><p>按次序安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh MySQL-client-5.6.43-1.el7.x86_64.rpmrpm -ivh mysql-community-common-8.0.15-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-libs-8.0.15-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-client-8.0.15-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-server-8.0.15-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure></p><p>（3）初始化<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize --user=mysql --basedir=/usr --datadir=/var/lib/mysql</span><br></pre></td></tr></table></figure></p><p>（4）启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure></p><p>（5）修改密码</p><ul><li>编辑配置文件<br>vim /etc/my.cnf<br>在[mysqld]下添加skip-grant-tables<br>保存退出</li><li>重启mysql服务<br>systemctl restart mysqld</li><li>通过mysql -uroot -p<br>登录，密码直接回车即可</li><li>选择mysql数据库<br>use mysql;</li><li>将默认密码清空<br>update user set authentication_string=’’ where user=’root’;<br>exit命令退出</li><li>删除 /etc/my.cnf 文件刚刚添加的 skip-grant-tables<br>vim /etc/my.cnf<br>选中skip-grant-tables所在行按两下d键即可删除<br>保存退出</li><li>重启mysql服务<br>systemctl restart mysqld</li><li>再次登录<br>mysql -uroot -p<br>登录，密码直接回车即可</li><li>设置密码（我这里将密码设为root）<br>选择mysql数据库<br>use mysql;<br>ALTER user ‘root‘@’localhost’ IDENTIFIED BY ‘root’;</li><li>设置远程访问<br>update user set host=’%’ where user=’root’;</li><li>重启<br>exit退出<br>重启服务systemctl restart mysqld<br>重新通过mysql -uroot -proot登录</li><li>远程连接<br>我通过navicat远程连接，<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190403182935.png" alt></li><li>设置开机启动<br>systemctl enable mysqld</li></ul><p>至此，mysql安装完成。</p><h4 id="六、hive关联mysql"><a href="#六、hive关联mysql" class="headerlink" title="六、hive关联mysql"></a>六、hive关联mysql</h4><h5 id="1-下载驱动jar"><a href="#1-下载驱动jar" class="headerlink" title="1.下载驱动jar"></a>1.下载驱动jar</h5><p>我安装的是mysql8.0.15版本，我找对应版本的jar<br>平时个人比较喜欢到mvnrepository去找jar，附上地址：<a href="https://mvnrepository.com/artifact/mysql/mysql-connector-java/8.0.15" target="_blank" rel="noopener">https://mvnrepository.com/artifact/mysql/mysql-connector-java/8.0.15</a></p><p>将下载好的jar放到hadoop01虚拟机中hive安装目录的lib文件夹下<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190403183816.png" alt></p><h5 id="2-配置hive-site-xml"><a href="#2-配置hive-site-xml" class="headerlink" title="2.配置hive-site.xml"></a>2.配置hive-site.xml</h5><p>创建hive-site.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /software/hive-1.2.2/conf</span><br><span class="line">vim hive-site.xml</span><br></pre></td></tr></table></figure></p><p>将以下添加进去（灵活应变）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">        &lt;property&gt;</span><br><span class="line">                &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt;</span><br><span class="line">                &lt;value&gt;jdbc:mysql://192.168.17.134:3306/myhive?createDatabaseIfNotExist=true&lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">        &lt;property&gt;</span><br><span class="line">                &lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt;</span><br><span class="line">                &lt;value&gt;com.mysql.cj.jdbc.Driver&lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">        &lt;property&gt;</span><br><span class="line">                &lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt;</span><br><span class="line">                &lt;value&gt;root&lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">        &lt;property&gt;</span><br><span class="line">                &lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt;</span><br><span class="line">                &lt;value&gt;root&lt;/value&gt;</span><br><span class="line"> &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure></p><h5 id="3-重启整个集群"><a href="#3-重启整个集群" class="headerlink" title="3.重启整个集群"></a>3.重启整个集群</h5><p>（1）在Hadoop02上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stop-yarn.sh</span><br></pre></td></tr></table></figure></p><p>（2）在Hadoop01上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stop-dfs.sh</span><br></pre></td></tr></table></figure></p><p>（3）在Hadoop01上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start-dfs.sh</span><br></pre></td></tr></table></figure></p><p>（4）在Hadoop02上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start-yarn.sh</span><br></pre></td></tr></table></figure></p><p>（5）在Hadoop01上重启mysql<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure></p><h5 id="4-启动"><a href="#4-启动" class="headerlink" title="4.启动"></a>4.启动</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hive</span><br></pre></td></tr></table></figure><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190403190805.png" alt><br>启动完成后用navicat查看发现已经自动创建了myhive数据库。<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190403190031.png" alt><br>也可以通过命令行查看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -proot</span><br><span class="line">show databases;</span><br></pre></td></tr></table></figure></p><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190403190923.png" alt></p><h5 id="5-其他配置（看需求）"><a href="#5-其他配置（看需求）" class="headerlink" title="5.其他配置（看需求）"></a>5.其他配置（看需求）</h5><p>hive-site.xml中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#数据库存放位置</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;hive.metastore.warehouse.dir&lt;/name&gt; </span><br><span class="line">&lt;value&gt;/user/hive/warehouse&lt;/value&gt;</span><br><span class="line">&lt;description&gt;location of default database for the warehouse&lt;/description&gt; </span><br><span class="line">&lt;/property&gt; </span><br><span class="line">#查询时显示字段名称和数据库名</span><br><span class="line">&lt;property&gt; </span><br><span class="line">&lt;name&gt;hive.cli.print.header&lt;/name&gt;</span><br><span class="line">&lt;value&gt;true&lt;/value&gt; </span><br><span class="line">&lt;/property&gt; </span><br><span class="line">&lt;property&gt; </span><br><span class="line">&lt;name&gt;hive.cli.print.current.db&lt;/name&gt;</span><br><span class="line"> &lt;value&gt;true&lt;/value&gt; </span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure></p><h4 id="七、测试"><a href="#七、测试" class="headerlink" title="七、测试"></a>七、测试</h4><p>（1）进入数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create database fuzui;</span><br><span class="line">use fuzui;</span><br></pre></td></tr></table></figure></p><p>（2）创建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table student(</span><br><span class="line">    id int, </span><br><span class="line">    name string, </span><br><span class="line">    age int, </span><br><span class="line">    sex string)</span><br><span class="line">row format delimited fields terminated by &apos;,&apos;;</span><br></pre></td></tr></table></figure><p>在mysql中会看到创建这个表的字段信息<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190403200116.png" alt><br>（3）退出hive<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure></p><p>（4）创建本地文件上传到HDFS</p><p><1>我直接用的root用户，所以我在root目录下创建<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /root</span><br><span class="line">vim fz.txt</span><br></pre></td></tr></table></figure></1></p><p>添加如下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">201501,wangze,22,man</span><br><span class="line">201502,wangchen,20,man</span><br><span class="line">201503,liyu,20,woman</span><br><span class="line">201504,zhangna,21,woman</span><br><span class="line">201505,songxin,19,woman</span><br><span class="line">201506,changyi,18,man</span><br><span class="line">201507,liuni,20,woman</span><br><span class="line">201508,zhaoming,22,man</span><br></pre></td></tr></table></figure></p><p>保存退出</p><p><2>上传hdfs</2></p><ul><li>创建文件夹<br><code>hadoop fs -mkdir /myhive</code></li><li>上传<br><code>hadoop fs -put /root/fz.txt /myhive</code></li><li>查看<br><code>hadoop fs -cat /myhive/fz.txt</code><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190403193537.png" alt><br>（5）进入hive<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hive</span><br></pre></td></tr></table></figure></li></ul><p>（6）导入hive表</p><ul><li>进入数据库<br>  <code>use fuzui</code></li><li><p>导入<br><code>load data inpath &#39;/myhive/fz.txt&#39; into table student;</code><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190403194307.png" alt></p></li><li><p>查看数据<br><code>select * from student;</code><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190403194417.png" alt></p></li><li><p>稍微复杂点的查询<br>查询最小的女生多少岁<br><code>select min(age) from student where sex = &#39;woman&#39;;</code><br>这时，就开始一系列运行了，速度会慢。</p></li></ul><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190403195629.png" alt></p><p><strong><em>==至此，HIVE搭建成功！==</em></strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;概念：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hive是由Facebook实现并开源。是基于Hadoop的一个数据仓库工具，可以将结构化的数据映射为一张数据库表，并提供HQL（Hive SQL）查询功能。其底层数据时存储在HDFS上。Hive的本质是将SQL语句转换为MapReduce任务运行，使部署需MapReduce的用户很方便地利用HQL处理和计算HDFS上的结构化数据，使用于离线的批量数据计算。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="hadoop" scheme="https://fuzui.net/categories/hadoop/"/>
    
    
      <category term="linux" scheme="https://fuzui.net/tags/linux/"/>
    
      <category term="hadoop" scheme="https://fuzui.net/tags/hadoop/"/>
    
      <category term="hive" scheme="https://fuzui.net/tags/hive/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop从零开始搭建完全分布式</title>
    <link href="https://fuzui.net/Hadoop%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E5%AE%8C%E5%85%A8%E5%88%86%E5%B8%83%E5%BC%8F.html"/>
    <id>https://fuzui.net/Hadoop从零开始搭建完全分布式.html</id>
    <published>2019-03-27T15:34:48.000Z</published>
    <updated>2019-04-03T04:28:21.978Z</updated>
    
    <content type="html"><![CDATA[<p><strong>简介：</strong></p><blockquote><p>由三个或以上实体机或虚拟机组成的集群。</p></blockquote><p><strong>准备：</strong></p><blockquote><p>1.hadoop2.7.2版本<br>2.jdk8版本<br>3.vmware</p></blockquote><a id="more"></a><h4 id="一、创建虚拟机及相关配置"><a href="#一、创建虚拟机及相关配置" class="headerlink" title="一、创建虚拟机及相关配置"></a>一、创建虚拟机及相关配置</h4><h5 id="1-创建虚拟机"><a href="#1-创建虚拟机" class="headerlink" title="1.创建虚拟机"></a>1.创建虚拟机</h5><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/1553754905885.png" alt><br>一路下一步，选择已有centos7镜像<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328143641.png" alt><br>这里我取名为hadoop01<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328143753.png" alt><br>选择NAT网络模式<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328143852.png" alt><br>设置相关硬件<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328144135.png" alt><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328144100.png" alt><br>然后等待创建（中间空的步骤均使用默认）<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328144756.png" alt><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328145249.png" alt><br>开始安装：<br>设置root密码和创建一个用户<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328145401.png" alt><br>等待安装完成</p><h5 id="2-查看ip并修改主机名以及配置映射"><a href="#2-查看ip并修改主机名以及配置映射" class="headerlink" title="2.查看ip并修改主机名以及配置映射"></a>2.查看ip并修改主机名以及配置映射</h5><p>（1）查看并修改ip<br>我将这一台的ip设为192.168.17.134<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/sysconfig/network-scripts/</span><br><span class="line">vim vi ifcfg-ens33</span><br><span class="line">#这个配置每个人都可能不一样，进去修改</span><br></pre></td></tr></table></figure></p><p>将原来的完全替换（灵活修改name和device）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">NAME=ens33</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.17.134</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.17.2</span><br><span class="line">DNS1=8.8.8.8</span><br></pre></td></tr></table></figure></p><p>重启reboot<br>ping <a href="http://www.baidu.com查看网络是否通" target="_blank" rel="noopener">www.baidu.com查看网络是否通</a></p><p>永久关闭防火墙：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br></pre></td></tr></table></figure><p>这里我使用的secureCRT连接我的虚拟机。<br>（2）修改主机名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hostname</span><br><span class="line">修改为hadoop01</span><br></pre></td></tr></table></figure></p><p>（3）配置ip映射<br>预计后面两台虚拟机的ip分别是192.168.17.135和192.168.17.136<br>有以下关系</p><table><thead><tr><th>主机</th><th>ip</th></tr></thead><tbody><tr><td>hadoop01</td><td>192.168.17.134</td></tr><tr><td>hadoop02</td><td>192.168.17.135</td></tr><tr><td>hadoop03</td><td>192.168.17.134</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hosts</span><br><span class="line">#</span><br><span class="line">127.0.0.1   localhost</span><br><span class="line">192.168.17.134   hadoop01</span><br><span class="line">192.168.17.135   hadoop02</span><br><span class="line">192.168.17.136   hadoop03</span><br></pre></td></tr></table></figure><p>重启reboot</p><h5 id="3-上传hadoop和jdk并配置环境变量"><a href="#3-上传hadoop和jdk并配置环境变量" class="headerlink" title="3.上传hadoop和jdk并配置环境变量"></a>3.上传hadoop和jdk并配置环境变量</h5><p>（1）安装ftp</p><p>安装ftp<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install vsftpd lftp ftp</span><br></pre></td></tr></table></figure></p><p>（2）上传<br>这里我使用的是xftp6工具<br>上传相关包<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328150814.png" alt><br>然后创建相关目录并解压<br>我在根目录下创建software<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /software</span><br></pre></td></tr></table></figure></p><p>将hadoop和jdk解压并重命名放在其下。（解压移动重命名基础过程省略）</p><p>（3）配置环境变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br></pre></td></tr></table></figure></p><p>在后面添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/software/jdk1.8</span><br><span class="line">export HADOOP_HOME=/software/hadoop2.7.2</span><br><span class="line">PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line">PATH=$PATH:$HADOOP_HOME/bin</span><br><span class="line">PATH=$PATH:$HADOOP_HOME/sbin</span><br></pre></td></tr></table></figure></p><p>刷新生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></p><p>检测<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $PATH</span><br></pre></td></tr></table></figure></p><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328162516.png" alt></p><h5 id="3-修改hadoop配置文件"><a href="#3-修改hadoop配置文件" class="headerlink" title="3.修改hadoop配置文件"></a>3.修改hadoop配置文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /software/hadoop2.7.2/etc/hadoop/</span><br></pre></td></tr></table></figure><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328162713.png" alt></p><p>vi修改，以下xml文件修改在configuration标签内<br>1.core-site.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">&lt;value&gt;hdfs://hadoop01:9000&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">&lt;value&gt;/software/hadoop2.7.2/data/tmp&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure></p><p>2.hadoop-env.sh<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/software/jdk1.8</span><br></pre></td></tr></table></figure></p><p>3.hdfs-site.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">&lt;value&gt;3&lt;/balue&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.namenode.secondary.http-address&lt;/name&gt;</span><br><span class="line">&lt;value&gt;hadoop03:50090&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure></p><p>4.slavs</p><p><font color="red">配置datanode节点的ip，每个占一行，不能出现多余的空格和换行行</font><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.17.134</span><br><span class="line">192.168.17.135</span><br><span class="line">192.168.17.136</span><br></pre></td></tr></table></figure></p><p>5.yarn-env.sh<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/software/jdk1.8</span><br></pre></td></tr></table></figure></p><p>6.yarn-site.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">&lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</span><br><span class="line">&lt;value&gt;hadoop02&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure></p><p>7.mapre-env.sh<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export $JAVA_HOME=/software/jdk1.8</span><br></pre></td></tr></table></figure></p><p>8.mapred-site.xml<br>将mapred-site.xml.template重命名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">&lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure></p><p>至此，一台配置完成，紧接着克隆出两台一模一样的</p><h4 id="二、克隆并配置"><a href="#二、克隆并配置" class="headerlink" title="二、克隆并配置"></a>二、克隆并配置</h4><h5 id="1-克隆"><a href="#1-克隆" class="headerlink" title="1.克隆"></a>1.克隆</h5><p>首先关机刚刚虚拟机<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328163857.png" alt><br>下一步，创建完整克隆<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328163944.png" alt><br>更名为hadoop02。<br>以此方法克隆出hadoop03。</p><h5 id="2-修改配置"><a href="#2-修改配置" class="headerlink" title="2.修改配置"></a>2.修改配置</h5><p>（1）分别修改主机名和ip<br>hadoop02    192.168.17.135<br>hadoop03    192.168.17.136<br>（2）重启reboot</p><h5 id="3-创建免密登录"><a href="#3-创建免密登录" class="headerlink" title="3.创建免密登录"></a>3.创建免密登录</h5><p>三台机器都执行ssh-keygen -t rsa,一路回车<br>cd ~/.ssh   查看</p><p>再分别执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id hadoop01</span><br><span class="line">ssh-copy-id hadoop02</span><br><span class="line">ssh-copy-id hadoop03</span><br></pre></td></tr></table></figure></p><p>检测<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh hadoop02</span><br><span class="line">ssh hadoop03</span><br></pre></td></tr></table></figure></p><h4 id="二、启动集群"><a href="#二、启动集群" class="headerlink" title="二、启动集群"></a>二、启动集群</h4><h5 id="1-启动"><a href="#1-启动" class="headerlink" title="1.启动"></a>1.启动</h5><p>（1）格式化namenode<br>在hadoop01上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs namenode -format</span><br></pre></td></tr></table></figure></p><p>（2）启动NameNode和DataNode(在hadoop01上)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start-dfs.sh</span><br></pre></td></tr></table></figure></p><p>（3）启动ResourceManager和NodeMananger(在hadoop02上)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start-yarn.sh</span><br></pre></td></tr></table></figure></p><h5 id="2-检测"><a href="#2-检测" class="headerlink" title="2.检测"></a>2.检测</h5><p>（1）jps检测<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328182607.png" alt></p><p>（2）登录web 192.168.17.134:50070<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328182651.png" alt></p><h4 id="三、测试"><a href="#三、测试" class="headerlink" title="三、测试"></a>三、测试</h4><h5 id="1-创建并上传hdfs测试文本"><a href="#1-创建并上传hdfs测试文本" class="headerlink" title="1.创建并上传hdfs测试文本"></a>1.创建并上传hdfs测试文本</h5><p>（1）本地通过vi创建了一个wz.txt，并编辑文本<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328183139.png" alt><br>（2）上传到hdfs上<br>创建输入文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -mkdir -p /data/input</span><br></pre></td></tr></table></figure></p><p>将wz.txt上传<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -put /root/wz.txt /data/input</span><br></pre></td></tr></table></figure></p><p>查看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -cat /data/input/wz.txt</span><br></pre></td></tr></table></figure></p><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328183609.png" alt></p><h5 id="2-执行官网测试wordcount"><a href="#2-执行官网测试wordcount" class="headerlink" title="2.执行官网测试wordcount"></a>2.执行官网测试wordcount</h5><p><font color="red">输出文件夹事先不能有！</font><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop jar /software/hadoop2.7.2/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.2.jar wordcount /data/input /data/output</span><br></pre></td></tr></table></figure></p><p>中间部分过程<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328184038.png" alt><br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328184127.png" alt><br>执行完成<br>查看输出文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -ls /data/output/</span><br></pre></td></tr></table></figure></p><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328184236.png" alt><br>其中part-r-00000便是输出结果<br>查看：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -cat /data/output/part-r-00000</span><br></pre></td></tr></table></figure></p><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328184355.png" alt></p><p>也可以通过192.168.17.134:50070查看<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328184619.png" alt><br>点进data——output<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328184722.png" alt><br>点击part-r-00000<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328184751.png" alt></p><p>下载这块，如果想点击下载，需要在你本机上配置ip映射（或者点击下载后吧url上的hadoop02换成192.168.17.135也是可以的=-=）<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328184940.png" alt></p><p>win10上ip映射文件位置<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20190328185235.png" alt></p><p><br><br><br></p><p><strong><em>==至此，完全分布式搭建成功！==</em></strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;简介：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由三个或以上实体机或虚拟机组成的集群。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;准备：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.hadoop2.7.2版本&lt;br&gt;2.jdk8版本&lt;br&gt;3.vmware&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="hadoop" scheme="https://fuzui.net/categories/hadoop/"/>
    
    
      <category term="linux" scheme="https://fuzui.net/tags/linux/"/>
    
      <category term="hadoop" scheme="https://fuzui.net/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop搭建伪分布式</title>
    <link href="https://fuzui.net/Hadoop%E6%90%AD%E5%BB%BA%E4%BC%AA%E5%88%86%E5%B8%83%E5%BC%8F.html"/>
    <id>https://fuzui.net/Hadoop搭建伪分布式.html</id>
    <published>2019-03-25T11:35:18.000Z</published>
    <updated>2019-03-26T09:08:46.153Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概念"><a href="#概念" class="headerlink" title="==概念=="></a>==概念==</h3><blockquote><p>海量、高增长、多样化的信息数据<br>有三大发行版本</p><blockquote><p>Apache、CDH、HDP</p></blockquote></blockquote><a id="more"></a><h4 id="一、优势"><a href="#一、优势" class="headerlink" title="一、优势"></a>一、优势</h4><p><strong>1、高可靠性：</strong><br>Hadoop假设计算元素和存储会出现故障，因为它维护多个工作数据副本，在出现故障时可以对失败节点重新分布处理。<br><strong>2.高扩展性：</strong><br>在集群间分配任务数据，可方便扩展数以千计的节点。<br><strong>3.高效性：</strong><br>在MapReduce的思想下，Hadoop是并行工作的，以加快任务处理速度。<br><strong>4.高容错性：</strong><br>自动保存多份副本数据，并且能够自动将失败的任务重新分配。</p><h4 id="二、组成"><a href="#二、组成" class="headerlink" title="二、组成"></a>二、组成</h4><ul><li>Hadoop HDFS：一个高可靠、高吞吐的分布式文件系统。</li><li>Hadoop MapReduce：一个分布式的离线并行计算框架。</li><li>Hadoop YARN：一个资源调度平台，负责为运算程序提供服务器运算资源，相当于一个分布式的操作系统，而MaoReduce等运算程序则相当于运算于操作系统之上的应用程序。</li><li>ResourceManager：一个中心服务，用来调度、启动每一个Job所属的ApplicationMaster。</li><li>NodeManager：是每台机器框架的代理，是执行应用程序的容器，监控应用程序的资源使用情况，并向调度器汇报。</li><li><p>Hadoop Common：Hadoop体系最底层的一个模块，为Hadoop各个子项目提供各种工具，如：配置文件和日志操作等。</p><h4 id="三、运行模式"><a href="#三、运行模式" class="headerlink" title="三、运行模式"></a>三、运行模式</h4></li><li>本地模式（默认模式）：不需要启用单独进程，直接可以在运行、测试和开发时使用。</li><li>伪分布式模式：等同于完全分布式，只有一个节点。</li><li>完全分布式模式：多个节点一起运行。</li></ul><h4 id="四、伪分布式"><a href="#四、伪分布式" class="headerlink" title="四、伪分布式"></a>四、伪分布式</h4><h6 id="1-配置环境变量"><a href="#1-配置环境变量" class="headerlink" title="1. 配置环境变量"></a>1. 配置环境变量</h6><ul><li>安装JDK，配置环境变量</li><li>安装HADOOP，配置环境变量</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br><span class="line"></span><br><span class="line">export JAVA_HOME=JDK路径</span><br><span class="line">export HADOOP_HOME=hadoop路径</span><br><span class="line">PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line">PATH=$PATH:$HADOOP_HOME/bin</span><br><span class="line">PATH=$PATH:$HADOOP_HOME/sbin</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;保存后刷新</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h6 id="2-修改配置文件"><a href="#2-修改配置文件" class="headerlink" title="2. 修改配置文件"></a>2. 修改配置文件</h6><p>&emsp;&emsp;（1）hadoop-env.sh<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=JDK路路径</span><br></pre></td></tr></table></figure></p><p>  &emsp;&emsp;（2）core-site.xml<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 指定HDFS中的NameNode的地址 --&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">&lt;!-- 使用主机名或ip --&gt;</span><br><span class="line">&lt;value&gt;hdfs://主机名:9000&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;!-- 指定hadoop运行时产生文件的存储目录 --&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">&lt;!-- 默认路径/tmp/hadoop-$&#123;user.name&#125; --&gt;</span><br><span class="line">&lt;value&gt;/hadoop安装目录/data/tmp&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure></p><p>  &emsp;&emsp;（3）hdfs-site.xml<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 指定HDFS副本的数量 --&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">&lt;!-- 默认为3，伪分布式为单机模式，设置成1 --&gt;</span><br><span class="line">&lt;value&gt;1&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure></p><h6 id="3-启动集群"><a href="#3-启动集群" class="headerlink" title="3. 启动集群"></a>3. 启动集群</h6><p> &emsp;&emsp;（1）格式化namenode</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs namenade -format</span><br></pre></td></tr></table></figure><p> &emsp;&emsp;只需要在修改配置后格式化一次，格式化后会生成data和logs文件夹。<br>  &emsp;&emsp;（2）启动namenode</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop-daemon.sh start namenode</span><br></pre></td></tr></table></figure><p>  &emsp;&emsp;（3）启动datanode</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop-daemon.sh start datanode</span><br></pre></td></tr></table></figure><h6 id="5-查看集群"><a href="#5-查看集群" class="headerlink" title="5. 查看集群"></a>5. 查看集群</h6><p>   &emsp;&emsp;（1）jps（类似ps命令，只列出java相关程序进程）<br>   &emsp;&emsp;（2）查看日志，hadoop安装目录下的logs文件夹<br>   &emsp;&emsp;（3）使用hadoop系统自带的web程序<br>   &emsp;&emsp;&emsp;  http://主机名或ip:50070 访问HDFS系统</p><h6 id="6-操作集群"><a href="#6-操作集群" class="headerlink" title="6. 操作集群"></a>6. 操作集群</h6><blockquote><p>hadoop提供三套操作集群的命令，命令格式相同，①hdfs dfs，②hadoop dfs，③hadoop fs，使用hadoop fs，可操作任何类型的文件系统，其他两种只能操作HDFS.</p></blockquote><p>  &emsp;&emsp;（1）HDFS上创建文件夹<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -mkdir -p /hdfs上文件夹路径</span><br></pre></td></tr></table></figure></p><p>  &emsp;&emsp;（2）从linux上传文件到HDFS<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -put linux上文件路径 /hdfs上文件夹路径</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;（3）查看HDFS目录结构和文件内容<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -ls /hdfs上文件夹路径</span><br><span class="line">hadoop fs -cat /hdfs上文件路径</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;（4）在HDFS上运行官方示例<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hadoop jar hadoop安装目录/share/hadoop/mapreduce/hadoop-mapreduce-examples-版本号.jar 示例程序名称（wordcount） /HDFS输入文件夹 /HDFS输出文件夹</span><br><span class="line"></span><br><span class="line">#输出文件夹不可事先拥有。</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;（5）从HDFS上下载文件到linux<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -get /hdfs上文件路径 /linux文件夹</span><br></pre></td></tr></table></figure></p><p>  &emsp;&emsp;（6）HDFS删除<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -rmr /hdfs上文件或文件夹路径</span><br></pre></td></tr></table></figure></p><h6 id="7-配置YARN"><a href="#7-配置YARN" class="headerlink" title="7. 配置YARN"></a>7. 配置YARN</h6><p>&emsp;&emsp;（1）在yarn-env.sh和mapred-env.sh中配置JAVA_HOME<br>&emsp;&emsp;（2）yarn-site.sml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- NodeManager上运行的附属服务，许配置mapreduce_shuffle，才可运行MapReduce --&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">&lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;!-- 指定YARN的ResourceManager的地址 --&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</span><br><span class="line">&lt;value&gt;主机名&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;（3）mapred-site.sml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 指定MapReduce运行在Yarn上 --&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">&lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure></p><blockquote><p>在yarn集群上提交任务，等任务执行完成后，就不能查看log文件了，为了解决这个问题，可以开启historyserver，实现yarn集群上历史任务的保存，yarn的web程序中每一个job都对应一个history的链接。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 历史服务器地址 --&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt;</span><br><span class="line">&lt;value&gt;主机名:10020&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;!-- 历史服务器的web程序地址 --&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt;</span><br><span class="line">&lt;value&gt;主机名:19888&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure><h6 id="8-启动集群"><a href="#8-启动集群" class="headerlink" title="8. 启动集群"></a>8. 启动集群</h6><p>  <strong><em>必须先启动HDFS，再启动YARN。停止时先停止YARN，再停止HDFS</em></strong></p><p>  &emsp;&emsp;（1）格式化namenode(需先删除data和logs文件夹)<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs namenode -format</span><br></pre></td></tr></table></figure></p><p>  &emsp;&emsp;（2）启动NameNode和DataNode<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hadoop-daemon.sh start namenode</span><br><span class="line">hadoop-daemon.sh start datanode</span><br></pre></td></tr></table></figure></p><p>  &emsp;&emsp;（3）启动ResourceManager和NodeManager<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn-daemon.sh start resourcemanager</span><br><span class="line">yarn-daemon.sh start nodemanager</span><br></pre></td></tr></table></figure></p><h6 id="8-集群测试"><a href="#8-集群测试" class="headerlink" title="8. 集群测试"></a>8. 集群测试</h6><p>&emsp;&emsp;（1）查看yarn的web程序：http://主机名:8088<br>&emsp;&emsp;（2）命令行操作HDFS：hadoop fis -xxx<br>&emsp;&emsp;（3）查看HDFS的web程序：http://主机名:50070<br>&emsp;&emsp;（4）执行官方测试程序dataword<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop jar hadoop安装目录/share/hadoop/mapreduce/hadoop-mapreduce-examples-版本号.jar wordcount /HDFS输入文件夹 /HDFS输出文件夹</span><br></pre></td></tr></table></figure></p><blockquote><p>输出文件夹不可事先拥有。输入文件为统计每个单词个数，实现常见一个文本，编写若干个单词，空格或换行分割。然后上传到HDFS上，事先创建输入文件夹，将该文档上传于输入文件夹，最后运行上面命令。执行完成可查看输出文件夹内文件内容，便为“单词 个数”数行形式展现。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;==概念==&quot;&gt;&lt;/a&gt;==概念==&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;海量、高增长、多样化的信息数据&lt;br&gt;有三大发行版本&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Apache、CDH、HDP&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="hadoop" scheme="https://fuzui.net/categories/hadoop/"/>
    
    
      <category term="linux" scheme="https://fuzui.net/tags/linux/"/>
    
      <category term="hadoop" scheme="https://fuzui.net/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>linux下配置ftp（centos7）</title>
    <link href="https://fuzui.net/linux%E9%85%8D%E7%BD%AEftp.html"/>
    <id>https://fuzui.net/linux配置ftp.html</id>
    <published>2019-03-25T06:49:51.000Z</published>
    <updated>2019-03-28T10:56:23.528Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h4><h5 id="emsp-1-1-准备工作"><a href="#emsp-1-1-准备工作" class="headerlink" title="&emsp;1.1 准备工作"></a>&emsp;1.1 准备工作</h5><p>&emsp;&emsp;关闭防火墙</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">#在centos6中使用命令 service iptables stop</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;拥有固定ip</p><h5 id="emsp-1-2-yum安装"><a href="#emsp-1-2-yum安装" class="headerlink" title="&emsp;1.2 yum安装"></a>&emsp;1.2 yum安装</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install vsftpd lftp ftp</span><br></pre></td></tr></table></figure><h5 id="emsp-1-3-关闭开机启动"><a href="#emsp-1-3-关闭开机启动" class="headerlink" title="&emsp;1.3 关闭开机启动"></a>&emsp;1.3 关闭开机启动</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable firewalld</span><br><span class="line">#在centos6中使用命令 chkconfig vsftpd off</span><br></pre></td></tr></table></figure><h4 id="2-简介"><a href="#2-简介" class="headerlink" title="2.简介"></a>2.简介</h4><blockquote><p>ftp：文件传输协议<br>协议名：ftp<br>软件包：vsftpd<br>ftp端口：控制端口 21/tcp   数据端口 20/tcp<br>配置文件：/etc/vsftpd/vsftpd.conf</p></blockquote><p>&emsp;&emsp;(1)控制端口是用来建立连接的，不能传输数据。<br>&emsp;&emsp;(2)主动模式是服务器主动送达，客户端需提供地址，不安全。<br>&emsp;&emsp;(3)被动模式是客户端去服务器获取。<br>&emsp;&emsp;(4)主动和被动是由客户端决定。<br>&emsp;&emsp;<code>vi /etc/lftp.conf</code><br>&emsp;&emsp;主动模式<br>&emsp;&emsp;<code>set ftp:passive-mode off</code><br>&emsp;&emsp;被动模式<br>&emsp;&emsp;<code>set ftp:passive-mode on</code><br>&emsp;&emsp;服务器关闭被动模式<br>&emsp;&emsp;<code>vi /etc/vsftpd/vsftpd.conf</code><br>&emsp;&emsp;<code>pasv_enable=no</code></p><h4 id="3-配置文件"><a href="#3-配置文件" class="headerlink" title="3.配置文件"></a>3.配置文件</h4><p>&emsp;&emsp;==vsftpd.conf==</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#是否允许用户匿名登录</span><br><span class="line">anonymous_enable=YES</span><br><span class="line">#是否允许本地用户登录</span><br><span class="line">local_enable=YES</span><br><span class="line">#是否允许写</span><br><span class="line">write_enable=YES</span><br><span class="line">#控制本地用户上传文件的默认权限</span><br><span class="line">local_umask=022</span><br><span class="line">#控制匿名用户上传文件的默认权限</span><br><span class="line">anon_umask=022</span><br><span class="line">#匿名用户限速</span><br><span class="line">anon_max_rate=500000</span><br><span class="line">#本地用户限速</span><br><span class="line">local_max_rate=80000</span><br><span class="line">#ftp用户最大连接数（匿名用户不受限制）</span><br><span class="line">max_clients=500</span><br><span class="line">#单个ip最大连接数、线程数</span><br><span class="line">max_per_ip=2</span><br><span class="line">#指定本地用户访问root的目录</span><br><span class="line">local_root=/ftproot</span><br><span class="line">#指定匿名用户访问root的目录</span><br><span class="line">anon_root=/anonroot</span><br><span class="line">#处于安全考虑，应把所有用户锁定在自己的家目录</span><br><span class="line">chroot_local_user=YES</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#限制用户登录ftp</span><br><span class="line">#黑名单</span><br><span class="line">#开启黑名单功能</span><br><span class="line">userlist_enable=YES</span><br><span class="line">#确定黑名单（默认）</span><br><span class="line">userlist_deny=YES</span><br><span class="line">#名单文件 默认存在</span><br><span class="line">userlist_file=/etc/vsftpd/user_list</span><br><span class="line">#白名单</span><br><span class="line">#确认白名单</span><br><span class="line">userlist_deny=NO</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-安装&quot;&gt;&lt;a href=&quot;#1-安装&quot; class=&quot;headerlink&quot; title=&quot;1.安装&quot;&gt;&lt;/a&gt;1.安装&lt;/h4&gt;&lt;h5 id=&quot;emsp-1-1-准备工作&quot;&gt;&lt;a href=&quot;#emsp-1-1-准备工作&quot; class=&quot;headerlink
      
    
    </summary>
    
      <category term="配置" scheme="https://fuzui.net/categories/%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="linux" scheme="https://fuzui.net/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>总结一些linux的基本命令</title>
    <link href="https://fuzui.net/linux%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93.html"/>
    <id>https://fuzui.net/linux命令总结.html</id>
    <published>2019-03-14T02:56:32.000Z</published>
    <updated>2019-03-14T02:59:31.873Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简要"><a href="#简要" class="headerlink" title="简要"></a>简要</h2><p>一些基本的linux命令，我认为像这些命令之类的，必须要多谢多用才能熟记。</p><h4 id="基本命令与解释"><a href="#基本命令与解释" class="headerlink" title="基本命令与解释"></a>基本命令与解释</h4><p>1.<strong>mkdir</strong>        创建目录</p><pre><code>-p    创建递归目录</code></pre><p>2.<strong>touch</strong>        创建文件或修改文件时间</p><pre><code>-a    仅修改读取时间（atime）-m    仅修改修改时间（mtime）、-d    两者都修改</code></pre><p>3.<strong>cat</strong>        查看文件</p><pre><code>-n    显示行号</code></pre><p>4.<strong>less</strong></p><pre><code>more        分页查看</code></pre><p>5.<strong>head</strong>        从头查看</p><p>6.<strong>tail</strong>        从后看</p><pre><code>-f         实时查看日志文件</code></pre><p>7.<strong>grep</strong>        筛选，常配合管道使用</p><pre><code>-n显示收集到信息的行号-v用于反选信息</code></pre><p>8.<strong>wc</strong>        -l  统计行数、-w   字节数、-c  单词数</p><p>9.<strong>du</strong>        查看大小</p><p>10.<strong>cp  (旧)  (新) </strong>         复制</p><p>11.<strong>mv  (旧)  (新)</strong>         剪切或重命名</p><p>12.<strong>useradd</strong>        添加用户（只删除用户，目录保留，添加-r参数，用户目录都删除）</p><pre><code>userdel 删除用户whoami 查询当前用户名称</code></pre><p>13.<strong>groupadd</strong>        添加用户组</p><p>14.<strong>chmod [ugoa]+[rwx] 文件</strong></p><pre><code>chmod ___ 文件        4r    2w    1x</code></pre><p>15.<strong>echo</strong>        输出</p><p>16.<strong>date</strong>        用于显示及设置系统的时间或日期</p><pre><code>-s “”设置时间</code></pre><p>17.<strong>reboot</strong>        重启系统</p><p>18.<strong>poweroff</strong>        关闭系统</p><p>19.<strong>wegt</strong>        下周网络文件</p><pre><code>-p        下载到指定目录-r        递归下载</code></pre><p>20.<strong>ps</strong>        查看系统中进程状态</p><pre><code>-aux显示：R（运行）S（终端）D（不可中断）Z（僵死）T（停止）</code></pre><p>21.<strong>top</strong>        动态监视进程活动和系统负载信息</p><pre><code>第一行：系统时间    运行时间    显示终端数    系统负载第二行：进程总数    运行中的进程数    睡眠中的进程数    停止的进程数    僵死的进程数第三行：（百分比）用户占用    系统内核占用    改变过优先级的进程    空闲的资源第四行：物理内存总量比    内存使用量    内存空闲量    作为内存缓存的内存量第五行：虚拟内存总量    虚拟内存使用量    虚拟内存空闲量    已被提前加载的内存量</code></pre><p>22.<strong>pidof</strong>        查询某个服务的pid值</p><p>23.<strong>kill</strong>        用于终止某个指定pid的服务进程</p><p>24.<strong>killall</strong>        终止某个指定名称的服务所对应的全部进程</p><p>25.<strong>ifconfig</strong>        获取网咖配置与网络状态信息</p><p>26.<strong>uanme</strong>        -a    查看系统内核与系统版本等信息</p><p>27.<strong>uptime</strong>        查看系统的负载信息</p><p>28.<strong>free</strong>        -h    显示当前系统中内存使用量情况</p><p>29.<strong>who</strong>        查看登入主机的用户终端信息</p><p>30.<strong>last</strong>        查看所有系统的登录记录</p><p>31.<strong>history</strong>        显示历史执行过的命令    通过“!命令符号”执行某条命令</p><pre><code>-c    清空</code></pre><p>32.<strong>sosreport</strong>        收集系统配置及架构信息并输出诊断文档</p><p>33.<strong>pwd</strong>        显示当前目录</p><p>32.<strong>cd</strong>        切换目录</p><p>33.<strong>ls</strong>    ll        查看当前目录下的文件</p><p>34.<strong>tr  (old) (new)</strong>    替换文件中的字符</p><p>35.<strong>stat</strong>        查看文件具体存储信息和时间</p><pre><code>access    modify    change</code></pre><p>36.<strong>cut</strong>        按列提取文本字符</p><pre><code>-d    紧跟分隔符-f    紧跟列号</code></pre><p>37.<strong>diff</strong>        比较多个文件文本的差异</p><pre><code>--brief    判断文件是否相同-c       显示文件具体的不同</code></pre><p>38.<strong>rm</strong>        删除</p><pre><code>-f    无需二次确认-rf    强制删除</code></pre><p>39.<strong>file</strong>        查看文件的类型</p><p>40.<strong>tar</strong>        解压缩</p><pre><code>一般压缩-czvf    一般解压-xzvf</code></pre><p>41.<strong>find</strong>        按照指定条件查找文件</p><pre><code>-name-user-group   -mtime -n +n        -n指n天以内，+n指n天以前-atime -n +n-ctime -n +n</code></pre><p>42.<strong>fdisk</strong>    -l    查看磁盘</p><p>43.<strong>vim编辑器</strong></p><pre><code>dd删除yy复制v撤销上一步操作p粘贴:w    q     wq     q!    wq!:set nu         显示行号:set nonu        不显示行号:命令            执行该命令:整数        跳转到该行</code></pre><p>44.<strong>crontab</strong>        定时任务</p><pre><code>-e编辑    -l查询    -r删除当前用户的所有任务编辑格式        *    *    *    *    *    第一个：一小时内的第几分钟执行0-59    第二个：一天中的第几个小时执行0-23    第三个：一个月中第几天执行1-31    第四个：一年中当中的第几个月执行1-12    第五个：一周当中星期几执行0-7（0和7都是周日）特殊符号    * 任何时间    ，多个时间分割       - 连续时间    */n每个n执行一次无效服务时重启定时服务service crond restart</code></pre><p>45.<strong>sync</strong>     将内存数据同步到磁盘，关机重启都应该执行</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简要&quot;&gt;&lt;a href=&quot;#简要&quot; class=&quot;headerlink&quot; title=&quot;简要&quot;&gt;&lt;/a&gt;简要&lt;/h2&gt;&lt;p&gt;一些基本的linux命令，我认为像这些命令之类的，必须要多谢多用才能熟记。&lt;/p&gt;
&lt;h4 id=&quot;基本命令与解释&quot;&gt;&lt;a href=&quot;#基
      
    
    </summary>
    
      <category term="linux" scheme="https://fuzui.net/categories/linux/"/>
    
    
      <category term="linux命令" scheme="https://fuzui.net/tags/linux%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://fuzui.net/hello-world.html"/>
    <id>https://fuzui.net/hello-world.html</id>
    <published>2019-03-11T13:03:36.838Z</published>
    <updated>2019-04-17T09:30:14.897Z</updated>
    
    <content type="html"><![CDATA[<p>在经过三天的时间，成功搭建完成github+hexo的博客。</p><p>我的csdb博客：<a href="https://blog.csdn.net/qq_39329616" target="_blank" rel="noopener">https://blog.csdn.net/qq_39329616</a></p><p>开始写博客也才几个月，但收益很大，认识了不少人，希望能够坚持记录一些东西来提高自己，并认识更多的旁友。<br><br><br><br></p><hr><center><font face="华文行楷" size="6" color="blue"><br>当你的才华还撑不起你的野心的时候，<br>你就应该静下心来学习。</font><br></center><hr><p>梦在五湖四海</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在经过三天的时间，成功搭建完成github+hexo的博客。&lt;/p&gt;
&lt;p&gt;我的csdb博客：&lt;a href=&quot;https://blog.csdn.net/qq_39329616&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.cs
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>B/S基于springMVC的网上选课系统</title>
    <link href="https://fuzui.net/BS%E5%9F%BA%E4%BA%8EspringMVC%E7%9A%84%E7%BD%91%E4%B8%8A%E9%80%89%E8%AF%BE%E7%B3%BB%E7%BB%9F.html"/>
    <id>https://fuzui.net/BS基于springMVC的网上选课系统.html</id>
    <published>2018-12-07T17:07:22.000Z</published>
    <updated>2019-05-08T14:38:36.435Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简要"><a href="#简要" class="headerlink" title="简要:"></a>简要:</h2><p>去年花了一周时间自己在课设上写的，基于springMVC的网上选课系统。</p><hr><h4 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h4><ol><li>windows系统</li><li>java8环境</li><li>tomcat9环境</li><li>mysql5.5数据库， 用户名root，密码root</li><li>eclipse需配置jre和tomcat。可由eclipse直接导入工程使用</li></ol><h4 id="1-设计选题"><a href="#1-设计选题" class="headerlink" title="1.设计选题"></a>1.设计选题</h4><h5 id="emsp-1-1-设计选题"><a href="#emsp-1-1-设计选题" class="headerlink" title="&emsp;1.1 设计选题"></a>&emsp;1.1 设计选题</h5><p>&emsp;&emsp;《网上选课系统》</p><h5 id="emsp-1-2-设计背景"><a href="#emsp-1-2-设计背景" class="headerlink" title="&emsp;1.2 设计背景"></a>&emsp;1.2 设计背景</h5><p>&emsp;&emsp;随着在校人数的增加，选课是重点问题，拥有一个好的网上选课系统可以简便快速的对选课各种信息进行管理，节省了人力和时间，提高了对课程管理的效率。</p><h4 id="2-需求分析"><a href="#2-需求分析" class="headerlink" title="2.需求分析"></a>2.需求分析</h4><p>&emsp;分为三种用户：管理员、学生、教师。<br><strong>&emsp;管理员：</strong></p><p> &emsp; 1.登录功能</p><blockquote><p>需求描述：通过已知的管理员账号登录，登录成功进入管理员界面，方可执行相应功能。</p></blockquote><p>   &emsp;2.添加教师信息</p><blockquote><p>需求描述：添加一个新的教师信息，教师工号作为教师身份唯一标识，添加时会对输入框中教师工号是否存在进行判断并提示。</p></blockquote><p>&emsp;3.修改教师信息</p><blockquote><p>需求描述：可以选择教师并修改其信息，教师编号不可修改。</p></blockquote><p>&emsp;4.删除教师信息</p><blockquote><p>需求描述：删除某一条选中教师的所有信息。</p></blockquote><p>&emsp;5.查询教师信息</p><blockquote><p>需求描述：选择查询条件，可查询所有教师、通过教师编号查询教师信息，并以表格的形式显示出来。</p></blockquote><p>&emsp;6.添加课程信息</p><blockquote><p>需求描述：添加一个新的课程信息，课程编号作为该课程身份唯一标识，添加时会对输入框中课程编号是否存在进行判断并提示。其中一些属性通过下拉框方便选择。</p></blockquote><p>&emsp;7.修改课程信息</p><blockquote><p>需求描述：可对选中的课程进行修改，其中课程编号不可修改</p></blockquote><p>&emsp;8.删除课程信息</p><blockquote><p>需求描述：删除选定课程的所有信息。</p></blockquote><p>&emsp;9.查询课程信息</p><blockquote><p>需求描述：根据相应条件查询课程，所有课程、根据编号、课程类型、所属学院等进行查询。</p></blockquote><p>&emsp;10.添加学生信息</p><blockquote><p>需求描述：添加一个新的学生信息，学号作为学生身份唯一标识，添加时会对输入框中学号是否存在进行判断并提示。其中学院、专业等信息通过下拉框方便选择。</p></blockquote><p>&emsp;11.修改学生信息</p><blockquote><p>需求描述：修改选中学生的信息，其中学号不可修改。</p></blockquote><p>&emsp;12.删除学生信息</p><blockquote><p>需求描述：删除选中学生的所有信息。</p></blockquote><p>&emsp;13.查询学生信息</p><blockquote><p>需求描述：通过相应条件查询学生，例如查询所有信息，通过学号、学院、专业、班级等条件查询学生信息。</p></blockquote><p><strong>&emsp;教师：</strong></p><p>&emsp;1.查询个人信息</p><blockquote><p>需求描述：可以查询自己的所有信息</p></blockquote><p>&emsp;2.修改个人信息</p><blockquote><p>需求描述：只能修改自己密码，其他信息都不可修改</p></blockquote><p>&emsp;3.选择课程</p><blockquote><p>需求描述：通过查询课程表，查看已有课程，并选择自己需要教学的课程。</p></blockquote><p>&emsp;4.添加课程安排</p><blockquote><p>需求描述：通过选择一门已有课程，对该课程进行安排包括上课班级名、上课时间、所在教师、学分学时、总人数等。</p></blockquote><p>&emsp;5.修改课程安排</p><blockquote><p>需求描述：修改自己已经安排的课程的信息。</p></blockquote><p>&emsp;6.删除课程安排</p><blockquote><p>需求描述：删除自己已经安排的课程的信息。</p></blockquote><p>&emsp;7.查询课程安排</p><blockquote><p>需求描述：查询自己的已选教学课程的各种信息</p></blockquote><p>&emsp;8.查询选课信息</p><blockquote><p>需求描述：选定自己教学课程，查看该课程的学生学科情况，包括一些学生信息。</p></blockquote><p>&emsp;9.打印选课信息</p><blockquote><p>需求描述：选择自己教学的一门课程，并打印出该课程的学生信息。</p></blockquote><p><strong>&emsp;学生：</strong></p><p>&emsp;1.修改个人信息</p><blockquote><p>需求描述：只能修改自己的密码，其他信息需联系管理员修改。</p></blockquote><p>&emsp;2.选课</p><blockquote><p>需求描述：选择一门已有课程，并进入确认，提示学习该课程是否已有教师安排。</p></blockquote><p>&emsp;3.查询课程安排</p><blockquote><p>需求描述：查询自己所选课程的信息。</p></blockquote><p>&emsp;4.查询选课人数</p><blockquote><p>需求描述：查询课程已选人数。</p></blockquote><p>&emsp;5.退选。</p><blockquote><p>需求描述：退选自己已选课程。</p></blockquote><h4 id="3-系统的开发运行环境"><a href="#3-系统的开发运行环境" class="headerlink" title="3.系统的开发运行环境"></a>3.系统的开发运行环境</h4><ul><li>本系统开发平台: JSP + MYSQL</li><li>本系统集成开发环境: Eclipse + Tomcat</li><li>本系统运行环境: Windows OS</li></ul><h4 id="4-程序功能模块图及数据流图"><a href="#4-程序功能模块图及数据流图" class="headerlink" title="4.程序功能模块图及数据流图"></a>4.程序功能模块图及数据流图</h4><h5 id="emsp-4-1-程序功能模块图"><a href="#emsp-4-1-程序功能模块图" class="headerlink" title="&emsp;4.1 程序功能模块图"></a>&emsp;4.1 程序功能模块图</h5><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20181206211141727.png" alt></p><h5 id="emsp-4-1-数据流图"><a href="#emsp-4-1-数据流图" class="headerlink" title="&emsp;4.1 数据流图"></a>&emsp;4.1 数据流图</h5><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20181206211141848.png" alt></p><h4 id="5-总体设计"><a href="#5-总体设计" class="headerlink" title="5.总体设计"></a>5.总体设计</h4><h5 id="emsp-5-1-系统体系结构设计"><a href="#emsp-5-1-系统体系结构设计" class="headerlink" title="&emsp;5.1 系统体系结构设计"></a>&emsp;5.1 系统体系结构设计</h5><blockquote><p>界面首先为选择登录身份，选择后进入相应登录界面，登陆成功后的主界面由两块组成，一个为左栏，用于显示功能以及功能操作的，可以手动隐藏和显示；还有主界面，用于操作对应功能以及查看结果等。主界面内含一个div盒子，用于美观。使用户能够在简单、易用、单一、统一的可视化界面下，轻松、方便地访问到各种类型的数据。</p></blockquote><h5 id="emsp-5-2-系统功能说明"><a href="#emsp-5-2-系统功能说明" class="headerlink" title="&emsp;5.2 系统功能说明"></a>&emsp;5.2 系统功能说明</h5><p>&emsp;1.管理员</p><p>&emsp;&emsp;①可以对学生信息通过诸多条件进行查询；</p><p>&emsp;&emsp;②可以对学生信息进行修改以及删除；</p><p>&emsp;&emsp;③添加一个新的学生信息</p><p>&emsp;&emsp;④可以对教师信息查询、修改、删除以及添加。</p><p>&emsp;&emsp;⑤可对课程进行修改、删除、查询、以及添加。</p><p>&emsp;2.教师</p><p>&emsp;&emsp;①可以查询管理员添加的课程信息，并选择自己需要教学的课程。</p><p>&emsp;&emsp;②选择自己教学课程后对该课程进行安排，包括上课时间、上课地点、学分、学时、总人数等。</p><p>&emsp;&emsp;③可以对自己已选教学课程的课程安排进行修改、删除等操作。</p><p>&emsp;&emsp;④可以查询自己教学课程的学生选课信息。</p><p>&emsp;&emsp;⑤查看自己信息，并可以修改密码。</p><p>&emsp;3.学生</p><p>&emsp;&emsp;①可以查询全部管理员已添加的课程，并可以通过课程编号、课程名、课程所属专业、课程类型等条件查询。</p><p>&emsp;&emsp;②可以选择查询出来的课程进行选课，选择后进入确认界面，显示课程名，提示是否已有教师安排此课，若有则显示教师姓名，并有确认和取消两个按钮，确认则选课成功，取消则返回上一界面。</p><p>&emsp;&emsp;③查看选课结果，用表格形式显示出课程名、上课教室、上课地点、学分、学时以及代课教师。没有教师安排的课程无法查出，只能在退选中查看单独的课程名。</p><p>&emsp;&emsp;④退选已选课程，先查询出自己已选的所有课程，通过课程名选择退选。</p><p>&emsp;&emsp;⑤查看个人所有信息，只可以修改密码。</p><h5 id="emsp-5-3-数据库设计"><a href="#emsp-5-3-数据库设计" class="headerlink" title="&emsp;5.3 数据库设计"></a>&emsp;5.3 数据库设计</h5><blockquote><p>总共六个表：学生表、教师表、管理员表、课程表、课程安排表、选课表。</p></blockquote><p>&emsp;&emsp;管理员表admin</p><table><thead><tr><th>列名</th><th>类型</th><th>约束</th><th>备注</th></tr></thead><tbody><tr><td>Aname</td><td>Varchar（12）</td><td>主键</td><td>账号</td></tr><tr><td>Apassword</td><td></td><td></td><td>密码</td></tr></tbody></table><p>&emsp;&emsp;学生表Student</p><table><thead><tr><th>列名</th><th>类型</th><th>约束</th><th>备注</th></tr></thead><tbody><tr><td>Sid</td><td>Char(12)</td><td>非空、主键</td><td>学号</td></tr><tr><td>Sname</td><td>Varchar（8）</td><td>非空</td><td>姓名</td></tr><tr><td>Sidcard</td><td>Char(18)</td><td>非空</td><td>身份证</td></tr><tr><td>Ssex</td><td>Char(2)</td><td>男女</td><td>性别</td></tr><tr><td>Spassword</td><td>Varchar(12)</td><td>非空</td><td>密码</td></tr><tr><td>Sage</td><td>Char（2）</td><td></td><td>年龄</td></tr><tr><td>Classr</td><td>Varchar（15）</td><td></td><td>班级</td></tr><tr><td>profession</td><td>Varchar（15）</td><td></td><td>专业</td></tr><tr><td>College</td><td>Varchar（15）</td><td></td><td>学院</td></tr></tbody></table><p>&emsp;&emsp;教师表Teacher</p><table><thead><tr><th>列名</th><th>类型</th><th>约束</th><th>备注</th></tr></thead><tbody><tr><td>Tid</td><td>Char（4）</td><td>主键</td><td>工号</td></tr><tr><td>Tname</td><td>Varchar(8)</td><td></td><td>姓名</td></tr><tr><td>Tpassword</td><td>Varchar(12)</td><td></td><td>密码</td></tr><tr><td>Tsex</td><td>Char(2)</td><td>男女</td><td>性别</td></tr><tr><td>Introduction</td><td>Varchar（100）</td><td></td><td>简介</td></tr></tbody></table><p>&emsp;&emsp;课程表course</p><table><thead><tr><th>列名</th><th>类型</th><th>约束</th><th>备注</th></tr></thead><tbody><tr><td>Cid</td><td>Char（4）</td><td>主键</td><td>课程号</td></tr><tr><td>Cname</td><td>varChar(15)</td><td></td><td>课程名</td></tr><tr><td>Cintroduction</td><td>Varchar（100）</td><td></td><td>简介</td></tr><tr><td>Type</td><td>Varchar（15）</td><td></td><td>类型（选修，必修）</td></tr><tr><td>Belongcoll</td><td>Varchar（15）</td><td></td><td>所属学院</td></tr><tr><td>Belongpro</td><td>Varchar（15）</td><td></td><td>所属专业</td></tr></tbody></table><p>&emsp;&emsp;课程安排</p><table><thead><tr><th>列名</th><th>类型</th><th>约束</th><th>备注</th></tr></thead><tbody><tr><td>Courseclass</td><td>Varchar（12）</td><td>主键</td><td>开课班级</td></tr><tr><td>Coursetime</td><td>Varchar（12）</td><td></td><td>上课时间</td></tr><tr><td>Courseweek</td><td>Varchar（12）</td><td></td><td>上课周</td></tr><tr><td>Cid</td><td>Char（4）</td><td>外键</td><td>课程号</td></tr><tr><td>Tid</td><td>Char（4）</td><td>外键</td><td>教师编号</td></tr><tr><td>Classroom</td><td>Varchar（6）</td><td></td><td>上课教室</td></tr><tr><td>credits</td><td>Int（11）</td><td></td><td>学分</td></tr><tr><td>period</td><td>Int（11）</td><td></td><td>学时</td></tr><tr><td>Totalnum</td><td>Int（11）</td><td></td><td>总人数</td></tr></tbody></table><p>&emsp;&emsp;选课表sc</p><table><thead><tr><th>列名</th><th>类型</th><th>约束</th><th>备注</th></tr></thead><tbody><tr><td>Id</td><td>varChar（4）</td><td>自动增长、主键</td><td>用于传值</td></tr><tr><td>Sid</td><td>Char(12)</td><td>外键</td><td>学生学号</td></tr><tr><td>Cid</td><td>Char（4）</td><td>外键</td><td>课程编号</td></tr></tbody></table><h5 id="emsp-5-4-界面设计"><a href="#emsp-5-4-界面设计" class="headerlink" title="&emsp;5.4 界面设计"></a>&emsp;5.4 界面设计</h5><p><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20181206211141919.png" alt><br>&emsp;登录（以管理员为例）<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20181206211141945.png" alt><br>&emsp;管理员登录界面，左侧栏可收缩<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20181206211145307.png" alt></p><h4 id="6-实现"><a href="#6-实现" class="headerlink" title="6.实现"></a>6.实现</h4><h5 id="emsp-6-1-程序结构"><a href="#emsp-6-1-程序结构" class="headerlink" title="&emsp;6.1 程序结构"></a>&emsp;6.1 程序结构</h5><blockquote><p>网上选课系统利用MVC设计模式，利用spring mvc框架，将其分为视图层、控制器层、模型层。视图层为jsp文件，分别存放在admin、teacher、student三个文件夹中，分别是管理员界面、教师界面、学生界面，而index和登录界面以及操作成功失败界面直接放在主目录；控制器层为servlet类，用来处理视图层发送的每个请求，存放在以域名翻转命名的包内：net.fuzui.servlet；模型层用来存放javabean类，分为实体bean和业务bean中，分别放在以域名翻转命名包net.fuzui.beans、net.fuzui.dao中，实体bean存放实体类，业务bean中存放数据库连接以及对数据库的操作，由servlet调用。</p></blockquote><h5 id="emsp-6-2-应用技术及实现"><a href="#emsp-6-2-应用技术及实现" class="headerlink" title="&emsp;6.2 应用技术及实现"></a>&emsp;6.2 应用技术及实现</h5><blockquote><p>&emsp;&emsp;在网上选课系统中，用到基于注解的spring mvc框架，在视图层中的每一次请求都会发送到控制器层，由servlet类通过注解识别请求，处理请求，需要用到数据库时则调用DAO。先通过配置web.xml以及springmvc.xml来应用框架，由@RequestMapping 来处理请求映射，在处理url和表单提交时，会自动根据url或者表单中参数的名字和方法中同名形参进行匹配并赋值。<br>&emsp;&emsp;在添加学生、教师、课程信息时，通过jQuery运用ajax技术，如果添加的学号已存在，在输入框右侧会红字提示该学号已存在，不存在也会有提醒该学号可添加，教师工号、课程编号也如此。<br>&emsp;&emsp;在学生界面查询选课结果时，利用了数据库表与表之间级联，通过选课表、课程表、课程安排表、教师表四表级联的sql语句，查询出课程名、班级名称、上课时间、教室、学分学时以及代课老师信息，并将此信息存放在一个实体类中，方便调用。<br>&emsp;&emsp;在视图层的样式设计中，通过css设置背景色透明度渐变和背景图片透明度来实现整体视觉效果，在该系统中，表比较多，所以将表的样式也焕然一新。总界面分为左侧栏和显示栏，运用js，左侧栏通过点击相应图标可收缩隐藏。运用了el表达式和jstl标记，是界面更加简约。</p></blockquote><h4 id="6-展示和下载"><a href="#6-展示和下载" class="headerlink" title="6.展示和下载"></a>6.展示和下载</h4><p>&emsp;项目展示：<a href="onlineSC.fuzui.net">onlineSC.fuzui.net</a></p><blockquote><p>管理员用户名admin，密码admin，以供测试，学生和教师账号密码可通过管理员登录查看。<br>这个小项目里还是有不少bug的，不够完善。</p></blockquote><p>&emsp;github源码：<a href="https://github.com/fuzui/onlineSC" target="_blank" rel="noopener">https://github.com/fuzui/onlineSC</a></p><p>最后附上项目目录：<br><img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/20181208003711276.png" alt></p><p>2019年5月8日：<br>更新百度网盘下载链接：<a href="https://pan.baidu.com/s/1i3Am5nl7ZLUQtkNrt1Rbiw" target="_blank" rel="noopener">网上选课系统源码</a><br>提取码：zkhv</p><p><strong>如果部署运行测试中出现问题可以找我~,留言会在12小时内回复</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简要&quot;&gt;&lt;a href=&quot;#简要&quot; class=&quot;headerlink&quot; title=&quot;简要:&quot;&gt;&lt;/a&gt;简要:&lt;/h2&gt;&lt;p&gt;去年花了一周时间自己在课设上写的，基于springMVC的网上选课系统。&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;使用说明&quot;&gt;&lt;a href=
      
    
    </summary>
    
      <category term="java-springMVC" scheme="https://fuzui.net/categories/java-springMVC/"/>
    
    
      <category term="项目" scheme="https://fuzui.net/tags/%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="springMVC" scheme="https://fuzui.net/tags/springMVC/"/>
    
  </entry>
  
</feed>
