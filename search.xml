<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[bootstrap样式记录]]></title>
    <url>%2Fbootstrap%E5%9F%BA%E6%9C%AC%E6%A0%B7%E5%BC%8F.html</url>
    <content type="text"><![CDATA[本文主要参考菜鸟教程等。 一、栅格化1.响应式布局 container2.栅格化布局col-md左右两栏默认一个row分为12个单位col-md-4col-md-8默认宽度小于992时，不再左右。 3.栅格化col-sm宽度小于768时，不再左右。 4.栅格化col-xs永远左右两侧 5.混合使用 &lt;div class=&quot;col-sm-4 col-sm-4&quot;&gt; 6.pull栅格的位置推拉col-md-push-8col-md-pull-47.嵌套栅格可以通过嵌套row实现 8.清除 &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt; 9.偏移col-md-offset-4 10.隐藏和显示hidden-xsvisible-xs 11.重点显示alert-info 二、布局组件1.字体图标格式：123&lt;button type="button" class="btn btn-primary btn-lg" style="text-shadow: black 5px 3px 3px;"&gt; &lt;span class="glyphicon glyphicon-user"&gt;&lt;/span&gt; User&lt;/button&gt; 具体图标参考：http://www.runoob.com/bootstrap/bootstrap-glyphicons.html2.下拉菜单12345678910111213141516171819&lt;div class="dropdown"&gt; &lt;button type="button" class="btn dropdown-toggle" id="dropdownMenu1" data-toggle="dropdown"&gt; 主题&lt;span class="caret"&gt;&lt;/span&gt; &lt;/button&gt;&lt;ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1"&gt; &lt;li role="presentation"&gt; &lt;a href="#" role="menuitem" tabindex="-1"&gt;JAVA&lt;/a&gt; &lt;/li&gt; &lt;li role="presentation"&gt; &lt;a href="#" role="menuitem" tabindex="-1"&gt;大数据&lt;/a&gt; &lt;/li&gt; &lt;li role="presentation"&gt; &lt;a href="#" role="menuitem" tabindex="-1"&gt;云计算&lt;/a&gt; &lt;/li&gt; &lt;li role="presentation" class="divider"&gt;&lt;/li&gt; &lt;li role="presentation"&gt; &lt;a href="#" role="menuitem" tabindex="-1"&gt;全栈工程师&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; 在ul的class中使用 pull-right可以向界面右端对齐下拉菜单，也可以直接使用 .dropdown-menu-right。新建li标签class=”dropdown-header”可以定义下拉菜单标题外层div定义 .dropup可以向上弹出下拉菜单 .divider 下拉菜单中的分割线.disabled 下拉菜单中的禁用.dropdown 指定下拉菜单，下拉菜单都包过在.dropdown中.dropdown 创建下拉菜单 &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt; 来指示按钮作为下拉菜单。 3.输入框 向 .form-control 添加前缀或后缀元素的步骤如下： 把前缀或后缀元素放在一个带有 class .input-group 的&lt;div&gt; 中。 接着，在相同的 &lt;div&gt; 内，在 class 为 .input-group-addon 的 &lt;span&gt; 内放置额外的内容。 把该 &lt;span&gt;放置在&lt;input&gt; 元素的前面或者后面。 &lt;span&gt;内还可以放单选和复选框。同样可以添加&lt;button&gt; 把按钮作为输入框组的前缀或者后缀元素,这时不用.input-group-addon，而用class .input-group-btn，同样可以添加&lt;button&gt;或下拉菜单。 可以通过向 .input-group 添加相对表单大小的 class（比如 .input-group-lg、input-group-sm）来改变输入框组的大小。输入框中的内容会自动调整大小。 三、基本样式1.标题在&lt;h1&gt;内可以嵌套&lt;small&gt;来定义一个颜色浅的文本。2.强调文本 &lt;small&gt;为父文本的百分之85&lt;strong&gt; 更粗的文本&lt;em&gt;斜体&lt;p class=&quot;text-left&quot;&gt;向左对齐文本&lt;p class=&quot;text-center&quot;&gt;居中&lt;p class=&quot;text-right&quot;&gt;向右对齐&lt;p class=&quot;text-muted&quot;&gt;内容减弱 .text-muted：提示，浅灰色 .text-primary：主要，蓝色 .text-success：成功，浅绿色 .text-info：通知信息，浅蓝色 .text-warning：警告，黄色 .text-danger：危险，红色 3.缩写 &lt;abbr title=&quot;Real Simple Sydication&quot;&gt;RSS&lt;/abbr&gt;4.引用 blockquote5.列表12345678910111213141516171819未定义样式列表&lt;ul class="list-unstyled"&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt;&lt;/ul&gt;内联列表&lt;ul class="inline"&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt;&lt;/ul&gt;定义列表&lt;dl&gt; &lt;dt&gt;学号&lt;/dt&gt; &lt;dd&gt;20150&lt;/dd&gt; &lt;dt&gt;姓名&lt;/dt&gt; &lt;dd&gt;王泽&lt;/dd&gt;&lt;/dl&gt; 6.代码1234&lt;p&gt;&lt;code&gt;String&lt;/code&gt;&lt;/p&gt; &lt;pre&gt; String name = "wangze" &lt;/pre&gt; 按键提示按&lt;kbd&gt;F10&lt;/kbd&gt;进入全屏预览代码滚动条 &lt;pre class=&quot;pre-scrollable&quot;&gt;&lt;/pre&gt;7.表格 只有水平分割线的表格样式&lt;table class=&quot;table&quot;&gt;条纹表格&lt;table class=&quot;table table-striped&quot;&gt;边框表格&lt;table class=&quot;table table-bordered&quot;&gt;悬停表格&lt;table class=&quot;table table-hover&quot;&gt;精简表格,padding切半&lt;table class=&quot;table table-condensed&quot;&gt;上下文,改变表格行或单个单元格的背景颜色.active 对某一行或单元格应用悬停颜色.success.warning.danger响应式表格&lt;div class=&quot;table-responsive&quot;&gt; 8.表单1234567891011121314151617181920212223242526&lt;form role="form"&gt;&lt;div class="form-group"&gt;内联：标签并排&lt;form class="form-inline" role="form"&gt;水平表单，把标签和控件放在一个带有class.form-group的&lt;div&gt;中&lt;form class="form-horizontal" role="form"&gt;输入框&lt;input type="text" class="form-control" placeholder="文本输入"&gt;文本框&lt;textarea class="form-control" rows="3"&gt;&lt;/textarea&gt;单选&lt;div class="checkbox"&gt; &lt;label&gt;&lt;input type="checkbox" value=""&gt;选项 1&lt;/label&gt;&lt;/div&gt;复选&lt;div class="radio"&gt; &lt;label&gt;&lt;input type="radio" value=""&gt;选项 1&lt;/label&gt;&lt;/div&gt;选择框&lt;select class="form-control"&gt;静态控件&lt;p class="form-control-static"&gt;表单控件大小分别使用 class .input-lg 和 .col-lg-* 来设置表单的高度和宽度表单帮助文档&lt;span class="help-block"&gt; 9.按钮1234567891011121314&lt;!-- 标准的按钮 --&gt; &lt;button type="button" class="btn btn-default"&gt;默认按钮&lt;/button&gt; &lt;!-- 提供额外的视觉效果，标识一组按钮中的原始动作 --&gt; &lt;button type="button" class="btn btn-primary"&gt;原始按钮&lt;/button&gt; &lt;!-- 表示一个成功的或积极的动作 --&gt; &lt;button type="button" class="btn btn-success"&gt;成功按钮&lt;/button&gt; &lt;!-- 信息警告消息的上下文按钮 --&gt; &lt;button type="button" class="btn btn-info"&gt;信息按钮&lt;/button&gt; &lt;!-- 表示应谨慎采取的动作 --&gt; &lt;button type="button" class="btn btn-warning"&gt;警告按钮&lt;/button&gt; &lt;!-- 表示一个危险的或潜在的负面动作 --&gt; &lt;button type="button" class="btn btn-danger"&gt;危险按钮&lt;/button&gt; &lt;!-- 并不强调是一个按钮，看起来像一个链接，但同时保持按钮的行为 --&gt; &lt;button type="button" class="btn btn-link"&gt;链接按钮&lt;/button&gt; .btn-lg 大按钮.btn-sm 较小按钮.btn-xs 小按钮.btn-block 块级按钮，会横跨父元素的全部宽度.active 激活按钮.disabled 禁用按钮按钮样式适用于a标签，button标签，input标签.btn-group 可在外层div定义，创建按钮组 .btn-gtoup-lg|sm|xs来控制大小.bth-group-vertical 设置垂直方向.btn-group-justified 自适应按钮下拉菜单按钮1234567&lt;button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown"&gt; Sony &lt;span class="caret"&gt;&lt;/span&gt;&lt;/button&gt; &lt;ul class="dropdown-menu" role="menu"&gt; &lt;li&gt;&lt;a href="#"&gt;Tablet&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Smartphone&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; .caret显示下拉式功能 10.图片 .img-rounded 为图片添加圆角.img-circle 将图片变为圆形.img-thumbnail 缩略图功能.img-responsive 图片响应式 11.文本 展示不同颜色.text-muted.text-primary.text-success.text-info.text-warning.text-danger12.文本背景颜色 .bg-primary.bg-success.bg-info.bg-warning.bg-danger13.内容居中.center-block 四、模态框+轮播图123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081&lt;style&gt;/* 定义大小位置 */.center-carousel &#123; width: 33%; margin-left: auto; margin-right: auto;&#125;&lt;/style&gt;&lt;div class=""&gt; &lt;!-- 模态框 --&gt; &lt;div class="modal fade" id="myModal"&gt; &lt;div class="modal-dialog modal-lg"&gt; &lt;div class="modal-content"&gt; &lt;!-- 模态框头部 --&gt; &lt;div class="modal-header"&gt; &lt;h4 class="modal-title"&gt;项目必读：相关技术、技术、测试数据、版本更新&lt;/h4&gt; &lt;button type="button" class="close" data-dismiss="modal"&gt;&amp;times;&lt;/button&gt; &lt;/div&gt; &lt;!-- 模态框主体 --&gt; &lt;div class="modal-body"&gt; &lt;!-- 我这里用模态框包含一个jsp页面，也可以其他内容或标签 --&gt; &lt;jsp:include page="Introduction.jsp" /&gt; &lt;/div&gt; &lt;!-- 模态框底部 --&gt; &lt;div class="modal-footer"&gt; &lt;button type="button" class="btn btn-secondary" data-dismiss="modal"&gt;关闭&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="center-carousel"&gt; &lt;div id="demo" class="carousel slide" data-ride="carousel"&gt; &lt;!-- 指示符 --&gt; &lt;ul class="carousel-indicators"&gt; &lt;li data-target="#demo" data-slide-to="0" class="active"&gt;&lt;/li&gt; &lt;li data-target="#demo" data-slide-to="1"&gt;&lt;/li&gt; &lt;li data-target="#demo" data-slide-to="2"&gt;&lt;/li&gt; &lt;li data-target="#demo" data-slide-to="4"&gt;&lt;/li&gt; &lt;/ul&gt; &lt;!-- 轮播图片 --&gt; &lt;div class="carousel-inner"&gt; &lt;div class="carousel-item active"&gt; &lt;!-- 模态框点击图片（超链接）显示 --&gt; &lt;a data-toggle="modal" data-target="#myModal" href=""&gt;&lt;img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/img001.png"&gt;&lt;/a&gt; &lt;/div&gt; &lt;div class="carousel-item"&gt; &lt;a href="https://github.com/fuzui/" target="_blank"&gt;&lt;img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/github.jpg"&gt;&lt;/a&gt; &lt;/div&gt; &lt;div class="carousel-item"&gt; &lt;a href="https://fuzui.net" target="_blank"&gt;&lt;img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/myblog.jpg"&gt;&lt;/a&gt; &lt;/div&gt; &lt;div class="carousel-item"&gt; &lt;a href="https://blog.csdn.net/qq_39329616" target="_blank"&gt;&lt;img src="https://fuzui.oss-cn-shenzhen.aliyuncs.com/img/myinfo.jpg"&gt;&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;!-- 左右切换按钮 --&gt; &lt;a class="carousel-control-prev" href="#demo" data-slide="prev"&gt; &lt;span class="carousel-control-prev-icon"&gt;&lt;/span&gt; &lt;/a&gt; &lt;a class="carousel-control-next" href="#demo" data-slide="next"&gt; &lt;span class="carousel-control-next-icon"&gt;&lt;/span&gt; &lt;/a&gt; &lt;/div&gt; &lt;/div&gt;]]></content>
      <categories>
        <category>bootstrap</category>
      </categories>
      <tags>
        <tag>bootstrap</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MongoDB复制集介绍及搭建]]></title>
    <url>%2FMongoDB%E5%A4%8D%E5%88%B6%E9%9B%86%E4%BB%8B%E7%BB%8D%E5%8F%8A%E6%90%AD%E5%BB%BA.html</url>
    <content type="text"><![CDATA[简介 为了防止数据错误和丢失，采用复制集可以数据同步到多个服务器，提供了数据的冗余备份，在多个服务器上存储数据副本，提高了数据的可用性，保证了数据的安全性。 参考《MongoDB游记之轻松入门到进阶》 一、主从复制和副本集MongoDB提供了两种复制部署方案：主从复制和副本集1.主从复制一个主节点，多个从节点，所有从节点会去主节点获取最新数据，做到主从数据保持一致。缺点:当主节点出现宕机，那么集群将不能正常运作，需要先人工将其中一个从节点作为主节点，需要停机操作，使对外服务会有一段空白时间。 2.副本集 为了解决主从复制的容灾性问题。没有固定的主节点，集群会自己选举出一个主节点，当这个主节点不能正常工作时，又会另外选举出其他节点作为主节点。副本集中总会有一个活跃节点和一个（多个）备份节点，当当前活跃节点出问题时，备份节点会提升为活跃节点。在副本集中会有一个只参与投票选举、不复制数据的仲裁节点，用于当票数出现一致时来判决。官方推荐集群节点为奇数。 二、副本集工作原理1.oplog（操作日志） 记录数据改变操作（更新插入），oplog是一个固定集合，喂鱼每个复制节点的local的数据库里。新操作会替换旧的操作，以保证oplog不会超过预设的大小，oplog中的每个文档都代表主节点上执行的一个才做。 2.数据同步 每个oplog都有时间戳，所有从节点都使用这个时间戳来追踪它们最后执行写操作的记录。当某个从节点准备更新自己时，会做三件事：首先，查看自己oplog里的最后一条时间戳；其次，查询主节点oplog里所有大于此时间戳的文档；最后，把那些文档应用到自己库里，并添加写操作文档到自己的oplog里。 3.复制状态和本地数据库 复制状态的文档记录在本地数据库local中。主节点的local数据库的内容是不会被从节点复制的。如果有不想被从节点复制的文档，可以将它放在本地数据库local中。 4.阻塞复制 当主节点写入操作太快时，从节点的更新状态有可能跟不上。为避免这种情况： 使主节点的oplog足够大 阻塞复制：在主节点使用getLastError命令加参数“w”来确保数据的同步性。w越大会导致写操作越慢。 5.心跳机制 心跳检测有助于发现故障进行自动选举和故障转移。默认情况下副本集成员每两分钟ping一下其他成员，来弄清自己的健康状态。如果是某一从节点出现故障只会等待从节点重新上线，而如果主节点出现故障，则副本集会开始选举，重新选出新的主节点，原主节点会降级为从节点。 6.选举机制 根据优先级和Bully算法（评判睡的数据最新）选举出主节点，在选举出主节点之前，整个集群服务是只读的，不能执行写操作。非仲裁节点都会有优先级配置，范围为0~100，越大值越优先成为主节点，默认为1，如果是0则不能成为主节点。拥有资格的从节点会向其他节点发出请求，而其他节点在收到选举提议后会判断三个条件： 副本集中是否有其他节点已经是主节点了 自己的数据是否比请求成为主节点的的那个节点上数据更新 副本集中其他节点的数据是否比请求成为主节点的那个节点数据更新 只要有一个条件城里，都会认为对方提议不可行。请求者只要收到任何一个节点返回不合适，都会退出选举。选举机制会让优先级高的节点成为主节点，即使先选举出了优先级低的节点，也至少会短暂作为主节点运行一段时间。副本集还会再之后继续发出选举，直到优先级最高的节点成为主节点。（后面会有例子） 7.数据回滚 在从节点成为主节点后，会认为其是副本集中的最新数据，对其他节点的操作都会回滚，即所有节点连接新的主节点重新同步。这些节点会查看自己的oplog，找出新主节点中没有执行过的操作，然后请求操作文档，替换掉自己的异常样本。 三、主从复制搭建我在mongod4.0运行时提示：[main] Master/slave replication is no longer supported也就是mongodb4.0后不再支持主从复制！ 遵从技术发展方向=-=，不再阐述主从复制搭建。 四、副本集搭建我在虚拟机上测试centos7 （1）安装完MongoDB，参考： （2）三台虚拟机（安好一台克隆） 修改ip和hostname：MongoDB-master：192.168.17.138MongoDB-slave：192.168.17.139MongoDB-arbiter：192.168.17.140hostname修改：vim /etc/hostnameip修改：vim /etc/sysconfig/network-scripts/ifcfg-ens33其中ifcfg-ens33每个机器可能不一样。 123456789TYPE=EthernetBOOTPROTO=staticNAME=ens33DEVICE=ens33ONBOOT=yesIPADDR=192.168.17.139NETMASK=255.255.255.0GATEWAY=192.168.17.2DNS1=8.8.8.8 配置ip映射vim /etc/hosts 123192.168.17.138 mongodb-master192.168.17.139 mongodb-slave192.168.17.140 mongodb-arbiter 配置完成后重启 （3）创建key在mongodb-master中：生成key： 1openssl rand -base64 90 &gt; /var/lib/mongo/mongodb-keyfile 将这个mongodb-keyfile复制到其他两台机器上（我用的xftp6传过去的，也可以使用scp传） （4）权限在三台机器上分别执行1chmod 700 /var/lib/mongo/mongodb-keyfile 在实现时不知为何我的700在master机器上一直无法生效！我采用另一种写法（u+x）然后切换用户: 很重要，我在配置时因为直接用的root，所以mongodb-keyfile文件也是root用户，导致我后面修改配置文件后一直无法启动mongod！即需要在三台机器上使用chown切换为mongod。1chown mongod /var/lib/mongo/mongodb-keyfile（5）修改配置文件在三台机器上都修改，keyFile和replSetName都一样。vi /etc/mongod.conf有两处修改12345678#上面省略security: authorization: enabled keyFile: /var/lib/mongo/mongodb-keyfile#operationProfiling:replication: replSetName: wangze（6） 启动在三台机器上分别持续systemctl restart mongod启动成功什么信息都没有，如若启动失败，前往查看日志cat /var/log/mongodb/mongod.log（7）配置进入mongodb-master的mongomongo 初始化rs.initiate() 查看配置rs.conf()会发现只有一个节点，因为从节点和仲裁者节点还未添加。 添加从节点rs.add(&quot;mongodb-slave:27017&quot;) 添加仲裁者节点 rs.addArb(&quot;mongodb-arbiter:27017&quot;) 重新查看配置rs.conf() 查看状态rs.status().#### 五、数据同步测试 ####在安装时我曾创了一个wwze库，里面插入一条数据如现在在主节点中再写入一条新数据db.user.insert({name:&quot;张三&quot;,age:21,address:&quot;上海&quot;}) 查看db.user.find().pretty() 进入从节点 在mongodb-slave中执行 mongo设置slave为truers.slaveOk()这里我查看dbs发现没有数据库，是因为我还没有登录！use admindb.auth(&quot;root&quot;,&quot;root&quot;)再次查看最后进入wwze库查看一些刚在主节点写的数据是否同步use wwzedb.user.find().pretty()* 而进入仲裁者节点时，会发现不能读写，因为他只负责投票选举。 在mongodb-arbiter机器中至此，副本集搭建完成 六、故障测试默认情况下主节点和从节点的优先级都为1，仲裁者为0，因为它不可参加选举。 我将现有主节点的优先级提高为5123 var rscfg=rs.conf()rscfg.members[0].priority = 5 rs.reconfig(rscfg) 查看一下状态rs.status() 现在将主节点停掉12use admindb.shutdownServer() 这时可以查看状态rs.status()这里我没截图，自测~ 然后重启进入mongo，会发现，原主节点变为从节点了而从节点，自然变为主节点： 因为设置了优先级，所以在重启mongodb-master机器的mongo后，很快（几秒或者十几秒）mongodb-master又会被重新选举为主节点，而mongodb-slave下位，我没来得及截状态图他就已经回来了。 最后远程连接或用java连接操作即可，因为我电脑配置有限，所以只开了三台虚拟机，只配置了一个从节点，如需更多以相同方法添加即可]]></content>
      <categories>
        <category>mongodb</category>
      </categories>
      <tags>
        <tag>mongodb</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux安装MongoDB4.0（centos7）]]></title>
    <url>%2Flinux%E5%AE%89%E8%A3%85MongoDB4.0.html</url>
    <content type="text"><![CDATA[MongoDB4.0安装 MongoDB 配置用户和密码验证 远程连接MongoDB 1. 配置包管理系统（yum）123456[mongodb-org-4.0] name = MongoDB Repository baseurl = https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.0/x86_64/ gpgcheck = 1 enabled = 1 gpgkey = https：// www.mongodb.org/static/pgp/server-4.0.asc 2. 安装MongoDB1sudo yum install -y mongodb-org 3.启动MongoDB启动：systemctl start mongod停止：systemctl stop mongod重启：systemctl restart mongod开机启动：systemctl enable mongod.service 4.进入MongoDB1mongo 5.设置验证（账户密码）(1) 进入MongoDB1mongo (2) 进入admin数据库1use admin (3) 创建1db.createUser(&#123;user:"root",pwd:"root",roles:["root"]&#125;) (4) 退出1exit (5) 修改配置文件vim /etc/mongod.conf修改：12security： authorization: enabled 原本sercurity是被注释掉的，需要把前面#删除，而authorization也是不存在的，需要手动添加。 (6) 重启1systemctl restart mongod (7)验证使用mongo进入MongoDB之后，使用show dbs是没有反应的，需要先进入admin数据库，持行db.auth(&quot;root&quot;,&quot;root&quot;)后，才可以使用。 6.远程连接(1) 关闭防火墙systemctl stop firewalld可以使其开机关闭：systemctl disable firewalld(2) 修改配置文件vim /etc/mongod.conf修改：1bindIp: 0.0.0.0 原来bindIp是127.0.0.1，需要改为0.0.0.0 (3) 重启MongoDB1systemctl restart mongod (4) 连接我这里用的 Navicat 12 for MongoDB工具都差不多 新建： 输入信息：这里填写centos7的ip和MongoDB的admin数据库和刚刚设置过的账号密码 建立ssh：这里填写centos7的ip和其登录的用户（我直接用的root） 测试连接 最后就可以查看了，默认的数据库是看不到的，所以我这里创了个新数据库linux中：再通过图形界面查看： 参考： MongoDB官方安装 MongoDB4.0.0 远程连接及用户名密码认证登陆配置——windows]]></content>
      <categories>
        <category>安装类</category>
      </categories>
      <tags>
        <tag>安装类，MongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mysql8.0安装以及主从复制搭建(linux)]]></title>
    <url>%2Fmysql8.0%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%90%AD%E5%BB%BA(linux).html</url>
    <content type="text"><![CDATA[一主一从：前提： 两台centos7（虚拟机或云服务器） 防火墙已关闭 主master：192.168.17.201 msql8.0.12从slave：192.168.17.202 msql8.0.12 1.mysql8.0安装(1) 卸载Mariadb由于CentOS7自带的是 Mariadb, 所以需要先删除Mariadb1&gt;. 查找版本rpm -qa|grep mariadb2&gt;. 删除rpm -e --nodeps 上面查出来的文件名3&gt;. 删除配置文件rm /etc/my.cnf (2) 下载安装1&gt;. 下载官网下载：https://dev.mysql.com/downloads/mysql/2&gt;. 解压tar -xvf 包名解压完会出现几个不同的包，通过ll查看即可3&gt;. 安装依赖12345678#以下六条，具体作用我还没去了解过yum -y install numactlyum -y install libaio.so.1 libgcc_s.so.1 libstdc++.so.6yum update libstdc++-4.4.7-4.el6.x86_64yum search libaioyum install libaioyum install net-tools` 4&gt;. 安装1234567#以下具体名字看通过ll命令查看，按顺序安装rpm -ivh mysql-community-common-8.0.15-1.el7.x86_64.rpmrpm -ivh mysql-community-libs-8.0.15-1.el7.x86_64.rpmrpm -ivh mysql-community-client-8.0.15-1.el7.x86_64.rpmrpm -ivh mysql-community-devel-8.0.15-1.el7.x86_64.rpmrpm -ivh mysql-community-server-8.0.15-1.el7.x86_64.rpm` 5&gt;. 初始化mysqld --initialize --user=mysql --basedir=/usr --datadir=/var/lib/mysql 6&gt;. 修改密码①编辑配置文件vim /etc/my.cnf在[mysqld]下加skip-grant-tables②重启mysql服务systemctl start mysql③免密登录mysql -u root -p提示输入密码时直接敲回车。④选择 mysql 数据库use mysql;⑤置空默认密码update user set authentication_string=&#39;&#39; where user=&#39;root&#39;;⑥退出mysql，修改配置文件my.cnf,把kip-grant-tables删掉vim /etc/my.cnf⑦重启服务systemctl start mysql⑧登录mysql -u root -p提示输入密码时直接敲回车。⑨修改root密码ALTER user &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;密码&#39;;⑩退出重启服务通过自己设置的密码登录mysql -u root -p密码7&gt;. 设置远程登录设置权限 %表示允许远程grant all privileges on *.* to &#39;root&#39;@&#39;%&#39; identified by &#39;123456&#39; with grant option;或者update user set host=&#39;%&#39; where user=&#39;root&#39;;刷新数据库，使权限立刻生效flush privileges; 注意所有标点均为英文符号！ 到此mysql8.0安装完成。 配置主从复制需要两台虚拟机或云服务器都安装。 2.配置修改 主master数据库中：在配置文件my.cnf新增： 1234567891011server-id = 100log-bin = mysql-bininnodb-file-per-table =ONskip_name_resolve=ON#以下原有datadir=/var/lib/mysqlsocket=/var/lib/mysql/mysql.socklog-error=/var/log/mysqld.logpid-file=/var/run/mysqld/mysqld.pid 从slave数据库中：在配置文件my.cnf新增： 1234567891011relay-log=relay-log1relay-log-index=relay-log.indexserver-id = 101innodb_file_per_table=ONskip_name_resolve=ON#以下原有datadir=/var/lib/mysqlsocket=/var/lib/mysql/mysql.socklog-error=/var/log/mysqld.logpid-file=/var/run/mysqld/mysqld.pid 配置完成重启数据库 3.主库master操作（1）创建用于同步的用户并授权123456#创建用户CREATE USER &apos;wwze&apos;@&apos;192.168.17.201&apos; IDENTIFIED BY &apos;wish&apos;;#授权grant replication slave on *.* to &apos;wwze&apos;@&apos;192.168.17.201&apos; identified by &apos;wish&apos;;#刷新权限flush privileges; （2）查看master状态，记录二进制文件名（File）和位置（Position） 1SHOW MASTER STATUS; 4.从库slave操作（1）同步12change master to master_host=&apos;94.191.88.237&apos;, master_user=&apos;wwze&apos;, master_password=&apos;wish&apos;, \master_log_file=&apos;mysql-bin.000002&apos;, master_log_pos=885, master_connect_retry=30; 其中mysql-bin.000002为在主库从查询到的二进制文件名，885为位置。 （2）启动同步1start slave; （3）查看同步状态1show slave status\G 这里结尾不加分号。 当 Slave_IO_Running: Yes 和Slave_SQL_Running: Yes时，便主从搭建成功。 5.额外配置（1）选择性同步数据库1234567# 不同步哪些数据库 binlog-ignore-db = mysql binlog-ignore-db = test binlog-ignore-db = information_schema # 只同步哪些数据库，除此之外，其他不同步 binlog-do-db = game （2）从库设置为只读，不能写在从库slave的配置文件my.cnf中加：1read_only=1 可以限定普通用户的对数据的修改操作，但不会限制root用户（具有super权限的用户）。如若要限制root用户，需要对所有表加读锁：flush tables with read lock; 6.其他停止同步：stop slave;清理slave：reset slave all; 参考： https://blog.csdn.net/xinpengfei521/article/details/80400142https://www.cnblogs.com/gl-developer/p/6170423.htmlhttps://blog.csdn.net/wuapeng/article/details/80632446]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>mysql主从复制</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于SSM的学生信息管理系统(选课)]]></title>
    <url>%2F%E5%9F%BA%E4%BA%8ESSM%E7%9A%84%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F(%E9%80%89%E8%AF%BE).html</url>
    <content type="text"><![CDATA[项目简介：由SpringMVC+MyBatis为主要框架，mysql8.0配置主从复制实现读写分离，主机丛机分别为腾讯云的服务器，而项目部署在阿里云上。前端主要由bootstrap完成，背景用particles.js插件。数据库交互查询用到pagehelper分页。在添加修改相关功能时通过ajax来验证其主键是否存在可用。代码层次清晰，输入框约束较高，已配置登录拦截。 一、应用技术 工具：eclipse、navicat 环境：JDK1.8、tomcat9.0、mysql8.0 前端：JavaScript、jQuery、bootstrap4、particles.js 后端：maven、SpringMVC、MyBatis、ajax、mysql读写分离、mybatis分页 二、环境搭建 建议安装eclipse4.8及以上 官网下载：点击进入官网下载 JDK 1.8 官网下载：点击进入官网下载 MySQL8.0 官网下载：https://dev.mysql.com/downloads/mysql/ windows安装：略！ linux安装请查看：https://fuzui.net/2019/04/15/mysql-master-slave/#more mysql主从搭建(可有可无)：如果不需要读写分离只需要把applicationContext.xml配置文件改一下即可，这样也就不必搭建主从。 搭建有以下方式 （1）单台linux通过docker搭建mysql主从： https://blog.csdn.net/supermao1013/article/details/83065682 （2）两台云服务器或虚拟机（我用的这种方式）： https://fuzui.net/2019/04/15/mysql-master-slave/#more tomcat 9.0 官方下载：点击进入官网下载 navicat数据库工具 百度网盘下载：https://pan.baidu.com/s/1BWQglimJH4_heiKLyH0lKg 提取码：eslh eclipse、jdk、tomcat等相关安装配置步骤省略 三、功能这是在上个springmvc选课系统的基础上进行修改完善的，目前功能基本相同，修复诸多bug，上个系统中有详细介绍：B/S基于springMVC的网上选课系统主要功能模块图： 新增： 增加分页查询 输入框约束 学号、身份证、课程编号、教师编号只能输入数字，并且有最大输入限制，其中学号固定12位，若小于12位将会有提示。姓名只能输入中文。几乎所有输入框不能输入空格等约束 下拉框联动 添加、修改课程采用二级联动，即所属系别——所属专业； 添加、修改学生采用三级联动，即系别——专业——班级。（三级联动代码有些复杂，因为JavaScript学的不好=-=）。 ajax+springmvc验证 用于验证学号、课程编号、教师编号是否存在并给出提示信息等。 其中课程安排时间地点排重功能正在开发中···· 登录拦截 在handler层配置拦截器，对各角色进行登录拦截，即未登录用户不能直接通过相应url访问。 更多功能持续更新中······ 四、数据库设计 总共六个表：学生表、教师表、管理员表、课程表、课程安排表、选课表。 &emsp;&emsp;管理员表admin 列名 类型 约束 备注 Aname Varchar（12） 主键 账号 Apassword 密码 &emsp;&emsp;学生表Student 列名 类型 约束 备注 Sid Char(12) 非空、主键 学号 Sname Varchar（8） 非空 姓名 Sidcard Char(18) 非空 身份证 Ssex Char(2) 男女 性别 Spassword Varchar(12) 非空 密码 Sage Char（2） 年龄 Classr Varchar（15） 班级 profession Varchar（15） 专业 College Varchar（15） 学院 &emsp;&emsp;教师表Teacher 列名 类型 约束 备注 Tid Char（4） 主键 工号 Tname Varchar(8) 姓名 Tpassword Varchar(12) 密码 Tsex Char(2) 男女 性别 Introduction Varchar（100） 简介 &emsp;&emsp;课程表course 列名 类型 约束 备注 Cid Char（4） 主键 课程号 Cname varChar(15) 课程名 Cintroduction Varchar（100） 简介 Type Varchar（15） 类型（选修，必修） Belongcoll Varchar（15） 所属学院 Belongpro Varchar（15） 所属专业 &emsp;&emsp;课程安排 列名 类型 约束 备注 Courseclass Varchar（12） 主键 开课班级 Coursetime Varchar（12） 上课时间 Courseweek Varchar（12） 上课周 Cid Char（4） 外键 课程号 Tid Char（4） 外键 教师编号 Classroom Varchar（6） 上课教室 credits Int（11） 学分 period Int（11） 学时 Totalnum Int（11） 总人数 &emsp;&emsp;选课表sc 列名 类型 约束 备注 Id varChar（4） 自动增长、主键 用于传值 Sid Char(12) 外键 学生学号 Cid Char（4） 外键 课程编号 五、主页面截图更多请查看演示 六、项目层次 七、展示与下载展示：studentInfo.fuzui.net请大佬不要攻击我毫无防御的服务器~如果发现什么bug希望能够及时留言或联系我，会尽快修正。 下载： github：https://github.com/fuzui/StudentInfo 百度网盘下载：https://pan.baidu.com/s/12ayd387DBVVG19ArzG6t4Q提取码：twmd推荐github下载，百度网盘不会更新=-= 还可留邮箱我发源码 最终感谢大佬给予前端风格设计帮助 @进军的橙子君 如果部署运行测试中出现问题可以找我~,留言会在12小时内回复 当你的才华还撑不起你的野心的时候，你就应该静下心来学习。]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>项目</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux(centos7)定时任务crontab]]></title>
    <url>%2Flinux%E5%AE%9A%E6%97%B6%E5%99%A8crontab.html</url>
    <content type="text"><![CDATA[百度百科：crontab命令常见于Unix和类Unix的操作系统之中，用于设置周期性被执行的指令。该命令从标准输入设备读取指令，并将其存放于“crontab”文件中，以供之后读取和执行。该词来源于希腊语 chronos(χρνο)，原意是时间。通常，crontab储存的指令被守护进程激活， crond常常在后台运行，每一分钟检查是否有预定的作业需要执行。这类作业一般称为cron jobs。 在centos7中：启动systemctl start crond 停止systemctl stop crond 重启systemctl restart crond 编辑crontab -e 删除crontab -r 添加任务 * * * * * command表示分钟1-59 每分钟用 /1 表示表示小时1-23 表示日期1-31表示月份1-12 表示星期0-6]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>crontab</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HIVE的搭建配置及关联MySQL]]></title>
    <url>%2FHIVE%E7%9A%84%E6%90%AD%E5%BB%BA%E9%85%8D%E7%BD%AE%E5%8F%8A%E5%85%B3%E8%81%94MySQL.html</url>
    <content type="text"><![CDATA[概念： Hive是由Facebook实现并开源。是基于Hadoop的一个数据仓库工具，可以将结构化的数据映射为一张数据库表，并提供HQL（Hive SQL）查询功能。其底层数据时存储在HDFS上。Hive的本质是将SQL语句转换为MapReduce任务运行，使部署需MapReduce的用户很方便地利用HQL处理和计算HDFS上的结构化数据，使用于离线的批量数据计算。 一、下载前提： 配置好hadoop分布式环境，我在上一篇博文写到Hadoop从零开始搭建完全分布式。 官网下载hive，这里我用hive-1.2.2版本：官网下载地址：http://mirrors.shu.edu.cn/apache/hive/hive-1.2.2/ 我这里选择下载到本地然后通过xftp上传到虚拟机上。 解压：1tar -xzvf apache-hive-1.2.2-bin.tar.gz 重命名1mv apache-hive-1.2.2-bin hive-1.2.2 二、配置（1）配置环境变量1vi /etc/profile 将以下添加在末尾12export HIVE_HOME=/software/hive-1.2.2PAHT=$PATH:$HIVE_HOME/bin 刷新1source /etc/profile 查看1source /etc/profile （2）配置文件修改software/hive-1.2.2/conf/hive-env.sh.template为hive-env.sh。12cd /software/hive-1.2.2/conf/cp hive-env.sh.template hive-env.sh 配置HADOOP_HOME=/Hadoop所在路径 1export HADOOP_HOME=/software/hadoop2.7.2 配置HIVE_CONF_DIR=/Hive中conf文件夹路径1export HIVE_CONF_DIR=/software/hive-1.2.2/conf 三、启动（1）启动HDFS在hadoop01机上1start-dfs.sh （2）启动YARN在hadoop02机上1start-yarn.sh 通过jps检测启动情况（3）在HDFS上创建/tmp和/user/hive/warehouse12hadoop fs -mkdir /tmphadoop fs -mkdir -p /user/hive/warehouse （4）修改文件夹权限，同组可写12hadoop fs -chmod 775 /tmphadoop fs -chmod 775 /user/hive/warehouse （5）启动Hive1hive 四、hive基本操作1.基本操作(语法类似于MySQL)2.显示所有数据库：show databases;3.使用数据库(默认数据库default):use 数据库名;4.显示使用数据库下所有表:show tables;5.创建表:create table 表名(字段1 类型,字段2 类型…)6.插入数据(map reduce):insert into 表名 (字段1,字段2…) values (数据1,数据2…)7.查询数据:select 字段 from 表名;8.删除表:drop table 表名;9.退出:exit 五、安装mysql1. 卸载MariadbCentOS7自带的是 Mariadb（1）查找1rpm -qa|grep mariadb （2）删除1rpm -e --nodeps 上面查出来的文件名 （3）删除配置文件1rm /etc/my.cnf 2.下载mysql 8.0这里我通过rpm安装官网下载：mysql8.0.15（1）解压1tar -xvf mysql-8.0.15-1.el7.x86_64.rpm-bundle.tar （2）安装解决一些依赖1234567yum -y install numactl yum -y install libaio.so.1 libgcc_s.so.1 libstdc++.so.6yum update libstdc++-4.4.7-4.el6.x86_64yum search libaioyum install libaioyum install net-toolsyum install openssl-devel 按次序安装1234rpm -ivh MySQL-client-5.6.43-1.el7.x86_64.rpmrpm -ivh mysql-community-common-8.0.15-1.el7.x86_64.rpmrpm -ivh mysql-community-libs-8.0.15-1.el7.x86_64.rpmrpm -ivh mysql-community-client-8.0.15-1.el7.x86_64.rpmrpm -ivh mysql-community-server-8.0.15-1.el7.x86_64.rpm （3）初始化1mysqld --initialize --user=mysql --basedir=/usr --datadir=/var/lib/mysql （4）启动1systemctl start mysqld （5）修改密码 编辑配置文件vim /etc/my.cnf在[mysqld]下添加skip-grant-tables保存退出 重启mysql服务systemctl restart mysqld 通过mysql -uroot -p登录，密码直接回车即可 选择mysql数据库use mysql; 将默认密码清空update user set authentication_string=’’ where user=’root’;exit命令退出 删除 /etc/my.cnf 文件刚刚添加的 skip-grant-tablesvim /etc/my.cnf选中skip-grant-tables所在行按两下d键即可删除保存退出 重启mysql服务systemctl restart mysqld 再次登录mysql -uroot -p登录，密码直接回车即可 设置密码（我这里将密码设为root）选择mysql数据库use mysql;ALTER user ‘root‘@’localhost’ IDENTIFIED BY ‘root’; 设置远程访问update user set host=’%’ where user=’root’; 重启exit退出重启服务systemctl restart mysqld重新通过mysql -uroot -proot登录 远程连接我通过navicat远程连接， 设置开机启动systemctl enable mysqld 至此，mysql安装完成。 六、hive关联mysql1.下载驱动jar我安装的是mysql8.0.15版本，我找对应版本的jar平时个人比较喜欢到mvnrepository去找jar，附上地址：https://mvnrepository.com/artifact/mysql/mysql-connector-java/8.0.15 将下载好的jar放到hadoop01虚拟机中hive安装目录的lib文件夹下 2.配置hive-site.xml创建hive-site.xml12cd /software/hive-1.2.2/confvim hive-site.xml 将以下添加进去（灵活应变）123456789101112131415161718&lt;configuration&gt; &lt;property&gt; &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt; &lt;value&gt;jdbc:mysql://192.168.17.134:3306/myhive?createDatabaseIfNotExist=true&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt; &lt;value&gt;com.mysql.cj.jdbc.Driver&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt; &lt;value&gt;root&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt; &lt;value&gt;root&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt; 3.重启整个集群（1）在Hadoop02上1stop-yarn.sh （2）在Hadoop01上1stop-dfs.sh （3）在Hadoop01上1start-dfs.sh （4）在Hadoop02上1start-yarn.sh （5）在Hadoop01上重启mysql1systemctl restart mysqld 4.启动1hive 启动完成后用navicat查看发现已经自动创建了myhive数据库。也可以通过命令行查看12mysql -uroot -prootshow databases; 5.其他配置（看需求）hive-site.xml中123456789101112131415#数据库存放位置&lt;property&gt;&lt;name&gt;hive.metastore.warehouse.dir&lt;/name&gt; &lt;value&gt;/user/hive/warehouse&lt;/value&gt;&lt;description&gt;location of default database for the warehouse&lt;/description&gt; &lt;/property&gt; #查询时显示字段名称和数据库名&lt;property&gt; &lt;name&gt;hive.cli.print.header&lt;/name&gt;&lt;value&gt;true&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;hive.cli.print.current.db&lt;/name&gt; &lt;value&gt;true&lt;/value&gt; &lt;/property&gt; 七、测试（1）进入数据库12create database fuzui;use fuzui; （2）创建表 123456create table student( id int, name string, age int, sex string)row format delimited fields terminated by &apos;,&apos;; 在mysql中会看到创建这个表的字段信息（3）退出hive1exit （4）创建本地文件上传到HDFS 我直接用的root用户，所以我在root目录下创建12cd /rootvim fz.txt 添加如下内容12345678201501,wangze,22,man201502,wangchen,20,man201503,liyu,20,woman201504,zhangna,21,woman201505,songxin,19,woman201506,changyi,18,man201507,liuni,20,woman201508,zhaoming,22,man 保存退出 上传hdfs 创建文件夹hadoop fs -mkdir /myhive 上传hadoop fs -put /root/fz.txt /myhive 查看hadoop fs -cat /myhive/fz.txt（5）进入hive1hive （6）导入hive表 进入数据库 use fuzui 导入load data inpath &#39;/myhive/fz.txt&#39; into table student; 查看数据select * from student; 稍微复杂点的查询查询最小的女生多少岁select min(age) from student where sex = &#39;woman&#39;;这时，就开始一系列运行了，速度会慢。 ==至此，HIVE搭建成功！==]]></content>
      <categories>
        <category>hadoop</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>hadoop</tag>
        <tag>hive</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hadoop从零开始搭建完全分布式]]></title>
    <url>%2FHadoop%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E5%AE%8C%E5%85%A8%E5%88%86%E5%B8%83%E5%BC%8F.html</url>
    <content type="text"><![CDATA[简介： 由三个或以上实体机或虚拟机组成的集群。 准备： 1.hadoop2.7.2版本2.jdk8版本3.vmware 一、创建虚拟机及相关配置1.创建虚拟机一路下一步，选择已有centos7镜像这里我取名为hadoop01选择NAT网络模式设置相关硬件然后等待创建（中间空的步骤均使用默认）开始安装：设置root密码和创建一个用户等待安装完成 2.查看ip并修改主机名以及配置映射（1）查看并修改ip我将这一台的ip设为192.168.17.134123cd /etc/sysconfig/network-scripts/vim vi ifcfg-ens33#这个配置每个人都可能不一样，进去修改 将原来的完全替换（灵活修改name和device）123456789TYPE=EthernetBOOTPROTO=staticNAME=ens33DEVICE=ens33ONBOOT=yesIPADDR=192.168.17.134NETMASK=255.255.255.0GATEWAY=192.168.17.2DNS1=8.8.8.8 重启rebootping www.baidu.com查看网络是否通 永久关闭防火墙： 12systemctl stop firewalldsystemctl disable firewalld 这里我使用的secureCRT连接我的虚拟机。（2）修改主机名12vi /etc/hostname修改为hadoop01 （3）配置ip映射预计后面两台虚拟机的ip分别是192.168.17.135和192.168.17.136有以下关系 主机 ip hadoop01 192.168.17.134 hadoop02 192.168.17.135 hadoop03 192.168.17.134 123456vi /etc/hosts#127.0.0.1 localhost192.168.17.134 hadoop01192.168.17.135 hadoop02192.168.17.136 hadoop03 重启reboot 3.上传hadoop和jdk并配置环境变量（1）安装ftp 安装ftp1yum -y install vsftpd lftp ftp （2）上传这里我使用的是xftp6工具上传相关包然后创建相关目录并解压我在根目录下创建software1mkdir /software 将hadoop和jdk解压并重命名放在其下。（解压移动重命名基础过程省略） （3）配置环境变量1vi /etc/profile 在后面添加12345export JAVA_HOME=/software/jdk1.8export HADOOP_HOME=/software/hadoop2.7.2PATH=$PATH:$JAVA_HOME/binPATH=$PATH:$HADOOP_HOME/binPATH=$PATH:$HADOOP_HOME/sbin 刷新生效1source /etc/profile 检测1echo $PATH 3.修改hadoop配置文件1cd /software/hadoop2.7.2/etc/hadoop/ vi修改，以下xml文件修改在configuration标签内1.core-site.xml12345678&lt;property&gt; &lt;name&gt;fs.defaultFS&lt;/name&gt; &lt;value&gt;hdfs://hadoop01:9000&lt;/value&gt;&lt;/property&gt;&lt;property&gt; &lt;name&gt;hadoop.tmp.dir&lt;/name&gt; &lt;value&gt;/software/hadoop2.7.2/data/tmp&lt;/value&gt;&lt;/property&gt; 2.hadoop-env.sh1export JAVA_HOME=/software/jdk1.8 3.hdfs-site.xml12345678&lt;property&gt; &lt;name&gt;dfs.replication&lt;/name&gt; &lt;value&gt;3&lt;/balue&gt;&lt;/property&gt;&lt;property&gt; &lt;name&gt;dfs.namenode.secondary.http-address&lt;/name&gt; &lt;value&gt;hadoop03:50090&lt;/value&gt;&lt;/property&gt; 4.slavs 配置datanode节点的ip，每个占一行，不能出现多余的空格和换行行123192.168.17.134192.168.17.135192.168.17.136 5.yarn-env.sh1export JAVA_HOME=/software/jdk1.8 6.yarn-site.xml12345678&lt;property&gt; &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt; &lt;value&gt;mapreduce_shuffle&lt;/value&gt;&lt;/property&gt;&lt;property&gt; &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt; &lt;value&gt;hadoop02&lt;/value&gt;&lt;/property&gt; 7.mapre-env.sh1export $JAVA_HOME=/software/jdk1.8 8.mapred-site.xml将mapred-site.xml.template重命名1234&lt;property&gt; &lt;name&gt;mapreduce.framework.name&lt;/name&gt; &lt;value&gt;yarn&lt;/value&gt;&lt;/property&gt; 至此，一台配置完成，紧接着克隆出两台一模一样的 二、克隆并配置1.克隆首先关机刚刚虚拟机下一步，创建完整克隆更名为hadoop02。以此方法克隆出hadoop03。 2.修改配置（1）分别修改主机名和iphadoop02 192.168.17.135hadoop03 192.168.17.136（2）重启reboot 3.创建免密登录三台机器都执行ssh-keygen -t rsa,一路回车cd ~/.ssh 查看 再分别执行123ssh-copy-id hadoop01ssh-copy-id hadoop02ssh-copy-id hadoop03 检测12ssh hadoop02ssh hadoop03 二、启动集群1.启动（1）格式化namenode在hadoop01上1hdfs namenode -format （2）启动NameNode和DataNode(在hadoop01上)1start-dfs.sh （3）启动ResourceManager和NodeMananger(在hadoop02上)1start-yarn.sh 2.检测（1）jps检测 （2）登录web 192.168.17.134:50070 三、测试1.创建并上传hdfs测试文本（1）本地通过vi创建了一个wz.txt，并编辑文本（2）上传到hdfs上创建输入文件夹1hadoop fs -mkdir -p /data/input 将wz.txt上传1hadoop fs -put /root/wz.txt /data/input 查看1hadoop fs -cat /data/input/wz.txt 2.执行官网测试wordcount输出文件夹事先不能有！1hadoop jar /software/hadoop2.7.2/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.2.jar wordcount /data/input /data/output 中间部分过程执行完成查看输出文件夹1hadoop fs -ls /data/output/ 其中part-r-00000便是输出结果查看：1hadoop fs -cat /data/output/part-r-00000 也可以通过192.168.17.134:50070查看点进data——output点击part-r-00000 下载这块，如果想点击下载，需要在你本机上配置ip映射（或者点击下载后吧url上的hadoop02换成192.168.17.135也是可以的=-=） win10上ip映射文件位置 ==至此，完全分布式搭建成功！==]]></content>
      <categories>
        <category>hadoop</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hadoop搭建伪分布式]]></title>
    <url>%2FHadoop%E6%90%AD%E5%BB%BA%E4%BC%AA%E5%88%86%E5%B8%83%E5%BC%8F.html</url>
    <content type="text"><![CDATA[==概念== 海量、高增长、多样化的信息数据有三大发行版本 Apache、CDH、HDP 一、优势1、高可靠性：Hadoop假设计算元素和存储会出现故障，因为它维护多个工作数据副本，在出现故障时可以对失败节点重新分布处理。2.高扩展性：在集群间分配任务数据，可方便扩展数以千计的节点。3.高效性：在MapReduce的思想下，Hadoop是并行工作的，以加快任务处理速度。4.高容错性：自动保存多份副本数据，并且能够自动将失败的任务重新分配。 二、组成 Hadoop HDFS：一个高可靠、高吞吐的分布式文件系统。 Hadoop MapReduce：一个分布式的离线并行计算框架。 Hadoop YARN：一个资源调度平台，负责为运算程序提供服务器运算资源，相当于一个分布式的操作系统，而MaoReduce等运算程序则相当于运算于操作系统之上的应用程序。 ResourceManager：一个中心服务，用来调度、启动每一个Job所属的ApplicationMaster。 NodeManager：是每台机器框架的代理，是执行应用程序的容器，监控应用程序的资源使用情况，并向调度器汇报。 Hadoop Common：Hadoop体系最底层的一个模块，为Hadoop各个子项目提供各种工具，如：配置文件和日志操作等。 三、运行模式 本地模式（默认模式）：不需要启用单独进程，直接可以在运行、测试和开发时使用。 伪分布式模式：等同于完全分布式，只有一个节点。 完全分布式模式：多个节点一起运行。 四、伪分布式1. 配置环境变量 安装JDK，配置环境变量 安装HADOOP，配置环境变量 1234567vi /etc/profileexport JAVA_HOME=JDK路径export HADOOP_HOME=hadoop路径PATH=$PATH:$JAVA_HOME/binPATH=$PATH:$HADOOP_HOME/binPATH=$PATH:$HADOOP_HOME/sbin &emsp;&emsp;保存后刷新 1source /etc/profile 2. 修改配置文件&emsp;&emsp;（1）hadoop-env.sh1export JAVA_HOME=JDK路路径 &emsp;&emsp;（2）core-site.xml 123456789101112&lt;!-- 指定HDFS中的NameNode的地址 --&gt;&lt;property&gt; &lt;name&gt;fs.defaultFS&lt;/name&gt; &lt;!-- 使用主机名或ip --&gt; &lt;value&gt;hdfs://主机名:9000&lt;/value&gt;&lt;/property&gt;&lt;!-- 指定hadoop运行时产生文件的存储目录 --&gt;&lt;property&gt; &lt;name&gt;hadoop.tmp.dir&lt;/name&gt; &lt;!-- 默认路径/tmp/hadoop-$&#123;user.name&#125; --&gt; &lt;value&gt;/hadoop安装目录/data/tmp&lt;/value&gt;&lt;/property&gt; &emsp;&emsp;（3）hdfs-site.xml 123456&lt;!-- 指定HDFS副本的数量 --&gt;&lt;property&gt; &lt;name&gt;dfs.replication&lt;/name&gt; &lt;!-- 默认为3，伪分布式为单机模式，设置成1 --&gt; &lt;value&gt;1&lt;/value&gt;&lt;/property&gt; 3. 启动集群 &emsp;&emsp;（1）格式化namenode 1hdfs namenade -format &emsp;&emsp;只需要在修改配置后格式化一次，格式化后会生成data和logs文件夹。 &emsp;&emsp;（2）启动namenode 1hadoop-daemon.sh start namenode &emsp;&emsp;（3）启动datanode 1hadoop-daemon.sh start datanode 5. 查看集群 &emsp;&emsp;（1）jps（类似ps命令，只列出java相关程序进程） &emsp;&emsp;（2）查看日志，hadoop安装目录下的logs文件夹 &emsp;&emsp;（3）使用hadoop系统自带的web程序 &emsp;&emsp;&emsp; http://主机名或ip:50070 访问HDFS系统 6. 操作集群 hadoop提供三套操作集群的命令，命令格式相同，①hdfs dfs，②hadoop dfs，③hadoop fs，使用hadoop fs，可操作任何类型的文件系统，其他两种只能操作HDFS. &emsp;&emsp;（1）HDFS上创建文件夹 1hadoop fs -mkdir -p /hdfs上文件夹路径 &emsp;&emsp;（2）从linux上传文件到HDFS 1hadoop fs -put linux上文件路径 /hdfs上文件夹路径 &emsp;&emsp;（3）查看HDFS目录结构和文件内容 12hadoop fs -ls /hdfs上文件夹路径hadoop fs -cat /hdfs上文件路径 &emsp;&emsp;（4）在HDFS上运行官方示例 123hadoop jar hadoop安装目录/share/hadoop/mapreduce/hadoop-mapreduce-examples-版本号.jar 示例程序名称（wordcount） /HDFS输入文件夹 /HDFS输出文件夹#输出文件夹不可事先拥有。 &emsp;&emsp;（5）从HDFS上下载文件到linux 1hadoop fs -get /hdfs上文件路径 /linux文件夹 &emsp;&emsp;（6）HDFS删除1hadoop fs -rmr /hdfs上文件或文件夹路径 7. 配置YARN&emsp;&emsp;（1）在yarn-env.sh和mapred-env.sh中配置JAVA_HOME&emsp;&emsp;（2）yarn-site.sml12345678910&lt;!-- NodeManager上运行的附属服务，许配置mapreduce_shuffle，才可运行MapReduce --&gt;&lt;property&gt; &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt; &lt;value&gt;mapreduce_shuffle&lt;/value&gt;&lt;/property&gt;&lt;!-- 指定YARN的ResourceManager的地址 --&gt;&lt;property&gt; &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt; &lt;value&gt;主机名&lt;/value&gt;&lt;/property&gt; &emsp;&emsp;（3）mapred-site.sml12345&lt;!-- 指定MapReduce运行在Yarn上 --&gt;&lt;property&gt; &lt;name&gt;mapreduce.framework.name&lt;/name&gt; &lt;value&gt;yarn&lt;/value&gt;&lt;/property&gt; 在yarn集群上提交任务，等任务执行完成后，就不能查看log文件了，为了解决这个问题，可以开启historyserver，实现yarn集群上历史任务的保存，yarn的web程序中每一个job都对应一个history的链接。 12345678910&lt;!-- 历史服务器地址 --&gt;&lt;property&gt; &lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt; &lt;value&gt;主机名:10020&lt;/value&gt;&lt;/property&gt;&lt;!-- 历史服务器的web程序地址 --&gt;&lt;property&gt; &lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt; &lt;value&gt;主机名:19888&lt;/value&gt;&lt;/property&gt; 8. 启动集群 必须先启动HDFS，再启动YARN。停止时先停止YARN，再停止HDFS &emsp;&emsp;（1）格式化namenode(需先删除data和logs文件夹) 1hdfs namenode -format &emsp;&emsp;（2）启动NameNode和DataNode 12hadoop-daemon.sh start namenodehadoop-daemon.sh start datanode &emsp;&emsp;（3）启动ResourceManager和NodeManager 12yarn-daemon.sh start resourcemanageryarn-daemon.sh start nodemanager 8. 集群测试&emsp;&emsp;（1）查看yarn的web程序：http://主机名:8088&emsp;&emsp;（2）命令行操作HDFS：hadoop fis -xxx&emsp;&emsp;（3）查看HDFS的web程序：http://主机名:50070&emsp;&emsp;（4）执行官方测试程序dataword1hadoop jar hadoop安装目录/share/hadoop/mapreduce/hadoop-mapreduce-examples-版本号.jar wordcount /HDFS输入文件夹 /HDFS输出文件夹 输出文件夹不可事先拥有。输入文件为统计每个单词个数，实现常见一个文本，编写若干个单词，空格或换行分割。然后上传到HDFS上，事先创建输入文件夹，将该文档上传于输入文件夹，最后运行上面命令。执行完成可查看输出文件夹内文件内容，便为“单词 个数”数行形式展现。]]></content>
      <categories>
        <category>hadoop</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux下配置ftp（centos7）]]></title>
    <url>%2Flinux%E9%85%8D%E7%BD%AEftp.html</url>
    <content type="text"><![CDATA[1.安装&emsp;1.1 准备工作&emsp;&emsp;关闭防火墙 12systemctl stop firewalld#在centos6中使用命令 service iptables stop &emsp;&emsp;拥有固定ip &emsp;1.2 yum安装1yum -y install vsftpd lftp ftp &emsp;1.3 关闭开机启动12systemctl disable firewalld#在centos6中使用命令 chkconfig vsftpd off 2.简介 ftp：文件传输协议协议名：ftp软件包：vsftpdftp端口：控制端口 21/tcp 数据端口 20/tcp配置文件：/etc/vsftpd/vsftpd.conf &emsp;&emsp;(1)控制端口是用来建立连接的，不能传输数据。&emsp;&emsp;(2)主动模式是服务器主动送达，客户端需提供地址，不安全。&emsp;&emsp;(3)被动模式是客户端去服务器获取。&emsp;&emsp;(4)主动和被动是由客户端决定。&emsp;&emsp;vi /etc/lftp.conf&emsp;&emsp;主动模式&emsp;&emsp;set ftp:passive-mode off&emsp;&emsp;被动模式&emsp;&emsp;set ftp:passive-mode on&emsp;&emsp;服务器关闭被动模式&emsp;&emsp;vi /etc/vsftpd/vsftpd.conf&emsp;&emsp;pasv_enable=no 3.配置文件&emsp;&emsp;==vsftpd.conf== 123456789101112131415161718192021222324#是否允许用户匿名登录anonymous_enable=YES#是否允许本地用户登录local_enable=YES#是否允许写write_enable=YES#控制本地用户上传文件的默认权限local_umask=022#控制匿名用户上传文件的默认权限anon_umask=022#匿名用户限速anon_max_rate=500000#本地用户限速local_max_rate=80000#ftp用户最大连接数（匿名用户不受限制）max_clients=500#单个ip最大连接数、线程数max_per_ip=2#指定本地用户访问root的目录local_root=/ftproot#指定匿名用户访问root的目录anon_root=/anonroot#处于安全考虑，应把所有用户锁定在自己的家目录chroot_local_user=YES 1234567891011#限制用户登录ftp#黑名单#开启黑名单功能userlist_enable=YES#确定黑名单（默认）userlist_deny=YES#名单文件 默认存在userlist_file=/etc/vsftpd/user_list#白名单#确认白名单userlist_deny=NO]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[总结一些linux的基本命令]]></title>
    <url>%2Flinux%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93.html</url>
    <content type="text"><![CDATA[简要一些基本的linux命令，我认为像这些命令之类的，必须要多谢多用才能熟记。 基本命令与解释1.mkdir 创建目录 -p 创建递归目录 2.touch 创建文件或修改文件时间 -a 仅修改读取时间（atime） -m 仅修改修改时间（mtime）、 -d 两者都修改 3.cat 查看文件 -n 显示行号 4.less more 分页查看 5.head 从头查看 6.tail 从后看 -f 实时查看日志文件 7.grep 筛选，常配合管道使用 -n显示收集到信息的行号 -v用于反选信息 8.wc -l 统计行数、-w 字节数、-c 单词数 9.du 查看大小 10.cp (旧) (新) 复制 11.mv (旧) (新) 剪切或重命名 12.useradd 添加用户（只删除用户，目录保留，添加-r参数，用户目录都删除） userdel 删除用户 whoami 查询当前用户名称 13.groupadd 添加用户组 14.chmod [ugoa]+[rwx] 文件 chmod ___ 文件 4r 2w 1x 15.echo 输出 16.date 用于显示及设置系统的时间或日期 -s “”设置时间 17.reboot 重启系统 18.poweroff 关闭系统 19.wegt 下周网络文件 -p 下载到指定目录 -r 递归下载 20.ps 查看系统中进程状态 -aux 显示：R（运行）S（终端）D（不可中断）Z（僵死）T（停止） 21.top 动态监视进程活动和系统负载信息 第一行：系统时间 运行时间 显示终端数 系统负载 第二行：进程总数 运行中的进程数 睡眠中的进程数 停止的进程数 僵死的进程数 第三行：（百分比）用户占用 系统内核占用 改变过优先级的进程 空闲的资源 第四行：物理内存总量比 内存使用量 内存空闲量 作为内存缓存的内存量 第五行：虚拟内存总量 虚拟内存使用量 虚拟内存空闲量 已被提前加载的内存量 22.pidof 查询某个服务的pid值 23.kill 用于终止某个指定pid的服务进程 24.killall 终止某个指定名称的服务所对应的全部进程 25.ifconfig 获取网咖配置与网络状态信息 26.uanme -a 查看系统内核与系统版本等信息 27.uptime 查看系统的负载信息 28.free -h 显示当前系统中内存使用量情况 29.who 查看登入主机的用户终端信息 30.last 查看所有系统的登录记录 31.history 显示历史执行过的命令 通过“!命令符号”执行某条命令 -c 清空 32.sosreport 收集系统配置及架构信息并输出诊断文档 33.pwd 显示当前目录 32.cd 切换目录 33.ls ll 查看当前目录下的文件 34.tr (old) (new) 替换文件中的字符 35.stat 查看文件具体存储信息和时间 access modify change 36.cut 按列提取文本字符 -d 紧跟分隔符 -f 紧跟列号 37.diff 比较多个文件文本的差异 --brief 判断文件是否相同 -c 显示文件具体的不同 38.rm 删除 -f 无需二次确认 -rf 强制删除 39.file 查看文件的类型 40.tar 解压缩 一般压缩-czvf 一般解压-xzvf 41.find 按照指定条件查找文件 -name -user -group -mtime -n +n -n指n天以内，+n指n天以前 -atime -n +n -ctime -n +n 42.fdisk -l 查看磁盘 43.vim编辑器 dd删除 yy复制 v撤销上一步操作 p粘贴 :w q wq q! wq! :set nu 显示行号 :set nonu 不显示行号 :命令 执行该命令 :整数 跳转到该行 44.crontab 定时任务 -e编辑 -l查询 -r删除当前用户的所有任务 编辑格式 * * * * * 第一个：一小时内的第几分钟执行0-59 第二个：一天中的第几个小时执行0-23 第三个：一个月中第几天执行1-31 第四个：一年中当中的第几个月执行1-12 第五个：一周当中星期几执行0-7（0和7都是周日） 特殊符号 * 任何时间 ，多个时间分割 - 连续时间 */n每个n执行一次 无效服务时重启定时服务 service crond restart 45.sync 将内存数据同步到磁盘，关机重启都应该执行]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux命令</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fhello-world.html</url>
    <content type="text"><![CDATA[在经过三天的时间，成功搭建完成github+hexo的博客。 我的csdb博客：https://blog.csdn.net/qq_39329616 开始写博客也才几个月，但收益很大，认识了不少人，希望能够坚持记录一些东西来提高自己，并认识更多的旁友。 当你的才华还撑不起你的野心的时候，你就应该静下心来学习。 梦在五湖四海]]></content>
  </entry>
  <entry>
    <title><![CDATA[B/S基于springMVC的网上选课系统]]></title>
    <url>%2FBS%E5%9F%BA%E4%BA%8EspringMVC%E7%9A%84%E7%BD%91%E4%B8%8A%E9%80%89%E8%AF%BE%E7%B3%BB%E7%BB%9F.html</url>
    <content type="text"><![CDATA[简要:去年花了一周时间自己在课设上写的，基于springMVC的网上选课系统。 使用说明 windows系统 java8环境 tomcat9环境 mysql5.5数据库， 用户名root，密码root eclipse需配置jre和tomcat。可由eclipse直接导入工程使用 1.设计选题&emsp;1.1 设计选题&emsp;&emsp;《网上选课系统》 &emsp;1.2 设计背景&emsp;&emsp;随着在校人数的增加，选课是重点问题，拥有一个好的网上选课系统可以简便快速的对选课各种信息进行管理，节省了人力和时间，提高了对课程管理的效率。 2.需求分析&emsp;分为三种用户：管理员、学生、教师。&emsp;管理员： &emsp; 1.登录功能 需求描述：通过已知的管理员账号登录，登录成功进入管理员界面，方可执行相应功能。 &emsp;2.添加教师信息 需求描述：添加一个新的教师信息，教师工号作为教师身份唯一标识，添加时会对输入框中教师工号是否存在进行判断并提示。 &emsp;3.修改教师信息 需求描述：可以选择教师并修改其信息，教师编号不可修改。 &emsp;4.删除教师信息 需求描述：删除某一条选中教师的所有信息。 &emsp;5.查询教师信息 需求描述：选择查询条件，可查询所有教师、通过教师编号查询教师信息，并以表格的形式显示出来。 &emsp;6.添加课程信息 需求描述：添加一个新的课程信息，课程编号作为该课程身份唯一标识，添加时会对输入框中课程编号是否存在进行判断并提示。其中一些属性通过下拉框方便选择。 &emsp;7.修改课程信息 需求描述：可对选中的课程进行修改，其中课程编号不可修改 &emsp;8.删除课程信息 需求描述：删除选定课程的所有信息。 &emsp;9.查询课程信息 需求描述：根据相应条件查询课程，所有课程、根据编号、课程类型、所属学院等进行查询。 &emsp;10.添加学生信息 需求描述：添加一个新的学生信息，学号作为学生身份唯一标识，添加时会对输入框中学号是否存在进行判断并提示。其中学院、专业等信息通过下拉框方便选择。 &emsp;11.修改学生信息 需求描述：修改选中学生的信息，其中学号不可修改。 &emsp;12.删除学生信息 需求描述：删除选中学生的所有信息。 &emsp;13.查询学生信息 需求描述：通过相应条件查询学生，例如查询所有信息，通过学号、学院、专业、班级等条件查询学生信息。 &emsp;教师： &emsp;1.查询个人信息 需求描述：可以查询自己的所有信息 &emsp;2.修改个人信息 需求描述：只能修改自己密码，其他信息都不可修改 &emsp;3.选择课程 需求描述：通过查询课程表，查看已有课程，并选择自己需要教学的课程。 &emsp;4.添加课程安排 需求描述：通过选择一门已有课程，对该课程进行安排包括上课班级名、上课时间、所在教师、学分学时、总人数等。 &emsp;5.修改课程安排 需求描述：修改自己已经安排的课程的信息。 &emsp;6.删除课程安排 需求描述：删除自己已经安排的课程的信息。 &emsp;7.查询课程安排 需求描述：查询自己的已选教学课程的各种信息 &emsp;8.查询选课信息 需求描述：选定自己教学课程，查看该课程的学生学科情况，包括一些学生信息。 &emsp;9.打印选课信息 需求描述：选择自己教学的一门课程，并打印出该课程的学生信息。 &emsp;学生： &emsp;1.修改个人信息 需求描述：只能修改自己的密码，其他信息需联系管理员修改。 &emsp;2.选课 需求描述：选择一门已有课程，并进入确认，提示学习该课程是否已有教师安排。 &emsp;3.查询课程安排 需求描述：查询自己所选课程的信息。 &emsp;4.查询选课人数 需求描述：查询课程已选人数。 &emsp;5.退选。 需求描述：退选自己已选课程。 3.系统的开发运行环境 本系统开发平台: JSP + MYSQL 本系统集成开发环境: Eclipse + Tomcat 本系统运行环境: Windows OS 4.程序功能模块图及数据流图&emsp;4.1 程序功能模块图 &emsp;4.1 数据流图 5.总体设计&emsp;5.1 系统体系结构设计 界面首先为选择登录身份，选择后进入相应登录界面，登陆成功后的主界面由两块组成，一个为左栏，用于显示功能以及功能操作的，可以手动隐藏和显示；还有主界面，用于操作对应功能以及查看结果等。主界面内含一个div盒子，用于美观。使用户能够在简单、易用、单一、统一的可视化界面下，轻松、方便地访问到各种类型的数据。 &emsp;5.2 系统功能说明&emsp;1.管理员 &emsp;&emsp;①可以对学生信息通过诸多条件进行查询； &emsp;&emsp;②可以对学生信息进行修改以及删除； &emsp;&emsp;③添加一个新的学生信息 &emsp;&emsp;④可以对教师信息查询、修改、删除以及添加。 &emsp;&emsp;⑤可对课程进行修改、删除、查询、以及添加。 &emsp;2.教师 &emsp;&emsp;①可以查询管理员添加的课程信息，并选择自己需要教学的课程。 &emsp;&emsp;②选择自己教学课程后对该课程进行安排，包括上课时间、上课地点、学分、学时、总人数等。 &emsp;&emsp;③可以对自己已选教学课程的课程安排进行修改、删除等操作。 &emsp;&emsp;④可以查询自己教学课程的学生选课信息。 &emsp;&emsp;⑤查看自己信息，并可以修改密码。 &emsp;3.学生 &emsp;&emsp;①可以查询全部管理员已添加的课程，并可以通过课程编号、课程名、课程所属专业、课程类型等条件查询。 &emsp;&emsp;②可以选择查询出来的课程进行选课，选择后进入确认界面，显示课程名，提示是否已有教师安排此课，若有则显示教师姓名，并有确认和取消两个按钮，确认则选课成功，取消则返回上一界面。 &emsp;&emsp;③查看选课结果，用表格形式显示出课程名、上课教室、上课地点、学分、学时以及代课教师。没有教师安排的课程无法查出，只能在退选中查看单独的课程名。 &emsp;&emsp;④退选已选课程，先查询出自己已选的所有课程，通过课程名选择退选。 &emsp;&emsp;⑤查看个人所有信息，只可以修改密码。 &emsp;5.3 数据库设计 总共六个表：学生表、教师表、管理员表、课程表、课程安排表、选课表。 &emsp;&emsp;管理员表admin 列名 类型 约束 备注 Aname Varchar（12） 主键 账号 Apassword 密码 &emsp;&emsp;学生表Student 列名 类型 约束 备注 Sid Char(12) 非空、主键 学号 Sname Varchar（8） 非空 姓名 Sidcard Char(18) 非空 身份证 Ssex Char(2) 男女 性别 Spassword Varchar(12) 非空 密码 Sage Char（2） 年龄 Classr Varchar（15） 班级 profession Varchar（15） 专业 College Varchar（15） 学院 &emsp;&emsp;教师表Teacher 列名 类型 约束 备注 Tid Char（4） 主键 工号 Tname Varchar(8) 姓名 Tpassword Varchar(12) 密码 Tsex Char(2) 男女 性别 Introduction Varchar（100） 简介 &emsp;&emsp;课程表course 列名 类型 约束 备注 Cid Char（4） 主键 课程号 Cname varChar(15) 课程名 Cintroduction Varchar（100） 简介 Type Varchar（15） 类型（选修，必修） Belongcoll Varchar（15） 所属学院 Belongpro Varchar（15） 所属专业 &emsp;&emsp;课程安排 列名 类型 约束 备注 Courseclass Varchar（12） 主键 开课班级 Coursetime Varchar（12） 上课时间 Courseweek Varchar（12） 上课周 Cid Char（4） 外键 课程号 Tid Char（4） 外键 教师编号 Classroom Varchar（6） 上课教室 credits Int（11） 学分 period Int（11） 学时 Totalnum Int（11） 总人数 &emsp;&emsp;选课表sc 列名 类型 约束 备注 Id varChar（4） 自动增长、主键 用于传值 Sid Char(12) 外键 学生学号 Cid Char（4） 外键 课程编号 &emsp;5.4 界面设计&emsp;登录（以管理员为例）&emsp;管理员登录界面，左侧栏可收缩 6.实现&emsp;6.1 程序结构 网上选课系统利用MVC设计模式，利用spring mvc框架，将其分为视图层、控制器层、模型层。视图层为jsp文件，分别存放在admin、teacher、student三个文件夹中，分别是管理员界面、教师界面、学生界面，而index和登录界面以及操作成功失败界面直接放在主目录；控制器层为servlet类，用来处理视图层发送的每个请求，存放在以域名翻转命名的包内：net.fuzui.servlet；模型层用来存放javabean类，分为实体bean和业务bean中，分别放在以域名翻转命名包net.fuzui.beans、net.fuzui.dao中，实体bean存放实体类，业务bean中存放数据库连接以及对数据库的操作，由servlet调用。 &emsp;6.2 应用技术及实现 &emsp;&emsp;在网上选课系统中，用到基于注解的spring mvc框架，在视图层中的每一次请求都会发送到控制器层，由servlet类通过注解识别请求，处理请求，需要用到数据库时则调用DAO。先通过配置web.xml以及springmvc.xml来应用框架，由@RequestMapping 来处理请求映射，在处理url和表单提交时，会自动根据url或者表单中参数的名字和方法中同名形参进行匹配并赋值。&emsp;&emsp;在添加学生、教师、课程信息时，通过jQuery运用ajax技术，如果添加的学号已存在，在输入框右侧会红字提示该学号已存在，不存在也会有提醒该学号可添加，教师工号、课程编号也如此。&emsp;&emsp;在学生界面查询选课结果时，利用了数据库表与表之间级联，通过选课表、课程表、课程安排表、教师表四表级联的sql语句，查询出课程名、班级名称、上课时间、教室、学分学时以及代课老师信息，并将此信息存放在一个实体类中，方便调用。&emsp;&emsp;在视图层的样式设计中，通过css设置背景色透明度渐变和背景图片透明度来实现整体视觉效果，在该系统中，表比较多，所以将表的样式也焕然一新。总界面分为左侧栏和显示栏，运用js，左侧栏通过点击相应图标可收缩隐藏。运用了el表达式和jstl标记，是界面更加简约。 6.展示和下载&emsp;项目展示：onlineSC.fuzui.net 管理员用户名admin，密码admin，以供测试，学生和教师账号密码可通过管理员登录查看。这个小项目里还是有不少bug的，不够完善。 &emsp;github源码：https://github.com/fuzui/onlineSC 最后附上项目目录：]]></content>
      <categories>
        <category>java-springMVC</category>
      </categories>
      <tags>
        <tag>项目</tag>
        <tag>springMVC</tag>
      </tags>
  </entry>
</search>
